{
  "name": "Banfield - Agentic Residual Workflow",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-sonnet-4-20250514",
          "mode": "list",
          "cachedResultName": "Claude Sonnet 4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        120,
        -940
      ],
      "id": "61441966-b92e-4b5f-8c93-2890d90b403c",
      "name": "Anthropic Chat Model",
      "credentials": {
        "anthropicApi": {
          "id": "VBFUHiMNrfhErSuo",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -3720,
        -1120
      ],
      "id": "72f63f9f-6a52-4d16-8f5d-83b783e16e1c",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Prompt - Market Value Agent').first().json.content }}\n\nREMEMBER: DO NOT INCLUDE AUCTION ITEMS!\n\nDO NOT INCLUDE ANY ITEMS FROM CANADA. \nNow, scrape the data from the following markdown: \n\n{{ $('Firecrawl for Markdown').item.json.data.markdown }}\n\n\n",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        160,
        -1200
      ],
      "id": "bb8362f2-7231-4e43-a6b1-e7af9efa3e44",
      "name": "Market Value Agent",
      "retryOnFail": true,
      "waitBetweenTries": 5000
    },
    {
      "parameters": {
        "content": "# 1. Load Prompts",
        "height": 1000,
        "width": 400,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -3200,
        -1480
      ],
      "id": "1b273789-1cb3-43c3-93b5-ec048f376837",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# 6. Calculations: Residual and OEC\n",
        "height": 1020,
        "width": 440
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        540,
        -1520
      ],
      "id": "f6e2a66a-e0b7-4c9a-ab5f-9087f4e893b7",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# 7. Inflation Considerations\n",
        "height": 500,
        "width": 640,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1000,
        -1860
      ],
      "id": "91f18aa0-39fa-4c99-aafd-86de7f1fe49b",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# 3. Do Firecrawl websearch for links\n\n",
        "height": 500,
        "width": 1400,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2380,
        -1140
      ],
      "id": "46a8a00e-e2ee-4cdb-871b-10a5680b7bbe",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "# 5. Scrape data from Markdown\n",
        "height": 980,
        "width": 900,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -400,
        -1340
      ],
      "id": "d5a2945c-e3cd-4a44-af3c-c6d626751489",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "# 10. Executive Summary Agent\n\n",
        "height": 520,
        "width": 1540
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        3500,
        -1220
      ],
      "id": "afe719aa-b955-4437-b0eb-d743eac9bf1c",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "content": "# 4. Find markdown vals from links",
        "height": 540,
        "width": 520,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -960,
        -1180
      ],
      "id": "c48cdc8d-2ed9-4a10-9b1b-f45a3d56344f",
      "name": "Sticky Note8"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.firecrawl.dev/v1/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\":\" {{$('Webhook').first().json.body.itemDescription}} for sale.\",\n  \"limit\":5,\n  \"tbs\":\"qdr:y\",\n  \"lang\":\"en\",\n  \"country\":\"us\",\n  \"location\": \"any\", \n  \"timeout\":60000,\n  \"ignoreInvalidURLs\":false,\n  \"scrapeOptions\":{\n    \"formats\" : [\"links\"]\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1340,
        -940
      ],
      "id": "0188f5dd-19f3-4138-b703-568e6e892bab",
      "name": "Search Firecrawl for URL LINKS",
      "retryOnFail": true,
      "credentials": {
        "httpHeaderAuth": {
          "id": "QWDflj93q53iegY7",
          "name": "Firecrawl"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -900,
        -1040
      ],
      "id": "9df4ef9a-a598-46ab-a12d-3a61b564b6fb",
      "name": "split out data"
    },
    {
      "parameters": {
        "fieldToSplitOut": "printUrls",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -660,
        -1040
      ],
      "id": "5bf7af4c-a9ea-40de-b988-4cf6d4cbd7aa",
      "name": "Split Out URLs of interest"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node - Parse Claude Response\n// This code extracts JSON data from Claude's response\n\n// Try different possible paths for the Claude response\nlet claudeResponse;\ntry {\n  const inputData = $('Market Value Agent').first().json\n  //const inputData = $('Market Value Agent').all()[0].json\n  \n  // Check various possible response structures\n  claudeResponse = inputData.content || \n                 inputData.text || \n                 inputData.response || \n                 inputData.body || \n                 inputData.message || \n                 inputData.output || \n                 inputData;\n                 \n  console.log('Claude response type:', typeof claudeResponse);\n  console.log('Claude response preview:', JSON.stringify(claudeResponse).substring(0, 200));\n} catch (error) {\n  console.error('Error accessing input data:', error);\n  return [{ json: { error: 'Could not access input data' } }];\n}\n\nfunction parseClaudeResponse(response) {\n  try {\n    // Method 1: If Claude returns pure JSON\n    if (typeof response === 'object' && Array.isArray(response)) {\n      return response;\n    }\n    \n    // Method 2: If Claude returns JSON as string\n    if (typeof response === 'string') {\n      // Try to parse as direct JSON\n      try {\n        const parsed = JSON.parse(response);\n        if (Array.isArray(parsed)) {\n          return parsed;\n        }\n      } catch (e) {\n        // Continue to next method\n      }\n      \n      // Method 3: Extract JSON from markdown code blocks\n      const jsonBlockRegex = /```json\\s*([\\s\\S]*?)\\s*```/i;\n      const match = response.match(jsonBlockRegex);\n      \n      if (match && match[1]) {\n        try {\n          const parsed = JSON.parse(match[1].trim());\n          return Array.isArray(parsed) ? parsed : [parsed];\n        } catch (e) {\n          console.error('Failed to parse JSON from code block:', e);\n        }\n      }\n      \n      // Method 4: Extract JSON array pattern\n      const arrayRegex = /\\[\\s*\\{[\\s\\S]*\\}\\s*\\]/;\n      const arrayMatch = response.match(arrayRegex);\n      \n      if (arrayMatch) {\n        try {\n          const parsed = JSON.parse(arrayMatch[0]);\n          return parsed;\n        } catch (e) {\n          console.error('Failed to parse JSON array:', e);\n        }\n      }\n      \n      // Method 5: Look for individual JSON objects\n      const objectRegex = /\\{[^{}]*(?:\\{[^{}]*\\}[^{}]*)*\\}/g;\n      const objects = response.match(objectRegex);\n      \n      if (objects) {\n        const validObjects = [];\n        objects.forEach(obj => {\n          try {\n            const parsed = JSON.parse(obj);\n            validObjects.push(parsed);\n          } catch (e) {\n            // Skip invalid JSON\n          }\n        });\n        \n        if (validObjects.length > 0) {\n          return validObjects;\n        }\n      }\n    }\n    \n    // If all methods fail, return empty array\n    console.warn('Could not extract valid JSON from Claude response');\n    return [];\n    \n  } catch (error) {\n    console.error('Error parsing Claude response:', error);\n    return [];\n  }\n}\n\n// Parse the response\nconst extractedData = parseClaudeResponse(claudeResponse);\n\nconsole.log('Extracted data count:', extractedData.length);\nconsole.log('First item preview:', extractedData[0]);\n\n// Validate and clean the data\nconst cleanedData = extractedData.map(item => {\n  return {\n    item_description: item.item_description || '',\n    year: item.year || '',\n    hours: item.hours || '',\n    serial_number: item.serial_number || '',\n    dealer: item.dealer || '',\n    seller_location: item.seller_location || '',\n    phone: item.phone || '',\n    price: item.price || '',\n    url_to_listing: item.url_to_listing || ''\n  };\n});\n\nconsole.log('Cleaned data count:', cleanedData.length);\n\n// Return the results for n8n\nif (cleanedData.length === 0) {\n  return [{ json: { error: 'No valid equipment data found', raw_response: claudeResponse } }];\n}\n\nreturn cleanedData.map((item, index) => ({\n  json: {\n    ...item,\n    index: index,\n    total_count: cleanedData.length\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        320,
        -940
      ],
      "id": "08390c9a-70f9-4522-8af2-bbde0d10bbfd",
      "name": "reformat into a list"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "={{ $('Create Market Comps Sheet').first().json.spreadsheetId}}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "Sheet1",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "item_description": "={{ $('reformat into a list').item.json.item_description}}",
            "hours": "={{ $('reformat into a list').item.json.hours}}",
            "serial_number": "={{ $('reformat into a list').item.json.serial_number}}",
            "dealer": "={{ $('reformat into a list').item.json.dealer}}",
            "seller_location": "={{ $('reformat into a list').item.json.seller_location}}",
            "phone": "={{ $('reformat into a list').item.json.phone}}",
            "price": "={{ $('reformat into a list').item.json.price}}",
            "url_to_listing": "={{ $('reformat into a list').item.json.url_to_listing}}",
            "year": "={{ $('reformat into a list').item.json.year}}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "item_description",
              "displayName": "item_description",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "year",
              "displayName": "year",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "hours",
              "displayName": "hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "serial_number",
              "displayName": "serial_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "dealer",
              "displayName": "dealer",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "seller_location",
              "displayName": "seller_location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "phone",
              "displayName": "phone",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "price",
              "displayName": "price",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "url_to_listing",
              "displayName": "url_to_listing",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "index",
              "displayName": "index",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "total_count",
              "displayName": "total_count",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        320,
        -580
      ],
      "id": "85eafd86-828e-4bd0-90c4-d9fc3ce5b341",
      "name": "Add results from search",
      "alwaysOutputData": false,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GiAHEXtMUmejLsMw",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -220,
        -1240
      ],
      "id": "cb917c0f-6f99-4381-9a4c-f52fdf576394",
      "name": "Loop Over URLS"
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"inflation_data\": {\n    \"yearly\": [\n      {\n        \"year\": 2004,\n        \"cpi_u\": 0.914,\n        \"annual_rate\": 2.7\n      },\n      {\n        \"year\": 2005,\n        \"cpi_u\": 0.944,\n        \"annual_rate\": 3.4\n      },\n      {\n        \"year\": 2006,\n        \"cpi_u\": 0.973,\n        \"annual_rate\": 3.2\n      },\n      {\n        \"year\": 2007,\n        \"cpi_u\": 1.000,\n        \"annual_rate\": 2.8\n      },\n      {\n        \"year\": 2008,\n        \"cpi_u\": 1.037,\n        \"annual_rate\": 3.8\n      },\n      {\n        \"year\": 2009,\n        \"cpi_u\": 1.015,\n        \"annual_rate\": -0.4\n      },\n      {\n        \"year\": 2010,\n        \"cpi_u\": 1.033,\n        \"annual_rate\": 1.6\n      },\n      {\n        \"year\": 2011,\n        \"cpi_u\": 1.068,\n        \"annual_rate\": 3.1\n      },\n      {\n        \"year\": 2012,\n        \"cpi_u\": 1.090,\n        \"annual_rate\": 2.1\n      },\n      {\n        \"year\": 2013,\n        \"cpi_u\": 1.106,\n        \"annual_rate\": 1.5\n      },\n      {\n        \"year\": 2014,\n        \"cpi_u\": 1.112,\n        \"annual_rate\": 0.1\n      },\n      {\n        \"year\": 2015,\n        \"cpi_u\": 1.112,\n        \"annual_rate\": 0.1\n      },\n      {\n        \"year\": 2016,\n        \"cpi_u\": 1.125,\n        \"annual_rate\": 1.3\n      },\n      {\n        \"year\": 2017,\n        \"cpi_u\": 1.151,\n        \"annual_rate\": 2.1\n      },\n      {\n        \"year\": 2018,\n        \"cpi_u\": 1.175,\n        \"annual_rate\": 2.4\n      },\n      {\n        \"year\": 2019,\n        \"cpi_u\": 1.193,\n        \"annual_rate\": 1.8\n      },\n      {\n        \"year\": 2020,\n        \"cpi_u\": 1.207,\n        \"annual_rate\": 1.2\n      },\n      {\n        \"year\": 2021,\n        \"cpi_u\": 1.298,\n        \"annual_rate\": 4.7\n      },\n      {\n        \"year\": 2022,\n        \"cpi_u\": 1.403,\n        \"annual_rate\": 8.0\n      },\n      {\n        \"year\": 2023,\n        \"cpi_u\": 1.446,\n        \"annual_rate\": 4.1\n      },\n      {\n        \"year\": 2024,\n        \"cpi_u\": 1.489,\n        \"annual_rate\": 3.2\n      }\n    ]\n  },\n  \"analysis\": {\n    \"data_sources\": [\n      \"U.S. Bureau of Labor Statistics - Consumer Price Index for All Urban Consumers (CPI-U)\"\n    ],\n    \"methodology\": \"Historical CPI-U data collected from official BLS publications, normalized to standard format used in equipment valuation models with 2007 as base year (1.000)\",\n    \"key_trends\": [\n      \"Steady inflation from 2004-2007 averaging 2.8% annually\",\n      \"Financial crisis impact in 2008-2009 with deflationary pressure in 2009\",\n      \"Recovery period 2010-2019 with moderate 1.5-2.5% inflation\",\n      \"Pandemic-era surge 2021-2022 reaching 8%+ peaks\",\n      \"Gradual normalization 2023-2024 returning toward 3% target\"\n    ],\n    \"industry_specific_factors\": [\n      \"Construction equipment values closely track general CPI-U trends with 6-month lag\",\n      \"Steel and commodity price volatility amplifies equipment price swings by 15-25%\",\n      \"Supply chain disruptions 2020-2022 created above-normal depreciation protection\",\n      \"Technology integration affects residual value calculations for equipment over 5 years old\",\n      \"Emissions regulations drive equipment obsolescence patterns, particularly for Tier 2/3 engines\"\n    ],\n    \"forecast\": \"Inflation expected to moderate to 2.5-3.5% range through 2025-2026, with construction equipment values stabilizing after recent volatility. Heavy equipment depreciation rates may normalize to pre-pandemic levels by mid-2025.\"\n  }\n}"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.2,
      "position": [
        1460,
        -1500
      ],
      "id": "16d80721-1418-4c35-8bfc-0c2e80050dee",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Prompt - Inflation Agent').first().json.content }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a data analysis system that ONLY outputs valid JSON. Never include explanatory text or markdown formatting.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1320,
        -1760
      ],
      "id": "aab2542c-afde-4fff-99b8-c9ffd5b71f28",
      "name": "Inflation Agent",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-sonnet-4-20250514",
          "mode": "list",
          "cachedResultName": "Claude Sonnet 4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        1220,
        -1520
      ],
      "id": "4c3057ed-0d88-4bd0-87ee-a9ed054358de",
      "name": "Anthropic Chat Model2",
      "credentials": {
        "anthropicApi": {
          "id": "VBFUHiMNrfhErSuo",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-opus-4-20250514",
          "mode": "list",
          "cachedResultName": "Claude Opus 4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        4480,
        -900
      ],
      "id": "84cb277e-cfcc-47ff-8e14-620a54d5159f",
      "name": "Anthropic Chat Model3",
      "credentials": {
        "anthropicApi": {
          "id": "VBFUHiMNrfhErSuo",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Executive Summary Generator Tool Agent \n\nYou are the Executive President of Asset Management International, a Certified Asset Appraiser and Certified Automotive Fleet Manager, who utilizes current market conditions (inflation, depreciation, market values) to make an informed assessment of the asset's current residual value (in $) and percentage (%). You will use your expertise to provide High and Low residual values over various lease terms for a given asset.\n\nCreate a comprehensive equipment valuation report by analyzing and synthesizing data from multiple upstream analysis agents. Integrate depreciation data, market conditions, inflation analysis, utilization patterns, market comparisons, and risk factors to produce a professional executive summary for equipment leasing and valuation requests.\n\nYour analysis must incorporate data from the following five upstream sources:\n\nInflation, Utilization, Depreciation, OEC & Residual Value Analysis, and Market Comps. \n\n--- OBJECTIVES --- Address the following:\n\nI. Integrated Depreciation Analysis\nSynthesize depreciation data with inflation trends\nCalculate inflation-adjusted depreciation curves for all lease terms (12-120 months)\nProvide retail, market, and wholesale values incorporating market comparison data \nReference specific depreciation method recommendations from financial_summary\n\nII. Market-Informed Risk Assessment\nIntegrate utilization patterns \nCross-reference market positioning\nAssess inflation risk forecast and industry_specific_factors\nEvaluate competitive positioning using market comparison data\nProvide risk mitigation strategies based on comprehensive market analysis\n\nIII. Advanced Market Analysis\nSynthesize current market conditions using all data sources\nReference specific market trends \nIncorporate inflation forecast impact on future values \nAnalyze utilization efficiency patterns  for value optimization\nCompare against market benchmarks using residual value data\nAge and Usage\nMarket Position\nApplication Suitability\nTechnology Factors, Assess obsolescence risk using market trend data and competitive analysis\n\nIV. Financial Analysis Focus (Multi-Source Integration)\nDepreciation Patterns\nMarket Comparables\nInflation Adjustment\nUtilization Optimization, Incorporate efficiency insights from analysis\nRisk-Adjusted Returns, Factor comprehensive risk assessment from all data sources\n\nV. Professional Recommendations (Evidence-Based)\nStrategic Insights, Base recommendations on integrated data analysis\nRisk Management, Offer specific mitigation strategies referencing supporting data\nMarket Timing, Use inflation forecast and market trend data for optimal timing advice\nValue Optimization, Reference specific utilization targets and market positioning strategies\n\nVI. Response Format Instructions\nData Integration: Always reference specific data sources when making claims\nProfessional Tone: Use formal business language with quantitative support\nVisual References: Include references to charts and visualizations where relevant\nActionable Content: Ensure recommendations are specific and supported by data analysis\nRisk-Focused: Clearly articulate risks with supporting evidence from multiple data sources\nFuture-Oriented: Include forward-looking insights based on inflation forecasts and market trends\n\nVII. Quality Standards\n\nSynthesize insights from all FIVE data sources in executive summary\nEnsure all monetary values reflect inflation adjustments where applicable\nReference specific chart URLs and data visualizations in supporting analysis section\nProvide 5-7 key findings that demonstrate integration of multiple analytical perspectives\nOffer 3-5 specific, actionable recommendations supported by data evidence\nIdentify 4-6 concrete next steps with clear data-driven rationale\n\nVIII. Error Handling\n\nIf any data source is missing or incomplete:\n\nIdentify specifically which data sources are available/missing\nProvide analysis based on available data with noted limitations\nSuggest impact of missing data on analysis accuracy\nRecommend additional data collection priorities\nGenerate the executive summary based on the aggregated data from all upstream analysis agents, ensuring comprehensive integration of inflation analysis, utilization patterns, market comparisons, depreciation modeling, residual value analysis, and competitive positioning data while maintaining professional standards suitable for executive decision-making.\n\nCITE ALL SOURCES, AND APPLICABLE TAX CODE NUMBER FOR THE SUBJECT ASSET CLASS.\n\n--- DATASOURCES: \n\n1. Inflation Analysis\n\nINFLATION DATA FOUND HERE ---> {{ $('combine all data sources').item.json.data[0].output.toJsonString() }}\n\n2. Utilization vs Price Analysis\n\nUTILIZATION VS PRICE DATA FOUND HERE --->: ---> {{ $('combine all data sources').item.json.data[1].toJsonString() }}\n\n3. Depreciation Analysis & Financial Summary\n\nDEPRECIATION ANALYSIS & FINANCIAL DATA FOUND HERE ---> {{ $('combine all data sources').item.json.data[3].toJsonString() }}\n\n4. OEC and Residual Value Analysis\ntableUrl: Comprehensive residual value analysis table\ndataSource: Multiple comparable equipment data points including:\nOriginal Equipment Cost (OEC) estimates\nResidual percentages at various time intervals\nYear-over-year value retention analysis\nEffective age calculations\nMarket condition adjustments\n\nOEC AND RESIDUAL DATA FOUND HERE ---> {{ $('Determine Residual and OEC').all().toJsonString() }}\n\n5. Market Comparison Chart\nUse Agent Tool to view The Market Comparison data from Google Sheet.\n\nMARKET COMPS DATA FOUND HERE ---> {{ $('market_comps_list').all().toJsonString() }}\n\n\n\nHere is an example of the format, USE CALCULATED VALUES, NOT THE ONES IN THE EXAMPLE!\nONLY OUTPUT DATA IN THIS JSON FORMAT!\n\n{\n  \"executive_summary\": {\n    \"overview\": \"Brief overview incorporating equipment specs, market position, and utilization analysis\",\n    \"key_findings\": [\n      \"5-7 key findings synthesized from all data sources\",\n      \"Include specific references to inflation impact, utilization efficiency, and market positioning\",\n      \"Reference depreciation method recommendations and tax implications\",\n      \"Highlight competitive advantages/disadvantages from market comparison data\"\n    ],\n    \"market_conditions\": \"Current market conditions integrating inflation analysis, competitive landscape, and demand patterns\",\n    \"utilization_analysis\": {\n      \"current_utilization\": \"Analysis from scatter plot data showing utilization vs price correlation\",\n      \"efficiency_rating\": \"Equipment utilization efficiency relative to market\",\n      \"optimization_opportunities\": \"Recommendations for improving utilization and value retention\"\n    },\n    \"inflation_impact\": {\n      \"current_effects\": \"How current inflation trends affect equipment values\",\n      \"forecast_implications\": \"Forward-looking inflation impact on residual values\",\n      \"mitigation_strategies\": \"Specific strategies to minimize inflation risk\"\n    },\n    \"competitive_positioning\": {\n      \"market_share\": \"Equipment positioning within make/model segments from histogram data\",\n      \"competitive_advantages\": \"Key differentiators based on market comparison analysis\",\n      \"market_trends\": \"Relevant trends affecting competitive position\"\n    },\n    \"risk_assessment\": {\n      \"risks\": [\n        \"Comprehensive risk list incorporating all data sources\",\n        \"Include inflation risk, utilization risk, competitive risk, and market timing risk\"\n      ],\n      \"mitigation_strategies\": [\n        \"Data-driven mitigation strategies based on analysis findings\",\n        \"Reference specific market data and depreciation analysis\"\n      ]\n    },\n    \"recommendations\": [\n      \"Actionable recommendations incorporating all analytical insights\",\n      \"Include optimal lease terms based on depreciation analysis\",\n      \"Reference specific utilization targets and market timing strategies\"\n    ],\n    \"next_steps\": [\n      \"Specific action items with data-driven rationale\",\n      \"Include references to supporting analysis and visualizations\"\n    ]\n  },\n  \"asset_management_table\": {\n    \"subject_price\": \"Current market price in USD\",\n    \"subject_year\": \"Equipment model year\",\n    \"hpy_or_mpy\": \"Hours per year or miles per year usage estimate\",\n    \"resid_hi_percent\": [\n      \"12-month high residual %\",\n      \"24-month high residual %\",\n      \"36-month high residual %\",\n      \"48-month high residual %\",\n      \"60-month high residual %\",\n      \"72-month high residual %\",\n      \"84-month high residual %\",\n      \"96-month high residual %\",\n      \"108-month high residual %\",\n      \"120-month high residual %\"\n    ],\n    \"resid_hi_dollar\": [\n      \"12-month high residual $\",\n      \"24-month high residual $\",\n      \"36-month high residual $\",\n      \"48-month high residual $\",\n      \"60-month high residual $\",\n      \"72-month high residual $\",\n      \"84-month high residual $\",\n      \"96-month high residual $\",\n      \"108-month high residual $\",\n      \"120-month high residual $\"\n    ],\n    \"resid_lo_percent\": [\n      \"12-month low residual %\",\n      \"24-month low residual %\",\n      \"36-month low residual %\",\n      \"48-month low residual %\",\n      \"60-month low residual %\",\n      \"72-month low residual %\",\n      \"84-month low residual %\",\n      \"96-month low residual %\",\n      \"108-month low residual %\",\n      \"120-month low residual %\"\n    ],\n    \"resid_lo_dollar\": [\n      \"12-month low residual $\",\n      \"24-month low residual $\",\n      \"36-month low residual $\",\n      \"48-month low residual $\",\n      \"60-month low residual $\",\n      \"72-month low residual $\",\n      \"84-month low residual $\",\n      \"96-month low residual $\",\n      \"108-month low residual $\",\n      \"120-month low residual $\"\n    ]\n  },\n  \"valuation_details\": {\n    \"initial_value\": \"Initial equipment value with inflation adjustment methodology\",\n    \"depreciation_method_recommended\": \"Optimal depreciation method from financial_summary analysis\",\n    \"tax_optimization_notes\": \"Key tax benefits and cash flow implications\",\n    \"applicable_tax_code\": \"Specific tax code section applicable to subject asset class\",\n    \"48_month_values\": {\n      \"retail\": \"48-month retail value (inflation-adjusted)\",\n      \"market\": \"48-month market value with market comparison context\",\n      \"wholesale\": \"48-month wholesale value with utilization factor adjustment\"\n    },\n    \"60_month_values\": {\n      \"retail\": \"60-month retail value (inflation-adjusted)\",\n      \"market\": \"60-month market value with market comparison context\",\n      \"wholesale\": \"60-month wholesale value with utilization factor adjustment\"\n    },\n    \"72_month_values\": {\n      \"retail\": \"72-month retail value (inflation-adjusted)\",\n      \"market\": \"72-month market value with market comparison context\",\n      \"wholesale\": \"72-month wholesale value with utilization factor adjustment\"\n    },\n    \"residual_value_analysis\": {\n      \"oec_estimates\": \"Original Equipment Cost estimates from comparable analysis\",\n      \"residual_percentages\": \"Residual percentages at key intervals from market data\",\n      \"market_adjustment_factors\": \"Specific adjustments based on current market conditions\"\n    }\n  },\n  \"supporting_analysis\": {\n    \"inflation_analysis_reference\": \"Key insights from data[0] inflation analysis\",\n    \"utilization_chart_reference\": \"Reference to data[1] scatter plot findings\",\n    \"market_histogram_insights\": \"Key insights from data[2] histogram analysis\",\n    \"depreciation_chart_reference\": \"Reference to data[3] depreciation visualizations\",\n    \"residual_table_reference\": \"Key findings from data[4] residual value analysis\",\n    \"market_comparison_reference\": \"Insights from data[5] market comparison chart\"\n  }\n}\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You are a data analysis system that ONLY outputs valid JSON. Never include explanatory text or markdown formatting.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        4580,
        -1140
      ],
      "id": "0092b1a3-e448-42af-bfe6-28c348db3117",
      "name": "Executive Summary Agent",
      "alwaysOutputData": true,
      "executeOnce": false
    },
    {
      "parameters": {
        "language": "python",
        "pythonCode": "import json\n\n# Get input data\ninput_data = items[0]['json']\n\n# Extract text from various possible locations\nif 'data' in input_data:\n    input_text = input_data['data']\nelif 'markdown' in input_data:\n    input_text = input_data['markdown']\nelif isinstance(input_data, str):\n    input_text = input_data\nelse:\n    input_text = str(input_data)\n\n# Ensure we have a string\ninput_text = str(input_text)\n\n# Split by equipment listings\nlistings = input_text.split('##')[1:]  # Skip first empty element\n\nprocessed_listings = []\nfor listing in listings[:5]:  # Take first 5 listings\n    lines = [line.strip() for line in listing.split('\\n') if line.strip()]\n    \n    # Find price line\n    price_line = next((line for line in lines if '$' in line or 'Current Bid' in line), '')\n    \n    # Find location line\n    location_line = next((line for line in lines if 'Location:' in line), '')\n    \n    processed_listings.append({\n        'title': lines[0] if lines else '',\n        'price': price_line,\n        'location': location_line,\n        'details': ' '.join(lines[1:4]) if len(lines) > 1 else ''\n    })\n\nreturn [{'json': {'listings': processed_listings}}]"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        -780
      ],
      "id": "1e351d1e-184a-44cf-a3d7-f42668822e77",
      "name": "split incoming data",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.firecrawl.dev/v1/search",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"query\":\" {{ $('Loop Over Assets').item.json.Description}} for sale.\",\n  \"limit\":5,\n  \"tbs\":\"june 2025\",\n  \"lang\":\"en\",\n  \"country\":\"us\",\n  \"location\": \"any\", \n  \"timeout\":60000,\n  \"ignoreInvalidURLs\":false,\n  \"scrapeOptions\":{\n    \"formats\" : [\"links\"]\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1000,
        720
      ],
      "id": "ec434914-e298-44c5-87c7-ad65e8b4bcfd",
      "name": "Search Firecrawl for URL LINKS1",
      "credentials": {
        "httpHeaderAuth": {
          "id": "QWDflj93q53iegY7",
          "name": "Firecrawl"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "data",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -680,
        720
      ],
      "id": "e8027ef3-6455-41c9-9255-e59d38acb7c2",
      "name": "split out data1",
      "disabled": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -380,
        720
      ],
      "id": "0c7c565d-d8c8-4d5a-90b5-5af3356f49d4",
      "name": "Loop Over Items1",
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.firecrawl.dev/v1/scrape",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"url\": \"{{$('Loop Over Items1').item.json.url}}\",\n  \"formats\": [\"json\"],\n  \"actions\": [\n    {\n      \"type\": \"click\",\n      \"selector\": \"#view-listing-details-link\"\n    },\n    {\n      \"type\": \"wait\",\n      \"milliseconds\": 2000\n    }\n  ],\n  \"jsonOptions\": {\n    \"prompt\": \"Extract the item description, year, hours, serial number, dealer, seller location, phone, price, lot number, and URL to listing from this equipment auction page.\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -60,
        740
      ],
      "id": "9cb0ce8d-005c-446f-af0d-fc417a4cb0fd",
      "name": "Firecrawl Adv Scrape Request",
      "credentials": {
        "httpHeaderAuth": {
          "id": "QWDflj93q53iegY7",
          "name": "Firecrawl"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.firecrawl.dev/v1/scrape",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"url\": \"{{$('Loop Over URLS').item.json.printUrls}}\",\n  \"formats\": [\"markdown\"],\n  \"onlyMainContent\": true,\n    \"excludeTags\": [\n      \"header\", \n      \"footer\", \n      \"nav\", \n      \".ad\", \n      \".advertisement\", \n      \".banner\", \n      \".sidebar\", \n      \".menu\", \n      \".navigation\", \n      \".breadcrumb\",\n      \".social-share\",\n      \".related-links\",\n      \".comments\",\n      \"#header\",\n      \"#footer\", \n      \"#navigation\",\n      \"#sidebar\",\n      \"#ads\"\n    ],\n    \"includeTags\": [\n      \".listing-details\",\n      \".equipment-info\", \n      \".specifications\",\n      \".dealer-info\",\n      \".price-info\",\n      \"main\",\n      \".content\",\n      \".listing-content\"\n    ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -20,
        -1080
      ],
      "id": "25ca141a-3077-4b79-b233-ab3129914251",
      "name": "Firecrawl for Markdown",
      "retryOnFail": true,
      "waitBetweenTries": 5000,
      "credentials": {
        "httpHeaderAuth": {
          "id": "QWDflj93q53iegY7",
          "name": "Firecrawl"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "={{ $('Create Residuals Calcs Sheet').first().json.spreadsheetId }}",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "Sheet1",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [],
          "schema": [
            {
              "id": "Source",
              "displayName": "Source",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Make",
              "displayName": "Make",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Model",
              "displayName": "Model",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Location",
              "displayName": "Location",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Year model",
              "displayName": "Year model",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Age",
              "displayName": "Age",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hours - total",
              "displayName": "Hours - total",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Hours - per year",
              "displayName": "Hours - per year",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Current Price",
              "displayName": "Current Price",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Price Type",
              "displayName": "Price Type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "OEC (estimate)",
              "displayName": "OEC (estimate)",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Resid",
              "displayName": "Resid",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "YoY",
              "displayName": "YoY",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "20%",
              "displayName": "20%",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "$ Value (20%)",
              "displayName": "$ Value (20%)",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "35%",
              "displayName": "35%",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "$ Value (35%)",
              "displayName": "$ Value (35%)",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Notes",
              "displayName": "Notes",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Effective Age",
              "displayName": "Effective Age",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        620,
        -960
      ],
      "id": "4929e6fc-31dc-4ba6-93ed-8835219515b0",
      "name": "Save Residual Data",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GiAHEXtMUmejLsMw",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1_vzi0TXjMmIi8mmCcKS9j6p8wW6bHu5jSdupmrduWN8",
          "mode": "list",
          "cachedResultName": "Items for Valuation",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1_vzi0TXjMmIi8mmCcKS9j6p8wW6bHu5jSdupmrduWN8/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1_vzi0TXjMmIi8mmCcKS9j6p8wW6bHu5jSdupmrduWN8/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -2620,
        -1040
      ],
      "id": "92736a88-c974-4d2e-8ae8-ef756c8a1343",
      "name": "Gather Assets for Evaluation",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GiAHEXtMUmejLsMw",
          "name": "Google Sheets account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "content": "# 9. Make Plots\n\n\n",
        "height": 1460,
        "width": 1680,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1700,
        -1680
      ],
      "id": "5be8b453-5d74-438e-b716-555c709ba5fa",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "# 11. Send Summary Email\n\n\n",
        "height": 420,
        "width": 1320,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        5080,
        -1160
      ],
      "id": "21bc112b-e32d-4bbf-9470-648ae8d145f8",
      "name": "Sticky Note9"
    },
    {
      "parameters": {
        "options": {
          "reset": true
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -2240,
        -1060
      ],
      "id": "9a480e4d-6769-448a-8e7e-250731853466",
      "name": "Loop Over Assets",
      "disabled": true
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        820,
        -740
      ],
      "id": "c09e39eb-de53-4356-8659-a07d9a743a9b",
      "name": "Aggregated Data"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node for QuickChart Scatter Plot\n// Input: items with \"Hours - total\" and \"Current Price\" fields\n\n// Process the input data to extract scatter plot points\nconst scatterData = [];\n\n// Get the input data - it should be from the \"Aggregated Data\" node\nconst inputData = $input.all();\n\n// Check if data is nested under 'data' property\nlet dataToProcess = [];\nif (inputData.length > 0 && inputData[0].json && inputData[0].json.data) {\n  // Data is nested under 'data' property\n  dataToProcess = inputData[0].json.data;\n} else {\n  // Data is directly in the items\n  dataToProcess = inputData.map(item => item.json);\n}\n\nfor (const dataItem of dataToProcess) {\n  // Extract hours (x-axis)\n  const hours = parseInt(dataItem['Hours - total'] || 0);\n  \n  // Extract and clean current price (y-axis) - remove $ and convert to float\n  let price = dataItem['Current Price'] || '0';\n  if (typeof price === 'string') {\n    price = price.replace(/[$,]/g, ''); // Remove $ and commas\n  }\n  const currentPrice = parseFloat(price) || 0;\n  \n  // Add to scatter data if both values are valid\n  if (hours > 0 && currentPrice > 0) {\n    scatterData.push({\n      x: hours,\n      y: currentPrice\n    });\n  }\n}\n\n// Create Chart.js configuration for scatter plot\nconst scatterChartConfig = {\n  type: 'scatter',\n  data: {\n    datasets: [{\n      label: 'Equipment Hours vs Price',\n      data: scatterData,\n      backgroundColor: 'rgba(54, 162, 235, 0.6)',\n      borderColor: 'rgba(54, 162, 235, 1)',\n      borderWidth: 1,\n      pointRadius: 5\n    }]\n  },\n  options: {\n    responsive: true,\n    title: {\n      display: true,\n      text: 'Equipment Hours vs Current Price'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom',\n        scaleLabel: {\n          display: true,\n          labelString: 'Hours - Total'\n        }\n      }],\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Current Price ($)'\n        },\n        ticks: {\n          callback: function(value) {\n            return '$' + value.toLocaleString();\n          }\n        }\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem) {\n          return 'Hours: ' + tooltipItem.xLabel + ', Price: $' + tooltipItem.yLabel.toLocaleString();\n        }\n      }\n    }\n  }\n};\n\n// Generate QuickChart URL\nconst baseUrl = 'https://quickchart.io/chart';\nconst chartConfigJson = JSON.stringify(scatterChartConfig);\nconst encodedConfig = encodeURIComponent(chartConfigJson);\nconst plot_url = `${baseUrl}?c=${encodedConfig}&width=800&height=600`;\n\n// Return the result\nreturn [\n  {\n    json: {\n      plot_url: plot_url,\n      data_points: scatterData.length,\n      chart_config: scatterChartConfig\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2080,
        -1480
      ],
      "id": "5de7e840-06a5-48fb-8658-4826931f13f5",
      "name": "prep for scatter plot"
    },
    {
      "parameters": {
        "url": "={{ $json.plot_url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "chart"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2740,
        -1580
      ],
      "id": "a2f3e7d6-35d3-44ca-ac24-848ef997f171",
      "name": "Make Hrs Vs Price Scatter Plot",
      "retryOnFail": true
    },
    {
      "parameters": {
        "url": "={{ $json.histograms[0].chartUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "chart"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4480,
        840
      ],
      "id": "4c2fb8b0-7939-4455-bdb3-25a25845b42f",
      "name": "Make Histograms",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node for Creating Individual Histogram Charts\n// This creates separate histogram URLs that you can loop through\n\n// Get the transformed data from the Aggregated Data node\nconst aggregatedNode = $('Aggregated Data').first();\nconst inputData = aggregatedNode.json.data || [];\n\n// Filter out the AVERAGES row\nconst cleanData = inputData.filter(item => item.Source !== 'AVERAGES');\n\nconsole.log(`Processing ${cleanData.length} data items for individual histograms`);\n\n// Helper function to create bins for numerical data\nfunction createBins(values, numBins = 8) {\n    if (values.length === 0) return { labels: [], counts: [] };\n    \n    const min = Math.min(...values);\n    const max = Math.max(...values);\n    const binSize = (max - min) / numBins;\n    \n    const bins = [];\n    const binCounts = new Array(numBins).fill(0);\n    \n    for (let i = 0; i < numBins; i++) {\n        const binStart = min + (i * binSize);\n        const binEnd = min + ((i + 1) * binSize);\n        bins.push(`${Math.round(binStart)}-${Math.round(binEnd)}`);\n    }\n    \n    values.forEach(value => {\n        let binIndex = Math.floor((value - min) / binSize);\n        if (binIndex >= numBins) binIndex = numBins - 1;\n        binCounts[binIndex]++;\n    });\n    \n    return { labels: bins, counts: binCounts };\n}\n\n// Helper function to create categorical histogram\nfunction createCategoricalHistogram(values) {\n    const counts = {};\n    \n    values.forEach(value => {\n        const upperValue = value.toString().toUpperCase();\n        counts[upperValue] = (counts[upperValue] || 0) + 1;\n    });\n    \n    const sortedEntries = Object.entries(counts)\n        .sort((a, b) => b[1] - a[1]);\n    \n    return {\n        labels: sortedEntries.map(entry => entry[0]),\n        counts: sortedEntries.map(entry => entry[1])\n    };\n}\n\n// Helper function to extract numerical values\nfunction extractNumericalValues(values, fieldName) {\n    const numericalValues = [];\n    \n    values.forEach(value => {\n        if (value === '' || value === null || value === undefined) return;\n        \n        let cleanValue;\n        if (fieldName === 'Current Price') {\n            const priceStr = value.toString().replace(/[$,\\s]/g, '');\n            cleanValue = parseFloat(priceStr);\n        } else if (fieldName.includes('%') || fieldName.includes('Resid') || fieldName.includes('YoY')) {\n            cleanValue = parseFloat(value.toString().replace(/[%\\s]/g, ''));\n        } else {\n            cleanValue = parseFloat(value.toString().replace(/[^\\d.-]/g, ''));\n        }\n        \n        if (!isNaN(cleanValue) && cleanValue > 0) {\n            numericalValues.push(cleanValue);\n        }\n    });\n    \n    return numericalValues;\n}\n\n// Define all fields to create histograms for\nconst fieldsToAnalyze = [\n    { field: 'Make', type: 'categorical', color: '#FF6384' },\n    { field: 'Model', type: 'categorical', color: '#36A2EB' },\n    { field: 'Location', type: 'categorical', color: '#FFCE56' },\n    { field: 'Year model', type: 'numerical', color: '#4BC0C0' },\n    { field: 'Age', type: 'numerical', color: '#9966FF' },\n    { field: 'Hours - total', type: 'numerical', color: '#FF9F40' },\n    { field: 'Hours - per year', type: 'numerical', color: '#FF6384' },\n    { field: 'Current Price', type: 'numerical', color: '#C9CBCF' },\n    { field: 'Price Type', type: 'categorical', color: '#4BC0C0' }\n];\n\n// Create individual histogram configurations and URLs\nconst histogramCharts = [];\n\nfieldsToAnalyze.forEach((fieldConfig, index) => {\n    const fieldName = fieldConfig.field;\n    const values = cleanData.map(item => item[fieldName]).filter(v => v !== '' && v !== null && v !== undefined);\n    \n    if (values.length === 0) {\n        console.log(`Skipping ${fieldName} - no valid data`);\n        return;\n    }\n    \n    let chartData;\n    let xAxisLabel = fieldName;\n    \n    if (fieldConfig.type === 'categorical') {\n        chartData = createCategoricalHistogram(values);\n    } else {\n        const numericalValues = extractNumericalValues(values, fieldName);\n        if (numericalValues.length === 0) {\n            console.log(`Skipping ${fieldName} - no valid numerical data`);\n            return;\n        }\n        chartData = createBins(numericalValues);\n        \n        // Add units to axis labels\n        if (fieldName === 'Current Price') xAxisLabel = 'Price Range ($)';\n        else if (fieldName.includes('Age')) xAxisLabel = 'Age (Years)';\n        else if (fieldName.includes('Hours')) xAxisLabel = 'Hours';\n        else if (fieldName.includes('Year')) xAxisLabel = 'Year';\n    }\n    \n    // Create individual chart configuration\n    const chartConfig = {\n        type: 'bar',\n        data: {\n            labels: chartData.labels,\n            datasets: [{\n                label: 'Count',\n                data: chartData.counts,\n                backgroundColor: fieldConfig.color,\n                borderColor: fieldConfig.color,\n                borderWidth: 1\n            }]\n        },\n        options: {\n            responsive: true,\n            title: {\n                display: true,\n                text: `${fieldName} Distribution`,\n                fontSize: 16,\n                fontColor: '#333',\n                fontStyle: 'bold'\n            },\n            scales: {\n                yAxes: [{\n                    ticks: {\n                        beginAtZero: true,\n                        stepSize: 1\n                    },\n                    scaleLabel: {\n                        display: true,\n                        labelString: 'Count',\n                        fontSize: 12\n                    }\n                }],\n                xAxes: [{\n                    scaleLabel: {\n                        display: true,\n                        labelString: xAxisLabel,\n                        fontSize: 12\n                    },\n                    ticks: {\n                        maxRotation: 45,\n                        fontSize: 10\n                    }\n                }]\n            },\n            legend: {\n                display: false\n            },\n            tooltips: {\n                callbacks: {\n                    title: function(tooltipItems, data) {\n                        return `${xAxisLabel}: ${tooltipItems[0].label}`;\n                    },\n                    label: function(tooltipItem, data) {\n                        return `Count: ${tooltipItem.yLabel}`;\n                    }\n                }\n            }\n        }\n    };\n    \n    // Generate URL for this chart\n    const chartConfigEncoded = encodeURIComponent(JSON.stringify(chartConfig));\n    const chartUrl = `https://quickchart.io/chart?c=${chartConfigEncoded}&width=600&height=400&backgroundColor=white`;\n    \n    histogramCharts.push({\n        index: index,\n        fieldName: fieldName,\n        fieldType: fieldConfig.type,\n        chartUrl: chartUrl,\n        dataCount: values.length,\n        uniqueValues: chartData.labels.length,\n        chartConfig: chartConfig,\n        maxCount: Math.max(...chartData.counts),\n        distributionData: {\n            labels: chartData.labels,\n            counts: chartData.counts\n        }\n    });\n    \n    console.log(`Created histogram for ${fieldName}: ${chartData.labels.length} categories/bins, ${values.length} data points`);\n});\n\n// Create summary statistics\nconst summaryStats = {\n    totalRecords: cleanData.length,\n    totalHistograms: histogramCharts.length,\n    categoricalFields: histogramCharts.filter(h => h.fieldType === 'categorical').length,\n    numericalFields: histogramCharts.filter(h => h.fieldType === 'numerical').length,\n    fieldSummary: histogramCharts.map(h => ({\n        field: h.fieldName,\n        type: h.fieldType,\n        dataCompleteness: Math.round((h.dataCount / cleanData.length) * 100),\n        uniqueValues: h.uniqueValues\n    }))\n};\n\n// Return array with individual histogram data\nreturn [{\n    json: {\n        success: true,\n        message: `Generated ${histogramCharts.length} individual histogram charts`,\n        totalRecords: cleanData.length,\n        summaryStats: summaryStats,\n        histograms: histogramCharts,\n        loopInstructions: {\n            howToUse: \"Use 'histograms' array in a loop. Each item has a 'chartUrl' property for HTTP Request nodes\",\n            exampleExpression: \"{{ $json.histograms[0].chartUrl }}\",\n            fieldsAvailable: \"fieldName, fieldType, chartUrl, dataCount, uniqueValues, distributionData\"\n        }\n    }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2120,
        -980
      ],
      "id": "f6a50739-6204-4c55-9dee-81b5194c62a2",
      "name": "prep histogram plots"
    },
    {
      "parameters": {
        "jsCode": "// Data preparation for AI agent - Process all webhook items\nconst items = $('Webhook').all();\n\nconst processedItems = items.map(item => {\n  const data = item.json;\n  \n  return {\n    json: {\n      Asset_Type: data.Asset_Type || data.assetType || 'Unknown',\n      Industry: data.Industry || data.industry || 'Construction',\n      Make: data.Make || data.make || 'Unknown',\n      Model: data.Model || data.model || 'Unknown',\n      Year: data.Year || data.termMonths || 'Unknown',\n      Current_Price: data.Current_Price || data.subjectPrice || data.item_price || 0,\n      Location: data.Location || data.location || 'Unknown',\n      Hours: data.Hours || data.currentMeter || 0,\n      Age: data.Age || data.age || 0,\n      // Pass through original data too\n      originalData: data\n    }\n  };\n});\n\nreturn processedItems;\n\n// // Data preparation for AI agent\n// //const item = $('Gather Assets for Evaluation').first().json;\n// const item = {{$('Webhook').item.json.query}}\n\n// return [{\n//     json: {\n//         Asset_Type: item.Asset_Type || item['Asset_Type'] || item.asset_type || 'Unknown',\n//         Industry: item.Industry || item.industry || 'Construction',\n//         Make: item.Make || item.make || 'Unknown',\n//         Model: item.Model || item.model || 'Unknown',\n//         Year: item.Year || item['Year model'] || item.year || 'Unknown',\n//         Current_Price: item['Current Price'] || item.current_price || item.price || 0,\n//         Location: item.Location || item.location || 'Unknown',\n//         Hours: item['Hours - total'] || item.hours || 0,\n//         Age: item.Age || item.age || 0,\n//         // Pass through original data too\n//         originalData: item\n//     }\n// }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1060,
        -1700
      ],
      "id": "d3002d9d-ec79-4cd5-877c-bbb976655858",
      "name": "Inflation Data Prep"
    },
    {
      "parameters": {
        "jsCode": "// CompsCleaner for n8n - JavaScript implementation\n// Place this code in a Code node after your Google Sheets node\n\n// Configuration - adjust these values as needed\nconst CURRENT_YEAR = new Date().getFullYear();\n\nconst AMI_AVG =  $('Webhook').first().json.body.amiAverage;// Average annual machine hours\n\n// const SUBJECT_PRICE = $('Gather Assets for Evaluation').first().json['Subject Price']; // Set your subject price here, or pass as parameter\nconst SUBJECT_PRICE =$('Webhook').first().json.body.subjectPrice;\n\n// Default inflation data (simplified version)\n// [$(\"Add Banfield inflation ratios\").item.json.inflation_ratios]\nconst INFLATION_DATA = $input.first().json.inflation_ratios;\n\n// Helper Functions\nfunction extractState(location) {\n    if (!location) return 'USA';\n    return 'USA'; // Default to USA - enhance this logic as needed\n}\n\nfunction getRelativeValuePercentage(age) {\n    if (age <= 0) return 1.0;\n    if (age > 21) return 0.491; // Use last available value for very old equipment\n    \n    // Find exact match first\n    const exact = INFLATION_DATA.find(item => item.age === age);\n    if (exact) return exact.rel_interest_val;\n    \n    // Find closest age in inflation data\n    const closest = INFLATION_DATA.reduce((prev, curr) => \n        Math.abs(curr.age - age) < Math.abs(prev.age - age) ? curr : prev\n    );\n    \n    return closest.rel_interest_val;\n}\n\nfunction safePriceToFloat(priceStr) {\n    if (!priceStr) return 0.0;\n    \n    const priceString = priceStr.toString().trim();\n    \n    // Check for auction or call for price\n    if (priceString.toUpperCase() === \"AUCTION\" || \n        priceString.toLowerCase().includes(\"call for price\") ||\n        priceString === \"{empty}\") {\n        return 0.0;\n    }\n    \n    try {\n        // Handle USD format like \"USD $245,000\"\n        let cleanPrice = priceString;\n        if (cleanPrice.includes('USD')) {\n            cleanPrice = cleanPrice.replace('USD', '').trim();\n        }\n        \n        // Remove currency symbols, commas, and spaces\n        cleanPrice = cleanPrice.replace(/[$,\\s]/g, '');\n        \n        const parsed = parseFloat(cleanPrice);\n        return isNaN(parsed) ? 0.0 : parsed;\n    } catch (e) {\n        return 0.0;\n    }\n}\n\n// Fixed function to safely extract hours from various formats\nfunction safeHoursToFloat(hoursStr) {\n    if (!hoursStr) return 0.0;\n    \n    const hoursString = hoursStr.toString().trim();\n    \n    // Check for empty values\n    if (hoursString === \"\" || \n        hoursString === \"{empty}\" || \n        hoursString.toLowerCase() === \"null\" ||\n        hoursString.toLowerCase() === \"undefined\") {\n        return 0.0;\n    }\n    \n    try {\n        // Remove any non-numeric characters except decimal points\n        const cleanHours = hoursString.replace(/[^\\d.]/g, '');\n        \n        if (cleanHours === '') return 0.0;\n        \n        const parsed = parseFloat(cleanHours);\n        return isNaN(parsed) ? 0.0 : parsed;\n    } catch (e) {\n        console.log(`Error parsing hours: \"${hoursString}\"`, e);\n        return 0.0;\n    }\n}\n\nfunction formatCurrency(amount) {\n    return `$${Math.round(amount).toLocaleString()}`;\n}\n\nfunction formatPercentage(percent) {\n    return `${Math.round(percent)}%`;\n}\n\n// Extract year from item_description (assuming format like \"2019 BELL B45E\")\nfunction extractYear(description) {\n    if (!description) return CURRENT_YEAR;\n    \n    // Look for 4-digit year at the beginning\n    const yearMatch = description.match(/^(\\d{4})/);\n    if (yearMatch) {\n        const year = parseInt(yearMatch[1]);\n        // Validate year is reasonable (between 1990 and current year + 2)\n        if (year >= 1990 && year <= CURRENT_YEAR + 2) {\n            return year;\n        }\n    }\n    \n    // Fallback: look for any 4-digit number that looks like a year\n    const allYears = description.match(/\\b(19|20)\\d{2}\\b/g);\n    if (allYears && allYears.length > 0) {\n        const year = parseInt(allYears[0]);\n        if (year >= 1990 && year <= CURRENT_YEAR + 2) {\n            return year;\n        }\n    }\n    \n    return CURRENT_YEAR;\n}\n\n// Extract brand from item_description (assuming format like \"2019 BELL B45E\")\nfunction extractBrand(description) {\n    if (!description) return 'Unknown';\n    \n    // Remove year first, then get the next word\n    const withoutYear = description.replace(/^\\d{4}\\s*/, '');\n    const parts = withoutYear.trim().split(/\\s+/);\n    \n    return parts.length > 0 ? parts[0] : 'Unknown';\n}\n\n// Extract model from item_description (assuming format like \"2019 BELL B45E Off-Highway Trucks\")\nfunction extractModel(description) {\n    if (!description) return 'Unknown';\n    \n    // Remove year and brand, get model parts\n    const withoutYear = description.replace(/^\\d{4}\\s*/, '');\n    const parts = withoutYear.trim().split(/\\s+/);\n    \n    if (parts.length > 1) {\n        // Get everything after brand, before descriptive terms\n        const modelParts = [];\n        for (let i = 1; i < parts.length; i++) {\n            const part = parts[i];\n            if (part.toLowerCase().includes('off-highway') || \n                part.toLowerCase().includes('trucks') ||\n                part.toLowerCase().includes('highway')) {\n                break;\n            }\n            modelParts.push(part);\n        }\n        return modelParts.join(' ') || (parts[1] || 'Unknown');\n    }\n    \n    return 'Unknown';\n}\n\n// Main transformation function\nfunction transformData(items) {\n    const transformedItems = [];\n    let validPrices = [];\n    let validHours = [];\n    let validHoursPerYear = [];\n    let validResiduals = [];\n    let validYoYs = [];\n    let valid20Pcts = [];\n    let valid35Pcts = [];\n    let valid20Vals = [];\n    let valid35Vals = [];\n    \n    items.forEach((item, index) => {\n        const data = item.json;\n        \n        // Extract basic information with better error handling\n        const year = extractYear(data.item_description);\n        const age = CURRENT_YEAR - year;\n        const hours = safeHoursToFloat(data.hours); // Fixed hours extraction\n        const currentPriceFloat = safePriceToFloat(data.price);\n        \n        // Calculate hours per year - only if age > 0 to avoid division by zero\n        let hoursPerYear = 0;\n        if (age > 0 && hours > 0) {\n            hoursPerYear = hours / age;\n        }\n        \n        // Debug logging - improved\n        console.log(`Row ${index + 1}: Hours string: \"${data.hours}\", Parsed hours: ${hours}, Price string: \"${data.price}\", Parsed: ${currentPriceFloat}, Year: ${year}, Age: ${age}, Hours/Year: ${hoursPerYear}`);\n        \n        // Build transformed row\n        const transformedRow = {\n            Source: index + 1,\n            Make: extractBrand(data.item_description),\n            Model: extractModel(data.item_description),\n            Location: extractState(data.seller_location || data.location),\n            'Year model': year,\n            Age: age,\n            'Hours - total': hours > 0 ? Math.round(hours) : '', // Show hours if available\n            'Hours - per year': (hours > 0 && age > 0) ? Math.round(hoursPerYear) : '', // Show hours per year if calculable\n            'Current Price': '',\n            'Price Type': '',\n            'OEC (estimate)': '',\n            Resid: '',\n            YoY: '',\n            '20%': '',\n            '$ Value (20%)': '',\n            '35%': '',\n            '$ Value (35%)': '',\n            Notes: '',\n            'Effective Age': 0\n        };\n        \n        // Check if this is an auction item\n        const isAuction = !data.price || \n                         data.price.toString().toUpperCase() === \"AUCTION\" || \n                         data.price.toString().toLowerCase().includes(\"call for price\") ||\n                         data.price.toString() === \"{empty}\" ||\n                         currentPriceFloat === 0;\n        \n        if (isAuction) {\n            transformedRow['Current Price'] = \"AUCTION\";\n            transformedRow['Price Type'] = \"Auction\";\n            transformedRow['OEC (estimate)'] = \"\";\n            transformedRow['Resid'] = \"\";\n            transformedRow['YoY'] = \"\";\n            transformedRow['20%'] = \"\";\n            transformedRow['$ Value (20%)'] = \"\";\n            transformedRow['35%'] = \"\";\n            transformedRow['$ Value (35%)'] = \"\";\n        } else {\n            transformedRow['Current Price'] = formatCurrency(currentPriceFloat);\n            transformedRow['Price Type'] = \"Retail\";\n            \n            // Calculate valuation metrics only for non-auction items\n            if (currentPriceFloat > 0 && age >= 0) {\n                const relValuePct = getRelativeValuePercentage(age);\n                const oec = age > 0 ? (SUBJECT_PRICE * relValuePct) : SUBJECT_PRICE;\n                const resid = oec > 0 ? (currentPriceFloat / oec) * 100 : 100;\n                const yoy = age > 0 ? ((1 - (resid / 100)) / age) * 100 : 0;\n                const pct20 = resid * (1 - 0.2);\n                const val20 = oec * (resid / 100) * (1 - 0.2);\n                const pct35 = resid * (1 - 0.35);\n                const val35 = oec * (resid / 100) * (1 - 0.35);\n                \n                transformedRow['OEC (estimate)'] = formatCurrency(oec);\n                transformedRow['Resid'] = formatPercentage(resid);\n                transformedRow['YoY'] = `${yoy.toFixed(2)}%`;\n                transformedRow['20%'] = formatPercentage(pct20);\n                transformedRow['$ Value (20%)'] = formatCurrency(val20);\n                transformedRow['35%'] = formatPercentage(pct35);\n                transformedRow['$ Value (35%)'] = formatCurrency(val35);\n                \n                // Collect for averages\n                validPrices.push(currentPriceFloat);\n                validResiduals.push(resid);\n                validYoYs.push(yoy);\n                valid20Pcts.push(pct20);\n                valid35Pcts.push(pct35);\n                valid20Vals.push(val20);\n                valid35Vals.push(val35);\n            }\n        }\n        \n        // Calculate Effective Age - fixed logic\n        if (hours > 0 && age > 0 && AMI_AVG > 0) {\n            const effectiveAge = age * (1 + ((hoursPerYear - AMI_AVG) / AMI_AVG));\n            transformedRow['Effective Age'] = effectiveAge.toFixed(1);\n            validHoursPerYear.push(hoursPerYear);\n        } else {\n            transformedRow['Effective Age'] = age.toString();\n        }\n        \n        // Collect valid data for averages\n        if (hours > 0) validHours.push(hours);\n        \n        transformedItems.push({ json: transformedRow });\n    });\n    \n    // // Calculate averages\n    // const avgHours = validHours.length > 0 ? \n    //     Math.round(validHours.reduce((a, b) => a + b, 0) / validHours.length) : 0;\n    // const avgHoursPerYear = validHoursPerYear.length > 0 ? \n    //     Math.round(validHoursPerYear.reduce((a, b) => a + b, 0) / validHoursPerYear.length) : 0;\n    // const avgResid = validResiduals.length > 0 ? \n    //     Math.round(validResiduals.reduce((a, b) => a + b, 0) / validResiduals.length) : 71;\n    // const avgYoY = validYoYs.length > 0 ? \n    //     (validYoYs.reduce((a, b) => a + b, 0) / validYoYs.length).toFixed(2) : \"7.00\";\n    // const avg20Pct = valid20Pcts.length > 0 ? \n    //     Math.round(valid20Pcts.reduce((a, b) => a + b, 0) / valid20Pcts.length) : 0;\n    // const avg35Pct = valid35Pcts.length > 0 ? \n    //     Math.round(valid35Pcts.reduce((a, b) => a + b, 0) / valid35Pcts.length) : 0;\n    // const avg20Val = valid20Vals.length > 0 ? \n    //     Math.round(valid20Vals.reduce((a, b) => a + b, 0) / valid20Vals.length) : 0;\n    // const avg35Val = valid35Vals.length > 0 ? \n    //     Math.round(valid35Vals.reduce((a, b) => a + b, 0) / valid35Vals.length) : 0;\n    \n    // // Add summary row with averages\n    // const summaryRow = {\n    //     Source: 'AVERAGES',\n    //     Make: '',\n    //     Model: '',\n    //     Location: '',\n    //     'Year model': '',\n    //     Age: '',\n    //     'Hours - total': avgHours > 0 ? avgHours : '',\n    //     'Hours - per year': avgHoursPerYear > 0 ? avgHoursPerYear : '',\n    //     'Current Price': '',\n    //     'Price Type': '',\n    //     'OEC (estimate)': '',\n    //     Resid: avgResid > 0 ? `${avgResid}%` : '',\n    //     YoY: `${avgYoY}%`,\n    //     '20%': avg20Pct > 0 ? `${avg20Pct}%` : '',\n    //     '$ Value (20%)': avg20Val > 0 ? formatCurrency(avg20Val) : '',\n    //     '35%': avg35Pct > 0 ? `${avg35Pct}%` : '',\n    //     '$ Value (35%)': avg35Val > 0 ? formatCurrency(avg35Val) : '',\n    //     Notes: '',\n    //     'Effective Age': ''\n    // };\n    \n    // transformedItems.push({ json: summaryRow });\n    \n    return transformedItems;\n}\n\n// Main execution\ntry {\n    const inputItems = $('Add results from search').all();\n    //const inputItems = $('Create Market Comps Sheet').all();\n    \n    if (!inputItems || inputItems.length === 0) {\n        return [{ json: { error: 'No input data received' } }];\n    }\n    \n    const transformedData = transformData(inputItems);\n    \n    // Log summary for debugging\n    console.log(`Processed ${inputItems.length} items`);\n    console.log(`Generated ${transformedData.length} transformed items`);\n    console.log(`AMI_AVG used: ${AMI_AVG}`);\n    console.log(`SUBJECT_PRICE used: ${SUBJECT_PRICE}`);\n    \n    return transformedData;\n    \n} catch (error) {\n    console.error('Error in CompsCleaner transformation:', error);\n    return [{ json: { error: `Transformation failed: ${error.message}` } }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        820,
        -1260
      ],
      "id": "43354059-9c28-473a-a323-ab6aa2e4a8ef",
      "name": "Determine Residual and OEC"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('Prompt - Modified Depreciation Agent').first().json.content }}\n\nAsset to Analyze:\n\nName: {{ $('Webhook').first().json.body.itemName }}\nMake: {{ $('Webhook').first().json.body.make }}\nModel: {{ $('Webhook').first().json.body.model }}\nStatus: {{ $('Webhook').first().json.body.status }}\nDescription: {{ $('Webhook').first().json.body.itemDescription }}\nAsset_Type: {{ $('Webhook').first().json.body.assetType }}\nIndustry: {{ $('Webhook').first().json.body.industry }}\nApplication: {{ $('Webhook').first().json.body.application }}\nSubject_Price: {{ $('Webhook').first().json.body.subjectPrice }}\n\n",
        "options": {
          "returnIntermediateSteps": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        1320,
        -500
      ],
      "id": "ee092659-06f7-4013-bf75-552086842515",
      "name": "Modified Depreciation Agent",
      "retryOnFail": true
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "claude-sonnet-4-20250514",
          "mode": "list",
          "cachedResultName": "Claude Sonnet 4"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1.3,
      "position": [
        1280,
        -280
      ],
      "id": "4c25fa5d-44c3-4f48-bebe-0b6a0b2d4cc4",
      "name": "Anthropic Chat Model4",
      "credentials": {
        "anthropicApi": {
          "id": "VBFUHiMNrfhErSuo",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Data preparation for AI agent\nconst item = $('Gather Assets for Evaluation').first().json;\n\nreturn [{\n    json: {\n        // Basic Equipment Information\n        Name: item.Name || 'Unknown Equipment',\n        Make: item.Make || 'Unknown Make',\n        Model: item.Model || 'Unknown Model',\n        Year: item.Year || 'Unknown Year',\n        Description: item.Description || 'No description available',\n        \n        // Equipment Classification\n        Asset_Type: item.Asset_Type || 'Construction Equipment',\n        Industry: item.Industry || 'Construction',\n        Application: item.Application || 'General Construction',\n        Status: item.Status || 'Unknown Status',\n        \n        // Location and Usage\n        Location: item.Location || 'Unknown Location',\n        Hours: item.Hours || 0,\n        Age: item.Age || 0,\n        Unit: item.Unit || 'Each',\n        \n        // Financial Information\n        Current_Price: item.Current || 0,\n        Proposed_Price: item.Proposed || 0,\n        Subject_Price: item.Subject_Price || 0,\n        AML_AVG: item.AML_AVG || 0,\n        \n        // Row Information\n        row_number: item.row_number || 0,\n        \n        // Additional calculated fields\n        Price_Current_Formatted: item.Current ? `$${item.Current.toLocaleString()}` : '$0',\n        Price_Proposed_Formatted: item.Proposed ? `$${item.Proposed.toLocaleString()}` : '$0',\n        Price_Subject_Formatted: item.Subject_Price ? `$${item.Subject_Price.toLocaleString()}` : '$0',\n        \n        // Equipment Summary for AI\n        Equipment_Summary: `${item.Make || 'Unknown'} ${item.Model || 'Unknown'} (${item.Year || 'Unknown Year'}) - ${item.Description || 'Construction Equipment'}`,\n        \n        // Location and Industry Context\n        Market_Context: `${item.Industry || 'Construction'} equipment in ${item.Location || 'Unknown Location'}`,\n        \n        // Usage Information\n        Usage_Info: `Equipment age: ${item.Age || 'Unknown'} years, Hours: ${item.Hours || 'Unknown'}`,\n        \n        // Price Analysis Context\n        Price_Analysis: {\n            current_price: item.Current || 0,\n            proposed_price: item.Proposed || 0,\n            subject_price: item.Subject_Price || 0,\n            aml_average: item.AML_AVG || 0,\n            price_variance: item.Proposed && item.Current ? \n                Math.round(((item.Proposed - item.Current) / item.Current) * 100) : 0\n        },\n        \n        // Complete Equipment Profile for AI Analysis\n        Equipment_Profile: {\n            identification: {\n                name: item.Name || 'Unknown Equipment',\n                make: item.Make || 'Unknown',\n                model: item.Model || 'Unknown',\n                year: item.Year || 'Unknown',\n                description: item.Description || 'No description'\n            },\n            classification: {\n                asset_type: item.Asset_Type || 'Construction Equipment',\n                industry: item.Industry || 'Construction',\n                application: item.Application || 'General',\n                status: item.Status || 'Unknown'\n            },\n            operational: {\n                location: item.Location || 'Unknown',\n                age_years: item.Age || 0,\n                hours_total: item.Hours || 0,\n                unit: item.Unit || 'Each'\n            },\n            financial: {\n                current_value: item.Current || 0,\n                proposed_value: item.Proposed || 0,\n                subject_value: item.Subject_Price || 0,\n                aml_average: item.AML_AVG || 0\n            }\n        },\n        \n        // Pass through original data for reference\n        originalData: item,\n        \n        // Debug information\n        available_fields: Object.keys(item),\n        data_completeness: {\n            has_make: !!item.Make,\n            has_model: !!item.Model,\n            has_year: !!item.Year,\n            has_current_price: !!item.Current,\n            has_proposed_price: !!item.Proposed,\n            has_location: !!item.Location,\n            has_hours: !!item.Hours,\n            has_age: !!item.Age\n        }\n    }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1100,
        -440
      ],
      "id": "b9311331-0ab2-4988-9e10-a836a93de294",
      "name": "Depreciation Data Prep mod"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node - Claude Opus Output Parser (Complete Fixed Version)\n// Get input data - Fixed to handle different input structures\nconst inputData = $input.all();\n\n// Enhanced function to extract JSON from various formats\nfunction extractJSON(rawData) {\n  let jsonString = '';\n  \n  console.log('Raw data type:', typeof rawData);\n  console.log('Raw data keys:', Object.keys(rawData || {}));\n  \n  // Handle different input structures\n  if (typeof rawData === 'string') {\n    jsonString = rawData;\n  } else if (rawData && rawData.json) {\n    // Handle n8n json structure\n    if (typeof rawData.json === 'string') {\n      jsonString = rawData.json;\n    } else if (rawData.json.output) {\n      jsonString = rawData.json.output;\n    } else {\n      jsonString = JSON.stringify(rawData.json);\n    }\n  } else if (rawData && rawData.output) {\n    jsonString = rawData.output;\n  } else if (rawData && rawData.data) {\n    jsonString = typeof rawData.data === 'string' ? rawData.data : JSON.stringify(rawData.data);\n  } else {\n    jsonString = JSON.stringify(rawData);\n  }\n  \n  // Clean up the JSON string - handle markdown code blocks\n  jsonString = jsonString.replace(/^```json\\s*\\n?/, '').replace(/\\n?```\\s*$/, '');\n  jsonString = jsonString.replace(/^```\\s*\\n?/, '').replace(/\\n?```\\s*$/, '');\n  \n  console.log('Extracted JSON string length:', jsonString.length);\n  console.log('First 200 chars:', jsonString.substring(0, 200));\n  \n  return jsonString.trim();\n}\n\n// Enhanced function to safely parse JSON with better fallbacks\nfunction safeParseJSON(jsonString) {\n  try {\n    // First try direct parsing\n    const parsed = JSON.parse(jsonString);\n    console.log('Successfully parsed JSON');\n    return parsed;\n  } catch (error) {\n    console.log('Initial JSON parse failed:', error.message);\n    \n    // Try to find JSON object in the string\n    const jsonMatch = jsonString.match(/\\{[\\s\\S]*\\}/);\n    if (jsonMatch) {\n      try {\n        const parsed = JSON.parse(jsonMatch[0]);\n        console.log('Successfully parsed extracted JSON object');\n        return parsed;\n      } catch (nestedError) {\n        console.log('Nested JSON parse failed:', nestedError.message);\n      }\n    }\n    \n    // Manual extraction with improved regex patterns\n    console.log('Attempting manual extraction');\n    const result = {\n      equipment_analysis: {\n        equipment_name: 'Default Equipment',\n        initial_cost: 100000,\n        useful_life: 5,\n        salvage_value: 10000,\n        macrs_class: '5-year',\n        description: 'Equipment analysis'\n      },\n      depreciation_calculations: {\n        years: [0, 1, 2, 3, 4, 5],\n        straight_line: [100000, 82000, 64000, 46000, 28000, 10000],\n        double_declining: [100000, 60000, 36000, 21600, 12960, 10000],\n        sum_of_years_digits: [100000, 70000, 46000, 28000, 16000, 10000],\n        macrs: [100000, 80000, 48000, 28800, 17280, 17280]\n      }\n    };\n    \n    // Try to extract actual values from the string\n    try {\n      const equipmentMatch = jsonString.match(/\"equipment_name\":\\s*\"([^\"]+)\"/);\n      if (equipmentMatch) result.equipment_analysis.equipment_name = equipmentMatch[1];\n      \n      const costMatch = jsonString.match(/\"initial_cost\":\\s*(\\d+)/);\n      if (costMatch) result.equipment_analysis.initial_cost = parseInt(costMatch[1]);\n      \n      const lifeMatch = jsonString.match(/\"useful_life\":\\s*(\\d+)/);\n      if (lifeMatch) result.equipment_analysis.useful_life = parseInt(lifeMatch[1]);\n      \n      const salvageMatch = jsonString.match(/\"salvage_value\":\\s*(\\d+)/);\n      if (salvageMatch) result.equipment_analysis.salvage_value = parseInt(salvageMatch[1]);\n      \n      const macrsMatch = jsonString.match(/\"macrs_class\":\\s*\"([^\"]+)\"/);\n      if (macrsMatch) result.equipment_analysis.macrs_class = macrsMatch[1];\n      \n      // Extract arrays with better error handling\n      const slMatch = jsonString.match(/\"straight_line\":\\s*\\[([^\\]]+)\\]/);\n      if (slMatch) {\n        try {\n          const numbers = slMatch[1].split(',').map(n => {\n            const num = parseInt(n.trim());\n            return isNaN(num) ? 0 : num;\n          });\n          if (numbers.length > 0) result.depreciation_calculations.straight_line = numbers;\n        } catch (e) {\n          console.log('Failed to parse straight_line array');\n        }\n      }\n      \n      const ddbMatch = jsonString.match(/\"double_declining\":\\s*\\[([^\\]]+)\\]/);\n      if (ddbMatch) {\n        try {\n          const numbers = ddbMatch[1].split(',').map(n => {\n            const num = parseInt(n.trim());\n            return isNaN(num) ? 0 : num;\n          });\n          if (numbers.length > 0) result.depreciation_calculations.double_declining = numbers;\n        } catch (e) {\n          console.log('Failed to parse double_declining array');\n        }\n      }\n      \n      const sydMatch = jsonString.match(/\"sum_of_years_digits\":\\s*\\[([^\\]]+)\\]/);\n      if (sydMatch) {\n        try {\n          const numbers = sydMatch[1].split(',').map(n => {\n            const num = parseInt(n.trim());\n            return isNaN(num) ? 0 : num;\n          });\n          if (numbers.length > 0) result.depreciation_calculations.sum_of_years_digits = numbers;\n        } catch (e) {\n          console.log('Failed to parse sum_of_years_digits array');\n        }\n      }\n      \n      const macrsArrayMatch = jsonString.match(/\"macrs\":\\s*\\[([^\\]]+)\\]/);\n      if (macrsArrayMatch) {\n        try {\n          const numbers = macrsArrayMatch[1].split(',').map(n => {\n            const num = parseInt(n.trim());\n            return isNaN(num) ? 0 : num;\n          });\n          if (numbers.length > 0) result.depreciation_calculations.macrs = numbers;\n        } catch (e) {\n          console.log('Failed to parse macrs array');\n        }\n      }\n      \n      // Update years array based on actual data length\n      const maxLength = Math.max(\n        result.depreciation_calculations.straight_line.length,\n        result.depreciation_calculations.double_declining.length,\n        result.depreciation_calculations.sum_of_years_digits.length,\n        result.depreciation_calculations.macrs.length\n      );\n      result.depreciation_calculations.years = Array.from({length: maxLength}, (_, i) => i);\n      \n    } catch (extractError) {\n      console.log('Manual extraction failed:', extractError.message);\n    }\n    \n    return result;\n  }\n}\n\n// Build chart datasets\nfunction buildChartDatasets(depreciationData) {\n  return [\n    {\n      label: 'Straight-Line Method',\n      data: depreciationData.straight_line || [],\n      borderColor: '#2563eb',\n      backgroundColor: 'rgba(37, 99, 235, 0.1)',\n      borderWidth: 3,\n      fill: false\n    },\n    {\n      label: 'Double Declining Balance',\n      data: depreciationData.double_declining || [],\n      borderColor: '#dc2626',\n      backgroundColor: 'rgba(220, 38, 38, 0.1)',\n      borderWidth: 3,\n      fill: false\n    },\n    {\n      label: 'Sum-of-Years-Digits',\n      data: depreciationData.sum_of_years_digits || [],\n      borderColor: '#16a34a',\n      backgroundColor: 'rgba(22, 163, 74, 0.1)',\n      borderWidth: 3,\n      fill: false\n    },\n    {\n      label: 'MACRS',\n      data: depreciationData.macrs || [],\n      borderColor: '#ca8a04',\n      backgroundColor: 'rgba(202, 138, 4, 0.1)',\n      borderWidth: 3,\n      fill: false\n    }\n  ];\n}\n\n// Generate chart labels dynamically\nfunction generateChartLabels(yearsArray) {\n  return yearsArray.map(year => `Year ${year}`);\n}\n\n// Generate QuickChart URL with error handling\nfunction createQuickChartUrl(equipmentName, depreciationData) {\n  try {\n    const chartConfig = {\n      type: 'line',\n      data: {\n        labels: generateChartLabels(depreciationData.years || []),\n        datasets: buildChartDatasets(depreciationData)\n      },\n      options: {\n        title: {\n          display: true,\n          text: `${equipmentName} - Depreciation Comparison`,\n          fontSize: 16\n        },\n        scales: {\n          yAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: 'Book Value ($)'\n            },\n            ticks: {\n              callback: function(value) {\n                return '$' + value.toLocaleString();\n              }\n            }\n          }],\n          xAxes: [{\n            scaleLabel: {\n              display: true,\n              labelString: 'Year'\n            }\n          }]\n        },\n        legend: {\n          display: true,\n          position: 'top'\n        },\n        responsive: true\n      }\n    };\n    \n    const configString = JSON.stringify(chartConfig);\n    const encodedConfig = encodeURIComponent(configString);\n    return `https://quickchart.io/chart?c=${encodedConfig}`;\n  } catch (error) {\n    console.log('Error creating chart URL:', error.message);\n    return 'https://quickchart.io/chart?c=%7B%22type%22%3A%22line%22%7D';\n  }\n}\n\n// Main processing logic\nconst results = [];\n\nconsole.log('Processing', inputData.length, 'items');\n\nfor (let i = 0; i < inputData.length; i++) {\n  try {\n    const item = inputData[i];\n    console.log(`Processing item ${i}:`, Object.keys(item));\n    \n    // Extract JSON string\n    const jsonString = extractJSON(item);\n    \n    if (!jsonString) {\n      throw new Error('No JSON string extracted from input');\n    }\n    \n    // Parse the data\n    const parsedData = safeParseJSON(jsonString);\n    \n    if (!parsedData) {\n      throw new Error('Failed to parse JSON data');\n    }\n    \n    // Validate required structure\n    if (!parsedData.equipment_analysis || !parsedData.depreciation_calculations) {\n      throw new Error('Missing required data structure');\n    }\n    \n    // Build the final result\n    const equipmentAnalysis = parsedData.equipment_analysis;\n    const depreciationCalcs = parsedData.depreciation_calculations;\n    \n    // Calculate financial summary with error handling\n    const initialCost = equipmentAnalysis.initial_cost || 0;\n    const finalSLM = depreciationCalcs.straight_line ? \n      depreciationCalcs.straight_line[depreciationCalcs.straight_line.length - 1] : 0;\n    const finalDDB = depreciationCalcs.double_declining ? \n      depreciationCalcs.double_declining[depreciationCalcs.double_declining.length - 1] : 0;\n    const finalSYD = depreciationCalcs.sum_of_years_digits ? \n      depreciationCalcs.sum_of_years_digits[depreciationCalcs.sum_of_years_digits.length - 1] : 0;\n    const finalMACRS = depreciationCalcs.macrs ? \n      depreciationCalcs.macrs[depreciationCalcs.macrs.length - 1] : 0;\n    \n    const finalResult = {\n      equipment_analysis: equipmentAnalysis,\n      depreciation_calculations: depreciationCalcs,\n      chart_config: {\n        type: 'line',\n        data: {\n          labels: generateChartLabels(depreciationCalcs.years || []),\n          datasets: buildChartDatasets(depreciationCalcs)\n        },\n        options: {\n          title: {\n            display: true,\n            text: `${equipmentAnalysis.equipment_name || 'Equipment'} - Depreciation Comparison`,\n            fontSize: 16\n          },\n          scales: {\n            yAxes: [{\n              scaleLabel: {\n                display: true,\n                labelString: 'Book Value ($)'\n              }\n            }],\n            xAxes: [{\n              scaleLabel: {\n                display: true,\n                labelString: 'Year'\n              }\n            }]\n          },\n          legend: {\n            display: true,\n            position: 'top'\n          }\n        }\n      },\n      quickchart_url: createQuickChartUrl(equipmentAnalysis.equipment_name || 'Equipment', depreciationCalcs),\n      financial_summary: {\n        total_depreciation_slm: Math.max(0, initialCost - finalSLM),\n        total_depreciation_ddb: Math.max(0, initialCost - finalDDB),\n        total_depreciation_syd: Math.max(0, initialCost - finalSYD),\n        total_depreciation_macrs: Math.max(0, initialCost - finalMACRS),\n        recommended_method: 'MACRS - Provides maximum tax benefits through accelerated depreciation',\n        analysis_notes: 'MACRS offers the most favorable tax treatment for construction equipment'\n      }\n    };\n    \n    results.push({\n      json: finalResult,\n      pairedItem: { item: i }\n    });\n    \n    console.log(`Successfully processed item ${i}`);\n    \n  } catch (error) {\n    console.error(`Error processing item ${i}:`, error.message);\n    results.push({\n      json: {\n        error: true,\n        message: error.message,\n        item_index: i,\n        debug_info: {\n          input_keys: Object.keys(inputData[i] || {}),\n          input_type: typeof inputData[i]\n        }\n      },\n      pairedItem: { item: i }\n    });\n  }\n}\n\nconsole.log(`Processed ${results.length} items total`);\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2080,
        -340
      ],
      "id": "29678cef-bc72-404e-8478-b704564965f3",
      "name": "Prep Modified Depreciation output"
    },
    {
      "parameters": {
        "content": "# 8. Modified Depreciation Agent",
        "height": 480,
        "width": 640,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1000,
        -620
      ],
      "id": "89a8a6a8-8f73-4496-8843-c3b9b8e445c9",
      "name": "Sticky Note10"
    },
    {
      "parameters": {
        "sendTo": "={{ $('Webhook').first().json.body.lesseeEmail }}, info@theendlessforms.com",
        "subject": "=Banfield - {{ $now.format('yyyyMMddhhmmss') }}",
        "message": "=<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\">\n    <title>Equipment Analysis Report</title>\n  </head>\n  <body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333; margin: 20px;\">\n<h1 style=\"color: #2c3e50;\">Equipment Analysis Report</h1>\n\n<h2>Hello,</h2>\n<h3>This is a test for the Banfield Agentic Workflow!</h3>\n\n<!-- Asset Management Residual Value Table -->\n<h2 style=\"color: #2c3e50;\">Asset Management Residual Value Analysis</h2>\n<div style=\"background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin-bottom: 20px;\">\n  <h3 style=\"margin-top: 0;\">Subject Equipment: {{$('Format Executive Summary Output').item.json.data.asset_management_table.subject_year}} - ${{$('Format Executive Summary Output').item.json.data.asset_management_table.subject_price}} - {{$('Format Executive Summary Output').item.json.data.asset_management_table.hpy_or_mpy}}</h3>\n  \n  <table style=\"width: 100%; border-collapse: collapse; background-color: white; box-shadow: 0 2px 4px rgba(0,0,0,0.1);\">\n    <thead>\n      <tr style=\"background-color: #e74c3c; color: white;\">\n        <th style=\"border: 1px solid #ddd; padding: 12px; text-align: center;\">Months</th>\n        <th style=\"border: 1px solid #ddd; padding: 12px; text-align: center;\">12</th>\n        <th style=\"border: 1px solid #ddd; padding: 12px; text-align: center;\">24</th>\n        <th style=\"border: 1px solid #ddd; padding: 12px; text-align: center;\">36</th>\n        <th style=\"border: 1px solid #ddd; padding: 12px; text-align: center;\">48</th>\n        <th style=\"border: 1px solid #ddd; padding: 12px; text-align: center;\">60</th>\n        <th style=\"border: 1px solid #ddd; padding: 12px; text-align: center;\">72</th>\n        <th style=\"border: 1px solid #ddd; padding: 12px; text-align: center;\">84</th>\n        <th style=\"border: 1px solid #ddd; padding: 12px; text-align: center;\">96</th>\n        <th style=\"border: 1px solid #ddd; padding: 12px; text-align: center;\">108</th>\n        <th style=\"border: 1px solid #ddd; padding: 12px; text-align: center;\">120</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td style=\"border: 1px solid #ddd; padding: 8px; font-weight: bold; background-color: #f8f9fa;\">Resid Hi%</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_percent[0]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_percent[1]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_percent[2]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_percent[3]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_percent[4]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_percent[5]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_percent[6]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_percent[7]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_percent[8]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_percent[9]}}</td>\n      </tr>\n      <tr>\n        <td style=\"border: 1px solid #ddd; padding: 8px; font-weight: bold; background-color: #f8f9fa;\">Resid Hi-$</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_dollar[0]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_dollar[1]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_dollar[2]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_dollar[3]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_dollar[4]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_dollar[5]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_dollar[6]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_dollar[7]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_dollar[8]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_hi_dollar[9]}}</td>\n      </tr>\n      <tr>\n        <td style=\"border: 1px solid #ddd; padding: 8px; font-weight: bold; background-color: #f8f9fa;\">Resid Lo%</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_percent[0]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_percent[1]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_percent[2]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_percent[3]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_percent[4]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_percent[5]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_percent[6]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_percent[7]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_percent[8]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_percent[9]}}</td>\n      </tr>\n      <tr>\n        <td style=\"border: 1px solid #ddd; padding: 8px; font-weight: bold; background-color: #f8f9fa;\">Resid Lo$</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_dollar[0]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_dollar[1]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_dollar[2]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_dollar[3]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_dollar[4]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_dollar[5]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_dollar[6]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_dollar[7]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_dollar[8]}}</td>\n        <td style=\"border: 1px solid #ddd; padding: 8px; text-align: center;\">{{$('Format Executive Summary Output').item.json.data.asset_management_table.resid_lo_dollar[9]}}</td>\n      </tr>\n    </tbody>\n  </table>\n</div>\n\n<!-- Valuation Details Section -->\n<h2 style=\"color: #2c3e50;\">Valuation Details</h2>\n<div style=\"background-color: #ecf0f1; padding: 15px; border-radius: 5px; margin-bottom: 20px;\">\n  <p><strong>Initial Value:</strong> {{$('Format Executive Summary Output').item.json.data.valuation_details.initial_value}}</p>\n  <p><strong>Depreciation Method Recommended:</strong> {{$('Format Executive Summary Output').item.json.data.valuation_details.depreciation_method_recommended}}</p>\n  <p><strong>Tax Code:</strong> {{$('Format Executive Summary Output').item.json.data.valuation_details.applicable_tax_code}}</p>\n  <p><strong>Tax Optimization Notes:</strong> {{$('Format Executive Summary Output').item.json.data.valuation_details.tax_optimization_notes}}</p>\n</div>\n\n<h3>Equipment Details:</h3>\n<p>\n  <strong>Equipment:</strong> {{$('combine all data sources').item.json.data[3].equipment_analysis.equipment_name}}<br>\n  <strong>Initial Cost:</strong> ${{$('combine all data sources').item.json.data[3].equipment_analysis.initial_cost}}<br>\n  <strong>Useful Life:</strong> {{$('combine all data sources').item.json.data[3].equipment_analysis.useful_life}} years<br>\n  <strong>Salvage Value:</strong> ${{$('combine all data sources').item.json.data[3].equipment_analysis.salvage_value}}<br>\n  <strong>MACRS Class:</strong> {{$('combine all data sources').item.json.data[3].equipment_analysis.macrs_class}}<br>\n  <strong>Description:</strong> {{$('combine all data sources').item.json.data[3].equipment_analysis.description}}\n</p>\n\n<h2>Comparison and Residual Data</h2>\n<p>\n  <strong>Comps Analysis:</strong> <a href=\"https://docs.google.com/spreadsheets/d/{{$('Create Market Comps Sheet').first().json.spreadsheetId}}/edit\">Google Sheets - Comps</a><br>\n\n{{ $('Generate HTML table for Market Comps').item.json.htmlTable }}\n\n  <strong>Residual Calculations:</strong> <a href=\"https://docs.google.com/spreadsheets/d/{{$('Create Residuals Calcs Sheet').first().json.spreadsheetId}}/edit\">Google Sheets - Residual Cals</a>\n</p>\n\n{{ $('generate HTML table for Residual Data').item.json.htmlTable }}\n\n<h2>Executive Summary</h2>\n<p>\n  <strong>Overview:</strong><br>\n  {{$('Format Executive Summary Output').item.json.data.executive_summary.overview}}\n</p>\n\n<h3>Key Findings:</h3>\n<p>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.key_findings[0]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.key_findings[1]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.key_findings[2]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.key_findings[3]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.key_findings[4]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.key_findings[5]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.key_findings[6]}}\n</p>\n\n<p>\n  <strong>Market Conditions:</strong><br>\n  {{$('Format Executive Summary Output').item.json.data.executive_summary.market_conditions}}\n</p>\n\n<!-- Enhanced Utilization Analysis Section -->\n<h3>Utilization Analysis:</h3>\n<div style=\"background-color: #f0f8ff; padding: 15px; border-radius: 5px; margin-bottom: 15px;\">\n  <p><strong>Current Utilization:</strong><br>\n  {{$('Format Executive Summary Output').item.json.data.executive_summary.utilization_analysis.current_utilization}}</p>\n  \n  <p><strong>Efficiency Rating:</strong><br>\n  {{$('Format Executive Summary Output').item.json.data.executive_summary.utilization_analysis.efficiency_rating}}</p>\n  \n  <p><strong>Optimization Opportunities:</strong><br>\n  {{$('Format Executive Summary Output').item.json.data.executive_summary.utilization_analysis.optimization_opportunities}}</p>\n</div>\n\n<!-- Enhanced Inflation Impact Section -->\n<h3>Inflation Impact Analysis:</h3>\n<div style=\"background-color: #fff5ee; padding: 15px; border-radius: 5px; margin-bottom: 15px;\">\n  <p><strong>Current Effects:</strong><br>\n  {{$('Format Executive Summary Output').item.json.data.executive_summary.inflation_impact.current_effects}}</p>\n  \n  <p><strong>Forecast Implications:</strong><br>\n  {{$('Format Executive Summary Output').item.json.data.executive_summary.inflation_impact.forecast_implications}}</p>\n  \n  <p><strong>Mitigation Strategies:</strong><br>\n  {{$('Format Executive Summary Output').item.json.data.executive_summary.inflation_impact.mitigation_strategies}}</p>\n</div>\n\n<!-- Enhanced Competitive Positioning Section -->\n<h3>Competitive Positioning:</h3>\n<div style=\"background-color: #f0fff0; padding: 15px; border-radius: 5px; margin-bottom: 15px;\">\n  <p><strong>Market Share:</strong><br>\n  {{$('Format Executive Summary Output').item.json.data.executive_summary.competitive_positioning.market_share}}</p>\n  \n  <p><strong>Competitive Advantages:</strong><br>\n  {{$('Format Executive Summary Output').item.json.data.executive_summary.competitive_positioning.competitive_advantages}}</p>\n  \n  <p><strong>Market Trends:</strong><br>\n  {{$('Format Executive Summary Output').item.json.data.executive_summary.competitive_positioning.market_trends}}</p>\n</div>\n\n<!-- Enhanced Risk Assessment Section -->\n<h3>Risk Assessment:</h3>\n<div style=\"background-color: #fff0f5; padding: 15px; border-radius: 5px; margin-bottom: 15px;\">\n  <p><strong>Identified Risks:</strong><br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.risk_assessment.risks[0]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.risk_assessment.risks[1]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.risk_assessment.risks[2]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.risk_assessment.risks[3]}}</p>\n  \n  <p><strong>Mitigation Strategies:</strong><br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.risk_assessment.mitigation_strategies[0]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.risk_assessment.mitigation_strategies[1]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.risk_assessment.mitigation_strategies[2]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.risk_assessment.mitigation_strategies[3]}}</p>\n</div>\n\n<h3>Recommendations:</h3>\n<p>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.recommendations[0]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.recommendations[1]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.recommendations[2]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.recommendations[3]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.recommendations[4]}}\n</p>\n\n<h3>Next Steps:</h3>\n<p>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.next_steps[0]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.next_steps[1]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.next_steps[2]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.next_steps[3]}}<br>\n  • {{$('Format Executive Summary Output').item.json.data.executive_summary.next_steps[4]}}\n</p>\n\n<p>\n  <strong>Depreciation Method Recommended:</strong><br>\n{{ $('Prep Modified Depreciation output').item.json.financial_summary.recommended_method }}\n<strong>Depreciation Method Analysis Notes:</strong><br>\n{{ $('Prep Modified Depreciation output').item.json.financial_summary.analysis_notes }}\n</p>\n\n<h2>Visual Analysis</h2>\n\n<p>\n  <strong>Utilization plot for Comps:</strong><br>\n  <a href=\"{{$('combine all data sources').item.json.data[1].plot_url}}\">Scatter Plot</a>\n</p>\n\n<p>\n  <strong>Distribution Analysis:</strong><br>\n  <a href=\"{{$('combine all data sources').item.json.data[2].histograms[0].chartUrl}}\">Make Distribution</a> | \n  <a href=\"{{$('combine all data sources').item.json.data[2].histograms[1].chartUrl}}\">Model Distribution</a> |\n  <a href=\"{{$('combine all data sources').item.json.data[2].histograms[2].chartUrl}}\">Location Distribution</a> |\n  <a href=\"{{$('combine all data sources').item.json.data[2].histograms[3].chartUrl}}\">Year Distribution</a> |\n  <a href=\"{{$('combine all data sources').item.json.data[2].histograms[4].chartUrl}}\">Age Distribution</a> |\n  <a href=\"{{$('combine all data sources').item.json.data[2].histograms[5].chartUrl}}\">Utilization Distribution</a> |\n  <a href=\"{{$('combine all data sources').item.json.data[2].histograms[6].chartUrl}}\">Annual Utilization Distribution</a> |\n  <a href=\"{{$('combine all data sources').item.json.data[2].histograms[7].chartUrl}}\">Price Distribution</a>\n</p>\n\n<h3>Depreciation Analysis:</h3>\n\n<p>\n  <strong>Modified Depreciation Plot:</strong><br>\n  <a href=\"{{ $('Prep Modified Depreciation output').item.json.quickchart_url }}\">Modified Depreciation Plot</a>\n</p>\n\n<h2>Inflation Analysis</h2>\n\n<p>\n  <strong>Inflation Plot:</strong><br>\n  <a href=\"{{$('combine all data sources').item.json.data[6].quickchart_url}}\">Inflation vs Equipment Age</a>\n</p>\n\n<h3>Financial Summary:</h3>\n<p>\n  <strong>Total Depreciation (Straight-line):</strong> ${{$('combine all data sources').item.json.data[3].financial_summary.total_depreciation_slm}}<br>\n  <strong>Total Depreciation (Double-declining):</strong> ${{$('combine all data sources').item.json.data[3].financial_summary.total_depreciation_ddb}}<br>\n  <strong>Total Depreciation (Sum-of-years-digits):</strong> ${{$('combine all data sources').item.json.data[3].financial_summary.total_depreciation_syd}}<br>\n  <strong>Total Depreciation (MACRS):</strong> ${{$('combine all data sources').item.json.data[3].financial_summary.total_depreciation_macrs}}\n</p>\n\n<p>\n  <strong>Recommended Method:</strong> {{$('combine all data sources').item.json.data[3].financial_summary.recommended_method}}<br>\n  <strong>Analysis Notes:</strong> {{$('combine all data sources').item.json.data[3].financial_summary.analysis_notes}}\n</p>\n\n<p>\n  <strong>Data Source:</strong><br>\n  {{$('combine all data sources').item.json.data[0].output.analysis.data_sources[0]}}\n</p>\n\n<p>\n  <strong>Methodology:</strong><br>\n  {{$('combine all data sources').item.json.data[0].output.analysis.methodology}}\n</p>\n\n<h3>Key Inflation Trends:</h3>\n<p>\n  • {{$('combine all data sources').item.json.data[0].output.analysis.key_trends[0]}}<br>\n  • {{$('combine all data sources').item.json.data[0].output.analysis.key_trends[1]}}<br>\n  • {{$('combine all data sources').item.json.data[0].output.analysis.key_trends[2]}}<br>\n  • {{$('combine all data sources').item.json.data[0].output.analysis.key_trends[3]}}<br>\n  • {{$('combine all data sources').item.json.data[0].output.analysis.key_trends[4]}}\n</p>\n\n<h3>Industry-Specific Factors:</h3>\n<p>\n  • {{$('combine all data sources').item.json.data[0].output.analysis.industry_specific_factors[0]}}<br>\n  • {{$('combine all data sources').item.json.data[0].output.analysis.industry_specific_factors[1]}}<br>\n  • {{$('combine all data sources').item.json.data[0].output.analysis.industry_specific_factors[2]}}<br>\n  • {{$('combine all data sources').item.json.data[0].output.analysis.industry_specific_factors[3]}}<br>\n  • {{$('combine all data sources').item.json.data[0].output.analysis.industry_specific_factors[4]}}<br>\n  • {{$('combine all data sources').item.json.data[0].output.analysis.industry_specific_factors[5]}}\n</p>\n\n<p>\n  <strong>Forecast:</strong><br>\n  {{$('combine all data sources').item.json.data[0].output.analysis.forecast}}\n</p>\n\n<hr>\n<p style=\"font-style: italic; color: #666; text-align: center;\">\n  Report generated by Banfield Agentic Solutions & n8n\n</p>\n  </body>\n</html>",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        6180,
        -1140
      ],
      "id": "24079936-0839-492c-888f-65aa64cf5685",
      "name": "Send Residual",
      "webhookId": "d02ed6e7-d966-4ea2-a854-f328ad60decc",
      "credentials": {
        "gmailOAuth2": {
          "id": "nvL5N552zhjJT8zt",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node - Executive Summary Parser\n// Parses Claude AI executive summary and valuation analysis output\n\n// Get input data\nconst inputData = $input.all();\n\n// Function to extract JSON from various input formats\nfunction extractJSON(rawData) {\n  let jsonString = '';\n  \n  if (typeof rawData === 'string') {\n    jsonString = rawData;\n  } else if (rawData && rawData.output) {\n    jsonString = rawData.output;\n  } else if (rawData && rawData.json && rawData.json.output) {\n    jsonString = rawData.json.output;\n  } else if (Array.isArray(rawData) && rawData.length > 0) {\n    const firstItem = rawData[0];\n    if (firstItem.output) {\n      jsonString = firstItem.output;\n    } else if (firstItem.json && firstItem.json.output) {\n      jsonString = firstItem.json.output;\n    } else {\n      jsonString = JSON.stringify(firstItem);\n    }\n  } else {\n    jsonString = JSON.stringify(rawData);\n  }\n  \n  // Clean up the JSON string - remove ```json wrapper\n  jsonString = jsonString.replace(/^```json\\n?/, '').replace(/\\n?```$/, '');\n  \n  return jsonString;\n}\n\n// Function to safely parse JSON with error handling\nfunction safeParseJSON(jsonString) {\n  try {\n    return JSON.parse(jsonString);\n  } catch (error) {\n    console.log('JSON parse failed:', error.message);\n    console.log('Attempting to repair JSON...');\n    \n    // Try to find the last complete JSON object\n    let braceCount = 0;\n    let lastCompleteIndex = -1;\n    \n    for (let i = 0; i < jsonString.length; i++) {\n      if (jsonString[i] === '{') {\n        braceCount++;\n      } else if (jsonString[i] === '}') {\n        braceCount--;\n        if (braceCount === 0) {\n          lastCompleteIndex = i;\n        }\n      }\n    }\n    \n    if (lastCompleteIndex > -1) {\n      const repairedJson = jsonString.substring(0, lastCompleteIndex + 1);\n      try {\n        return JSON.parse(repairedJson);\n      } catch (repairError) {\n        console.log('Repair failed, using manual extraction');\n      }\n    }\n    \n    // Return basic structure if all parsing fails\n    return {\n      executive_summary: {\n        overview: 'Unable to parse overview from provided data',\n        key_findings: [],\n        market_conditions: 'Unable to parse market conditions',\n        risk_assessment: {\n          risks: [],\n          mitigation_strategies: []\n        },\n        recommendations: [],\n        next_steps: []\n      },\n      valuation_details: {\n        initial_value: 'Unable to parse initial values',\n        '48_month_values': {\n          retail: 'Unable to parse',\n          market: 'Unable to parse',\n          wholesale: 'Unable to parse'\n        },\n        '60_month_values': {\n          retail: 'Unable to parse',\n          market: 'Unable to parse',\n          wholesale: 'Unable to parse'\n        },\n        '72_month_values': {\n          retail: 'Unable to parse',\n          market: 'Unable to parse',\n          wholesale: 'Unable to parse'\n        }\n      }\n    };\n  }\n}\n\n// Function to extract key metrics from the executive summary\nfunction extractKeyMetrics(executiveSummary) {\n  const metrics = {\n    total_assets_analyzed: 0,\n    value_range_min: 0,\n    value_range_max: 0,\n    high_value_threshold: 500000,\n    high_utilization_threshold: 8000,\n    portfolio_risk_level: 'Medium'\n  };\n  \n  try {\n    // Extract value ranges from overview\n    const overview = executiveSummary.overview || '';\n    const valueMatches = overview.match(/\\$(\\d{1,3}(?:,\\d{3})*)/g);\n    if (valueMatches && valueMatches.length >= 2) {\n      metrics.value_range_min = parseInt(valueMatches[0].replace(/[$,]/g, ''));\n      metrics.value_range_max = parseInt(valueMatches[valueMatches.length - 1].replace(/[$,]/g, ''));\n    }\n    \n    // Extract asset count from key findings\n    const keyFindings = executiveSummary.key_findings || [];\n    for (const finding of keyFindings) {\n      if (finding.includes('equipment') || finding.includes('assets')) {\n        const assetMatches = finding.match(/(\\d+)/g);\n        if (assetMatches) {\n          metrics.total_assets_analyzed = Math.max(metrics.total_assets_analyzed, parseInt(assetMatches[0]));\n        }\n      }\n    }\n    \n    // Determine risk level based on risks count\n    const risks = executiveSummary.risk_assessment?.risks || [];\n    if (risks.length >= 5) {\n      metrics.portfolio_risk_level = 'High';\n    } else if (risks.length >= 3) {\n      metrics.portfolio_risk_level = 'Medium';\n    } else {\n      metrics.portfolio_risk_level = 'Low';\n    }\n    \n  } catch (error) {\n    console.log('Error extracting metrics:', error.message);\n  }\n  \n  return metrics;\n}\n\n// Function to parse valuation ranges into structured data\nfunction parseValuationDetails(valuationDetails) {\n  const parsedValuation = {\n    time_periods: ['48_month', '60_month', '72_month'],\n    value_types: ['retail', 'market', 'wholesale'],\n    structured_values: {}\n  };\n  \n  try {\n    // Parse each time period\n    for (const period of parsedValuation.time_periods) {\n      const periodKey = period + '_values';\n      const periodData = valuationDetails[periodKey];\n      \n      if (periodData) {\n        parsedValuation.structured_values[period] = {};\n        \n        for (const valueType of parsedValuation.value_types) {\n          const valueString = periodData[valueType] || '';\n          const ranges = extractValueRange(valueString);\n          parsedValuation.structured_values[period][valueType] = ranges;\n        }\n      }\n    }\n    \n    // Parse initial value\n    const initialValueString = valuationDetails.initial_value || '';\n    parsedValuation.initial_value_range = extractValueRange(initialValueString);\n    \n  } catch (error) {\n    console.log('Error parsing valuation details:', error.message);\n  }\n  \n  return parsedValuation;\n}\n\n// Helper function to extract value ranges from text\nfunction extractValueRange(text) {\n  const range = { min: 0, max: 0 };\n  \n  try {\n    const valueMatches = text.match(/\\$(\\d{1,3}(?:,\\d{3})*)/g);\n    if (valueMatches && valueMatches.length >= 2) {\n      range.min = parseInt(valueMatches[0].replace(/[$,]/g, ''));\n      range.max = parseInt(valueMatches[valueMatches.length - 1].replace(/[$,]/g, ''));\n    } else if (valueMatches && valueMatches.length === 1) {\n      const value = parseInt(valueMatches[0].replace(/[$,]/g, ''));\n      range.min = value;\n      range.max = value;\n    }\n  } catch (error) {\n    console.log('Error extracting value range from:', text);\n  }\n  \n  return range;\n}\n\n// Main processing function\nfunction processExecutiveSummary(rawData) {\n  try {\n    // Extract and parse JSON\n    const jsonString = extractJSON(rawData);\n    const parsedData = safeParseJSON(jsonString);\n    \n    // Extract key components\n    const executiveSummary = parsedData.executive_summary || {};\n    const valuationDetails = parsedData.valuation_details || {};\n    \n    // Process data\n    const keyMetrics = extractKeyMetrics(executiveSummary);\n    const parsedValuation = parseValuationDetails(valuationDetails);\n    \n    // Build final result structure\n    const result = {\n      executive_summary: {\n        overview: executiveSummary.overview || '',\n        key_findings: executiveSummary.key_findings || [],\n        market_conditions: executiveSummary.market_conditions || '',\n        risk_assessment: {\n          risks: executiveSummary.risk_assessment?.risks || [],\n          mitigation_strategies: executiveSummary.risk_assessment?.mitigation_strategies || [],\n          risk_count: (executiveSummary.risk_assessment?.risks || []).length,\n          mitigation_count: (executiveSummary.risk_assessment?.mitigation_strategies || []).length\n        },\n        recommendations: executiveSummary.recommendations || [],\n        next_steps: executiveSummary.next_steps || [],\n        recommendation_count: (executiveSummary.recommendations || []).length,\n        next_steps_count: (executiveSummary.next_steps || []).length\n      },\n      valuation_details: {\n        initial_value: valuationDetails.initial_value || '',\n        '48_month_values': valuationDetails['48_month_values'] || {},\n        '60_month_values': valuationDetails['60_month_values'] || {},\n        '72_month_values': valuationDetails['72_month_values'] || {},\n        parsed_valuation: parsedValuation\n      },\n      key_metrics: keyMetrics,\n      summary_statistics: {\n        total_key_findings: (executiveSummary.key_findings || []).length,\n        total_risks: (executiveSummary.risk_assessment?.risks || []).length,\n        total_mitigations: (executiveSummary.risk_assessment?.mitigation_strategies || []).length,\n        total_recommendations: (executiveSummary.recommendations || []).length,\n        total_next_steps: (executiveSummary.next_steps || []).length,\n        portfolio_risk_level: keyMetrics.portfolio_risk_level,\n        value_range: {\n          min: keyMetrics.value_range_min,\n          max: keyMetrics.value_range_max\n        }\n      },\n      processing_metadata: {\n        parsed_at: new Date().toISOString(),\n        data_source: 'claude_ai_executive_summary',\n        parsing_method: 'automated_json_extraction'\n      }\n    };\n    \n    return result;\n    \n  } catch (error) {\n    console.error('Error processing executive summary:', error.message);\n    throw error;\n  }\n}\n\n// Process all input items\nconst results = [];\n\nfor (let i = 0; i < inputData.length; i++) {\n  try {\n    const item = inputData[i];\n    console.log('Processing executive summary item:', i);\n    \n    const processedResult = processExecutiveSummary(item);\n    \n    results.push({\n      json: processedResult,\n      pairedItem: { item: i }\n    });\n    \n  } catch (error) {\n    console.error('Error processing item', i, ':', error.message);\n    \n    results.push({\n      json: {\n        error: true,\n        message: error.message,\n        item_index: i,\n        error_type: 'executive_summary_parsing_error'\n      },\n      pairedItem: { item: i }\n    });\n  }\n}\n\nreturn results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4560,
        700
      ],
      "id": "b633cf29-4993-48a9-bab6-55e8a08b9f3e",
      "name": "Parse Executive Summary Output",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node - Format Executive Summary Plots\n// Combines scatter plot, histograms, and depreciation analysis into executive summary\n\n// Get data from all input nodes\nconst scatterData = $('prep for scatter plot').first().json;\nconst histogramData = $('prep histogram plots').first().json;\nconst depreciationData = $('Prep Modified Depreciation output').first().json;\n\nconsole.log('Processing executive summary data...');\nconsole.log('Scatter data points:', scatterData.dataPointsCount);\nconsole.log('Histogram charts:', histogramData.histograms?.length || 0);\nconsole.log('Depreciation analysis:', depreciationData.equipment_analysis?.equipment_name || 'Available');\n\n// Create executive summary structure\nconst executiveSummary = {\n    summary: {\n        title: \"Equipment Analysis Executive Summary\",\n        generated_date: new Date().toISOString().split('T')[0],\n        total_equipment_analyzed: scatterData.dataPointsCount || 0,\n        analysis_types: [\"Market Analysis\", \"Distribution Analysis\", \"Depreciation Analysis\"]\n    },\n    \n    market_analysis: {\n        title: \"Equipment Hours vs Price Analysis\",\n        description: \"Scatter plot analysis showing relationship between equipment usage and current market price\",\n        chart_url: scatterData.chartUrl,\n        data_points: scatterData.dataPointsCount,\n        insights: [\n            `Analyzed ${scatterData.dataPointsCount} pieces of equipment`,\n            \"Correlation between operating hours and current market value\",\n            \"Market positioning analysis for equipment valuation\"\n        ]\n    },\n    \n    distribution_analysis: {\n        title: \"Equipment Portfolio Distribution\",\n        description: \"Statistical distribution analysis across key equipment characteristics\",\n        total_charts: histogramData.histograms?.length || 0,\n        summary_stats: histogramData.summaryStats,\n        charts: (histogramData.histograms || []).map(histogram => ({\n            field_name: histogram.fieldName,\n            field_type: histogram.fieldType,\n            chart_url: histogram.chartUrl,\n            data_completeness: Math.round((histogram.dataCount / (histogramData.totalRecords || 1)) * 100),\n            unique_values: histogram.uniqueValues,\n            key_insights: generateFieldInsights(histogram)\n        }))\n    },\n    \n    depreciation_analysis: {\n        title: \"Equipment Depreciation Analysis\",\n        description: \"Comprehensive depreciation modeling using multiple accounting methods\",\n        equipment_details: depreciationData.equipment_analysis,\n        chart_url: depreciationData.quickchart_url,\n        financial_summary: depreciationData.financial_summary,\n        depreciation_methods: {\n            straight_line: depreciationData.depreciation_calculations?.straight_line,\n            double_declining: depreciationData.depreciation_calculations?.double_declining,\n            sum_of_years_digits: depreciationData.depreciation_calculations?.sum_of_years_digits,\n            macrs: depreciationData.depreciation_calculations?.macrs\n        },\n        recommendations: [\n            depreciationData.financial_summary?.recommended_method || \"MACRS method recommended for tax optimization\",\n            \"Consider accelerated depreciation for maximum tax benefits\",\n            \"Regular equipment valuation updates recommended\"\n        ]\n    },\n    \n    key_findings: generateKeyFindings(scatterData, histogramData, depreciationData),\n    \n    chart_urls: {\n        scatter_plot: scatterData.chartUrl,\n        histograms: (histogramData.histograms || []).map(h => ({\n            field: h.fieldName,\n            url: h.chartUrl\n        })),\n        depreciation_chart: depreciationData.quickchart_url\n    },\n    \n    executive_dashboard: createDashboardConfig(scatterData, histogramData, depreciationData)\n};\n\n// Helper function to generate field-specific insights\nfunction generateFieldInsights(histogram) {\n    const insights = [];\n    \n    switch(histogram.fieldName.toLowerCase()) {\n        case 'make':\n            insights.push(`${histogram.uniqueValues} different manufacturers in portfolio`);\n            insights.push(\"Brand diversification analysis available\");\n            break;\n        case 'model':\n            insights.push(`${histogram.uniqueValues} unique equipment models`);\n            insights.push(\"Model concentration risk assessment\");\n            break;\n        case 'location':\n            insights.push(`Equipment distributed across ${histogram.uniqueValues} locations`);\n            insights.push(\"Geographic distribution for risk management\");\n            break;\n        case 'age':\n        case 'year model':\n            insights.push(\"Equipment age distribution for replacement planning\");\n            insights.push(\"Average fleet age impacts depreciation strategy\");\n            break;\n        case 'hours - total':\n        case 'hours - per year':\n            insights.push(\"Usage patterns indicate maintenance scheduling needs\");\n            insights.push(\"High-usage equipment may require earlier replacement\");\n            break;\n        case 'current price':\n            insights.push(\"Market value distribution for portfolio valuation\");\n            insights.push(\"Price ranges inform budget planning\");\n            break;\n        default:\n            insights.push(`Distribution analysis for ${histogram.fieldName}`);\n            insights.push(\"Statistical insights available for decision making\");\n    }\n    \n    return insights;\n}\n\n// Helper function to generate key findings\nfunction generateKeyFindings(scatterData, histogramData, depreciationData) {\n    const findings = [];\n    \n    // Market analysis findings\n    if (scatterData.dataPointsCount > 0) {\n        findings.push({\n            category: \"Market Analysis\",\n            finding: `Successfully analyzed ${scatterData.dataPointsCount} equipment units for price-hours correlation`,\n            impact: \"Enables data-driven pricing and valuation decisions\"\n        });\n    }\n    \n    // Distribution analysis findings\n    if (histogramData.summaryStats) {\n        const stats = histogramData.summaryStats;\n        findings.push({\n            category: \"Portfolio Distribution\",\n            finding: `Portfolio spans ${stats.categoricalFields} categorical and ${stats.numericalFields} numerical dimensions`,\n            impact: \"Comprehensive understanding of portfolio composition\"\n        });\n        \n        // Data completeness finding\n        const avgCompleteness = stats.fieldSummary.reduce((sum, field) => sum + field.dataCompleteness, 0) / stats.fieldSummary.length;\n        findings.push({\n            category: \"Data Quality\",\n            finding: `Average data completeness: ${Math.round(avgCompleteness)}%`,\n            impact: avgCompleteness > 80 ? \"High-quality data supports reliable analysis\" : \"Data gaps may require attention for optimal insights\"\n        });\n    }\n    \n    // Depreciation analysis findings\n    if (depreciationData.financial_summary) {\n        const summary = depreciationData.financial_summary;\n        findings.push({\n            category: \"Depreciation Strategy\",\n            finding: summary.recommended_method || \"MACRS method provides optimal tax benefits\",\n            impact: \"Strategic depreciation selection maximizes financial efficiency\"\n        });\n    }\n    \n    return findings;\n}\n\n// Helper function to create dashboard configuration\nfunction createDashboardConfig(scatterData, histogramData, depreciationData) {\n    return {\n        dashboard_title: \"Equipment Analysis Dashboard\",\n        layout: \"executive\",\n        sections: [\n            {\n                section: \"market_overview\",\n                title: \"Market Analysis\",\n                chart_type: \"scatter\",\n                url: scatterData.chartUrl,\n                position: { row: 1, col: 1, span: 2 }\n            },\n            {\n                section: \"depreciation_trends\",\n                title: \"Depreciation Analysis\",\n                chart_type: \"line\",\n                url: depreciationData.quickchart_url,\n                position: { row: 1, col: 3, span: 2 }\n            },\n            {\n                section: \"distribution_grid\",\n                title: \"Portfolio Distributions\",\n                chart_type: \"histogram_grid\",\n                charts: (histogramData.histograms || []).slice(0, 6).map(h => ({\n                    title: h.fieldName,\n                    url: h.chartUrl\n                })),\n                position: { row: 2, col: 1, span: 4 }\n            }\n        ],\n        export_options: {\n            pdf_ready: true,\n            presentation_mode: true,\n            print_optimized: true\n        }\n    };\n}\n\n// Create comprehensive output with debugging info\nconst output = {\n    success: true,\n    message: \"Executive summary successfully generated\",\n    executive_summary: executiveSummary,\n    processing_stats: {\n        scatter_plots: 1,\n        histogram_charts: histogramData.histograms?.length || 0,\n        depreciation_analyses: 1,\n        total_charts: 1 + (histogramData.histograms?.length || 0) + 1,\n        data_quality_score: calculateDataQualityScore(scatterData, histogramData, depreciationData)\n    },\n    debug_info: {\n        scatter_input_valid: !!scatterData.chartUrl,\n        histogram_input_valid: !!(histogramData.histograms && histogramData.histograms.length > 0),\n        depreciation_input_valid: !!depreciationData.quickchart_url,\n        timestamp: new Date().toISOString()\n    }\n};\n\n// Helper function to calculate overall data quality score\nfunction calculateDataQualityScore(scatterData, histogramData, depreciationData) {\n    let score = 0;\n    let maxScore = 0;\n    \n    // Scatter plot quality (max 30 points)\n    maxScore += 30;\n    if (scatterData.chartUrl) score += 20;\n    if (scatterData.dataPointsCount > 0) score += 10;\n    \n    // Histogram quality (max 40 points)\n    maxScore += 40;\n    if (histogramData.histograms && histogramData.histograms.length > 0) {\n        score += 20;\n        const avgCompleteness = histogramData.summaryStats?.fieldSummary?.reduce((sum, field) => sum + field.dataCompleteness, 0) / histogramData.summaryStats.fieldSummary.length || 0;\n        score += Math.round(avgCompleteness * 20 / 100);\n    }\n    \n    // Depreciation quality (max 30 points)\n    maxScore += 30;\n    if (depreciationData.quickchart_url) score += 15;\n    if (depreciationData.financial_summary) score += 15;\n    \n    return Math.round((score / maxScore) * 100);\n}\n\nconsole.log(`Executive summary generated with ${output.processing_stats.total_charts} total charts`);\nconsole.log(`Data quality score: ${output.processing_stats.data_quality_score}%`);\n\n// Return the formatted executive summary\nreturn [{ json: output }];\n\n\n\n// // n8n Code Node - Simple Direct Email Formatter\n// // Works directly with the parsed executive summary structure\n\n// const inputData = $input.all();\n\n// function formatForEmail(data) {\n//   try {\n//     console.log('Input data keys:', Object.keys(data));\n    \n//     // Get the data - it might be nested in different ways\n//     let execData = data;\n//     if (data.json) {\n//       execData = data.json;\n//     }\n    \n//     console.log('Working with data keys:', Object.keys(execData));\n    \n//     // Extract sections\n//     const execSummary = execData.executive_summary || {};\n//     const valuationDetails = execData.valuation_details || {};\n//     const summaryStats = execData.summary_statistics || {};\n    \n//     console.log('Executive summary keys:', Object.keys(execSummary));\n//     console.log('Valuation details keys:', Object.keys(valuationDetails));\n    \n//     // Format overview with line breaks\n//     const overview = execSummary.overview || 'No overview available';\n//     const overviewFormatted = overview.replace(/\\. /g, '.\\n\\n');\n    \n//     // Format key findings\n//     const keyFindings = execSummary.key_findings || [];\n//     const findingsFormatted = keyFindings.length > 0 \n//       ? keyFindings.map((finding, index) => `${index + 1}. ${finding}`).join('\\n\\n')\n//       : 'No key findings available';\n    \n//     // Format market conditions\n//     const marketConditions = execSummary.market_conditions || 'No market conditions available';\n//     const marketFormatted = marketConditions.replace(/\\. /g, '.\\n\\n');\n    \n//     // Format risks\n//     const risks = execSummary.risk_assessment?.risks || [];\n//     const risksFormatted = risks.length > 0\n//       ? risks.map(risk => `• ${risk}`).join('\\n')\n//       : 'No risks identified';\n    \n//     // Format mitigations\n//     const mitigations = execSummary.risk_assessment?.mitigation_strategies || [];\n//     const mitigationsFormatted = mitigations.length > 0\n//       ? mitigations.map(mitigation => `• ${mitigation}`).join('\\n')\n//       : 'No mitigation strategies provided';\n    \n//     // Format recommendations\n//     const recommendations = execSummary.recommendations || [];\n//     const recommendationsFormatted = recommendations.length > 0\n//       ? recommendations.map((rec, index) => `${index + 1}. ${rec}`).join('\\n\\n')\n//       : 'No recommendations provided';\n    \n//     // Format next steps\n//     const nextSteps = execSummary.next_steps || [];\n//     const nextStepsFormatted = nextSteps.length > 0\n//       ? nextSteps.map((step, index) => `${index + 1}. ${step}`).join('\\n\\n')\n//       : 'No next steps provided';\n    \n//     // Get valuation data\n//     const initialValue = valuationDetails.initial_value || 'Not specified';\n//     const val48 = valuationDetails['48_month_values'] || {};\n//     const val60 = valuationDetails['60_month_values'] || {};\n//     const val72 = valuationDetails['72_month_values'] || {};\n    \n//     // Format valuation summary\n//     const valuationFormatted = `Initial Value: ${initialValue}\n\n// 48-Month Values:\n// • Retail: ${val48.retail || 'Not specified'}\n// • Market: ${val48.market || 'Not specified'}\n// • Wholesale: ${val48.wholesale || 'Not specified'}\n\n// 60-Month Values:\n// • Retail: ${val60.retail || 'Not specified'}\n// • Market: ${val60.market || 'Not specified'}\n// • Wholesale: ${val60.wholesale || 'Not specified'}\n\n// 72-Month Values:\n// • Retail: ${val72.retail || 'Not specified'}\n// • Market: ${val72.market || 'Not specified'}\n// • Wholesale: ${val72.wholesale || 'Not specified'}`;\n\n//     // Format portfolio statistics\n//     const portfolioStatsFormatted = `Portfolio Statistics:\n// • Total Key Findings: ${summaryStats.total_key_findings || 0}\n// • Total Risks: ${summaryStats.total_risks || 0}\n// • Total Mitigations: ${summaryStats.total_mitigations || 0}\n// • Total Recommendations: ${summaryStats.total_recommendations || 0}\n// • Total Next Steps: ${summaryStats.total_next_steps || 0}\n// • Risk Level: ${summaryStats.portfolio_risk_level || 'Not assessed'}\n// • Value Range: $${(summaryStats.value_range?.min || 0).toLocaleString()} - $${(summaryStats.value_range?.max || 0).toLocaleString()}`;\n\n//     return {\n//       email_subject: 'Residual Value Analysis - Executive Summary Overview',\n//       email_greeting: 'Dear Mr. Banfield,\\n\\nWanted to share some insights on your recent request for a Residual Calc on:\\n\\nXXX Executive Summary Overview:',\n      \n//       overview_formatted: overviewFormatted,\n//       key_findings_formatted: findingsFormatted,\n//       market_conditions_formatted: marketFormatted,\n//       risks_formatted: risksFormatted,\n//       mitigations_formatted: mitigationsFormatted,\n//       recommendations_formatted: recommendationsFormatted,\n//       next_steps_formatted: nextStepsFormatted,\n//       valuation_summary_formatted: valuationFormatted,\n//       portfolio_stats_formatted: portfolioStatsFormatted,\n      \n//       email_signature: '\\n\\nBest regards,\\nThe Endless Forms Team\\ninfo@theendlessforms.com'\n//     };\n    \n//   } catch (error) {\n//     console.error('Formatting error:', error.message);\n//     return {\n//       email_subject: 'Executive Summary - Formatting Error',\n//       email_greeting: 'Dear Mr. Banfield,',\n//       error_message: `Error formatting data: ${error.message}`,\n//       email_signature: '\\n\\nBest regards,\\nThe Endless Forms Team'\n//     };\n//   }\n// }\n\n// // Process input data\n// const results = [];\n\n// for (let i = 0; i < inputData.length; i++) {\n//   try {\n//     const item = inputData[i];\n//     console.log(`Processing email format for item ${i}`);\n    \n//     const emailData = formatForEmail(item);\n    \n//     results.push({\n//       json: emailData,\n//       pairedItem: { item: i }\n//     });\n    \n//   } catch (error) {\n//     console.error(`Error processing item ${i}:`, error.message);\n//     results.push({\n//       json: {\n//         email_subject: 'Executive Summary - Processing Error',\n//         error_message: `Error processing item ${i}: ${error.message}`,\n//         email_signature: '\\nBest regards,\\nThe Endless Forms Team'\n//       },\n//       pairedItem: { item: i }\n//     });\n//   }\n// }\n\n// return results;\n\n// // n8n Code Node - Email Formatter for Executive Summary\n// // Formats parsed executive summary data for clean email output\n\n// const inputData = $input.all();\n\n// function formatExecutiveSummaryForEmail(data) {\n//   try {\n//     // Extract the core data\n//     const execSummary = data.executive_summary || {};\n//     const valuationDetails = data.valuation_details || {};\n//     const keyMetrics = data.key_metrics || {};\n    \n//     // Format overview (break into paragraphs)\n//     const overview = execSummary.overview || '';\n//     const formattedOverview = overview.replace(/\\.\\s+/g, '.\\n\\n');\n    \n//     // Format key findings as numbered list\n//     const keyFindings = execSummary.key_findings || [];\n//     const formattedFindings = keyFindings.map((finding, index) => \n//       `${index + 1}. ${finding}`\n//     ).join('\\n\\n');\n    \n//     // Format market conditions (break into paragraphs)\n//     const marketConditions = execSummary.market_conditions || '';\n//     const formattedMarketConditions = marketConditions.replace(/\\.\\s+/g, '.\\n\\n');\n    \n//     // Format risks as bulleted list\n//     const risks = execSummary.risk_assessment?.risks || [];\n//     const formattedRisks = risks.map(risk => `• ${risk}`).join('\\n');\n    \n//     // Format mitigation strategies as bulleted list\n//     const mitigations = execSummary.risk_assessment?.mitigation_strategies || [];\n//     const formattedMitigations = mitigations.map(mitigation => `• ${mitigation}`).join('\\n');\n    \n//     // Format recommendations as numbered list\n//     const recommendations = execSummary.recommendations || [];\n//     const formattedRecommendations = recommendations.map((rec, index) => \n//       `${index + 1}. ${rec}`\n//     ).join('\\n\\n');\n    \n//     // Format next steps as numbered list\n//     const nextSteps = execSummary.next_steps || [];\n//     const formattedNextSteps = nextSteps.map((step, index) => \n//       `${index + 1}. ${step}`\n//     ).join('\\n\\n');\n    \n//     // Extract valuation summaries\n//     const initialValue = valuationDetails.initial_value || 'Not specified';\n//     const val48Month = valuationDetails['48_month_values'] || {};\n//     const val60Month = valuationDetails['60_month_values'] || {};\n//     const val72Month = valuationDetails['72_month_values'] || {};\n    \n//     // Format valuation tables\n//     const valuationSummary = `\n// 48-Month Values:\n// • Retail: ${val48Month.retail || 'Not specified'}\n// • Market: ${val48Month.market || 'Not specified'}  \n// • Wholesale: ${val48Month.wholesale || 'Not specified'}\n\n// 60-Month Values:\n// • Retail: ${val60Month.retail || 'Not specified'}\n// • Market: ${val60Month.market || 'Not specified'}\n// • Wholesale: ${val60Month.wholesale || 'Not specified'}\n\n// 72-Month Values:\n// • Retail: ${val72Month.retail || 'Not specified'}\n// • Market: ${val72Month.market || 'Not specified'}\n// • Wholesale: ${val72Month.wholesale || 'Not specified'}`.trim();\n    \n//     // Create summary statistics\n//     const stats = data.summary_statistics || {};\n//     const portfolioStats = `\n// Portfolio Statistics:\n// • Total Key Findings: ${stats.total_key_findings || 0}\n// • Total Risks Identified: ${stats.total_risks || 0}\n// • Total Mitigation Strategies: ${stats.total_mitigations || 0}\n// • Total Recommendations: ${stats.total_recommendations || 0}\n// • Total Next Steps: ${stats.total_next_steps || 0}\n// • Portfolio Risk Level: ${stats.portfolio_risk_level || 'Not assessed'}\n// • Value Range: $${(stats.value_range?.min || 0).toLocaleString()} - $${(stats.value_range?.max || 0).toLocaleString()}`.trim();\n    \n//     return {\n//       // Email subject\n//       email_subject: `Residual Value Analysis - Executive Summary Overview`,\n      \n//       // Email greeting\n//       email_greeting: `Dear Mr. Banfield,\\n\\nWanted to share some insights on your recent request for a Residual Calc on:`,\n      \n//       // Main sections for email template\n//       overview_formatted: formattedOverview,\n//       key_findings_formatted: formattedFindings,\n//       market_conditions_formatted: formattedMarketConditions,\n//       risks_formatted: formattedRisks,\n//       mitigations_formatted: formattedMitigations,\n//       recommendations_formatted: formattedRecommendations,\n//       next_steps_formatted: formattedNextSteps,\n//       valuation_summary_formatted: valuationSummary,\n//       portfolio_stats_formatted: portfolioStats,\n      \n//       // Individual items for direct access\n//       overview_text: execSummary.overview || '',\n//       key_findings_list: keyFindings,\n//       market_conditions_text: execSummary.market_conditions || '',\n//       risks_list: risks,\n//       mitigations_list: mitigations,\n//       recommendations_list: recommendations,\n//       next_steps_list: nextSteps,\n      \n//       // Valuation details\n//       initial_value_text: initialValue,\n//       val_48_retail: val48Month.retail || '',\n//       val_48_market: val48Month.market || '',\n//       val_48_wholesale: val48Month.wholesale || '',\n//       val_60_retail: val60Month.retail || '',\n//       val_60_market: val60Month.market || '',\n//       val_60_wholesale: val60Month.wholesale || '',\n//       val_72_retail: val72Month.retail || '',\n//       val_72_market: val72Month.market || '',\n//       val_72_wholesale: val72Month.wholesale || '',\n      \n//       // Statistics\n//       total_findings: stats.total_key_findings || 0,\n//       total_risks: stats.total_risks || 0,\n//       total_mitigations: stats.total_mitigations || 0,\n//       total_recommendations: stats.total_recommendations || 0,\n//       total_next_steps: stats.total_next_steps || 0,\n//       risk_level: stats.portfolio_risk_level || 'Not assessed',\n//       value_min: (stats.value_range?.min || 0).toLocaleString(),\n//       value_max: (stats.value_range?.max || 0).toLocaleString(),\n      \n//       // Email footer\n//       email_signature: `\\n\\nBest regards,\\nThe Endless Forms Team\\ninfo@theendlessforms.com`\n//     };\n    \n//   } catch (error) {\n//     console.error('Error formatting email data:', error.message);\n//     return {\n//       email_subject: 'Executive Summary - Formatting Error',\n//       email_greeting: 'Dear Mr. Banfield,',\n//       error_message: `Error formatting executive summary: ${error.message}`,\n//       email_signature: '\\n\\nBest regards,\\nThe Endless Forms Team'\n//     };\n//   }\n// }\n\n// // Process all input items\n// const results = [];\n\n// for (let i = 0; i < inputData.length; i++) {\n//   try {\n//     const item = inputData[i];\n//     console.log('Formatting email for item:', i);\n    \n//     // Get the data (might be in json property)\n//     const data = item.json || item;\n    \n//     const emailData = formatExecutiveSummaryForEmail(data);\n    \n//     results.push({\n//       json: emailData,\n//       pairedItem: { item: i }\n//     });\n    \n//   } catch (error) {\n//     console.error('Error processing item', i, ':', error.message);\n    \n//     results.push({\n//       json: {\n//         email_subject: 'Executive Summary - Processing Error',\n//         email_greeting: 'Dear Mr. Banfield,',\n//         error_message: `Error processing item ${i}: ${error.message}`,\n//         email_signature: '\\n\\nBest regards,\\nThe Endless Forms Team'\n//       },\n//       pairedItem: { item: i }\n//     });\n//   }\n// }\n\n// return results;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        4500,
        980
      ],
      "id": "8437900f-72ce-4d8d-aac5-abffc99a1b27",
      "name": "Format Exec summary Plots",
      "disabled": true
    },
    {
      "parameters": {
        "numberInputs": 9
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        3720,
        -1120
      ],
      "id": "296201c4-51c0-4225-896e-81ab65523e71",
      "name": "Merge"
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        4060,
        -920
      ],
      "id": "0daa136e-cbac-4c59-ac1e-72dea3985c3c",
      "name": "combine all data sources"
    },
    {
      "parameters": {
        "url": "={{ $json.histograms[1].chartUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "chart"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2920,
        -1460
      ],
      "id": "81d667be-b411-47fd-aec8-661a64cfd258",
      "name": "Histo - Model Distribution",
      "retryOnFail": true
    },
    {
      "parameters": {
        "url": "={{ $json.histograms[2].chartUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "chart"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3140,
        -1360
      ],
      "id": "aa86c907-eb96-4727-a794-2c0b2329df60",
      "name": "Histo - Location Distribution",
      "retryOnFail": true
    },
    {
      "parameters": {
        "url": "={{ $json.histograms[3].chartUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "chart"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3300,
        -1240
      ],
      "id": "829c29f8-bcdc-4e9e-a1a0-748a0bcc4582",
      "name": "Histo - Year Distribution",
      "retryOnFail": true
    },
    {
      "parameters": {
        "url": "={{ $json.histograms[4].chartUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "chart"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3260,
        -1060
      ],
      "id": "b2f00eef-aebd-42df-acd9-6e622b806147",
      "name": "Histo - Age Distribution",
      "retryOnFail": true
    },
    {
      "parameters": {
        "url": "={{ $json.histograms[5].chartUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "chart"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3420,
        -940
      ],
      "id": "1dc18040-800a-4463-a035-700f782318a3",
      "name": "Histo - Utilization Distribution",
      "retryOnFail": true
    },
    {
      "parameters": {
        "url": "={{ $json.histograms[6].chartUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "chart"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3460,
        -1140
      ],
      "id": "3e836ad4-cba7-4f6e-8f0b-b28aeb6dc5aa",
      "name": "Histo - Annual Utilization Distribution",
      "retryOnFail": true
    },
    {
      "parameters": {
        "url": "={{ $json.histograms[7].chartUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "chart"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3100,
        -760
      ],
      "id": "6b7c4062-991d-4e17-b9fe-dced4bdf1935",
      "name": "Histo - Price Distribution",
      "retryOnFail": true
    },
    {
      "parameters": {
        "url": "={{ $('Prep Modified Depreciation output').item.json.quickchart_url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "mod_dep_plot"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2400,
        -420
      ],
      "id": "a1859ace-db11-4321-8623-2394ce203d4c",
      "name": "Depreciation Plots",
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node - QuickChart Table API from Google Sheets Data\n// This code prepares data from \"Save Residual Data\" Google Sheets node for QuickChart Table\n\n// Get data from the current input (previous node)\nconst sheetsData = $input.all();\n\n// Define all table columns based on your Google Sheets structure\nconst columns = [\n    { title: \"Source\", dataIndex: \"source\", width: 80, align: \"center\" },\n    { title: \"Make\", dataIndex: \"make\", width: 120 },\n    { title: \"Model\", dataIndex: \"model\", width: 150 },\n    { title: \"Location\", dataIndex: \"location\", width: 80, align: \"center\" },\n    { title: \"Year\", dataIndex: \"year\", width: 70, align: \"center\" },\n    { title: \"Age\", dataIndex: \"age\", width: 60, align: \"center\" },\n    { title: \"Hours - Total\", dataIndex: \"hoursTotal\", width: 100, align: \"right\" },\n    { title: \"Hours/Year\", dataIndex: \"hoursPerYear\", width: 90, align: \"right\" },\n    { title: \"Current Price\", dataIndex: \"currentPrice\", width: 120, align: \"right\" },\n    { title: \"Price Type\", dataIndex: \"priceType\", width: 80, align: \"center\" },\n    { title: \"OEC Estimate\", dataIndex: \"oecEstimate\", width: 120, align: \"right\" },\n    { title: \"Resid %\", dataIndex: \"residPercent\", width: 80, align: \"right\" },\n    { title: \"YOY %\", dataIndex: \"yoyPercent\", width: 80, align: \"right\" },\n    { title: \"20% Value\", dataIndex: \"twentyPercent\", width: 100, align: \"right\" },\n    { title: \"35% Value\", dataIndex: \"thirtyFivePercent\", width: 100, align: \"right\" },\n    { title: \"Notes\", dataIndex: \"notes\", width: 150 },\n    { title: \"Effective Age\", dataIndex: \"effectiveAge\", width: 90, align: \"right\" }\n];\n\n// Prepare data source in QuickChart format\nconst dataSource = [];\n\nconsole.log('Total items to process:', sheetsData.length);\n\n// Process each data item from Google Sheets\nsheetsData.forEach((item, index) => {\n    try {\n        // Get the actual data - handle different n8n data structures\n        let data;\n        if (item.json) {\n            data = item.json;\n        } else {\n            data = item;\n        }\n        \n        // Debug log to see the data structure\n        console.log(`Processing row ${index}:`, Object.keys(data));\n        \n        // Helper function to safely get and format numeric values\n        function formatNumber(value, isPercent = false, isCurrency = false) {\n            if (!value || value === '' || value === null || value === undefined) {\n                return '';\n            }\n            \n            let numStr = value.toString();\n            let num = parseFloat(numStr.replace(/[$,%\\s]/g, ''));\n            \n            if (isNaN(num)) {\n                return numStr; // Return original if not a number\n            }\n            \n            if (isCurrency) {\n                return '$' + num.toLocaleString();\n            } else if (isPercent) {\n                return num.toFixed(1) + '%';\n            } else {\n                return num.toLocaleString();\n            }\n        }\n        \n        // Helper function to safely get string values\n        function getString(value) {\n            if (!value || value === null || value === undefined) {\n                return '';\n            }\n            return value.toString();\n        }\n        \n        // Helper function to safely get field value with multiple possible field names\n        function getField(obj, ...fieldNames) {\n            for (let fieldName of fieldNames) {\n                if (obj.hasOwnProperty(fieldName) && obj[fieldName] !== null && obj[fieldName] !== undefined) {\n                    return obj[fieldName];\n                }\n            }\n            return '';\n        }\n        \n        // Create table row - mapping all your Google Sheets columns with flexible field matching\n        const row = {\n            source: getString(getField(data, 'Source', 'source')),\n            make: getString(getField(data, 'Make', 'make')),\n            model: getString(getField(data, 'Model', 'model')),\n            location: getString(getField(data, 'Location', 'location')),\n            year: getString(getField(data, 'Year model', 'Year', 'year', 'year_model')),\n            age: getString(getField(data, 'Age', 'age')),\n            hoursTotal: formatNumber(getField(data, 'Hours - total', 'Hours-total', 'hoursTotal', 'hours_total')),\n            hoursPerYear: formatNumber(getField(data, 'Hours - per year', 'Hours-per year', 'hoursPerYear', 'hours_per_year')),\n            currentPrice: formatNumber(getField(data, 'Current Price', 'currentPrice', 'current_price'), false, true),\n            priceType: getString(getField(data, 'Price Type', 'priceType', 'price_type')),\n            oecEstimate: formatNumber(getField(data, 'OEC (estimate)', 'OEC', 'oecEstimate', 'oec_estimate'), false, true),\n            residPercent: formatNumber(getField(data, 'Resid', 'residPercent', 'resid_percent'), true),\n            yoyPercent: formatNumber(getField(data, 'YOY', 'yoyPercent', 'yoy_percent'), true),\n            twentyPercent: formatNumber(getField(data, '20%', 'twentyPercent', 'twenty_percent'), true),\n            thirtyFivePercent: formatNumber(getField(data, '35%', 'thirtyFivePercent', 'thirty_five_percent'), true),\n            notes: getString(getField(data, 'Notes', 'notes')),\n            effectiveAge: formatNumber(getField(data, 'Effective Age', 'effectiveAge', 'effective_age'))\n        };\n        \n        dataSource.push(row);\n        console.log(`Added table row ${index + 1}: ${row.make} ${row.model}`);\n        \n    } catch (rowError) {\n        console.error(`Error processing row ${index}:`, rowError.message);\n        // Add an error row to maintain data integrity\n        dataSource.push({\n            source: 'ERROR',\n            make: `Row ${index}`,\n            model: 'Processing Error',\n            location: '',\n            year: '',\n            age: '',\n            hoursTotal: '',\n            hoursPerYear: '',\n            currentPrice: '',\n            priceType: '',\n            oecEstimate: '',\n            residPercent: '',\n            yoyPercent: '',\n            twentyPercent: '',\n            thirtyFivePercent: '',\n            notes: rowError.message,\n            effectiveAge: ''\n        });\n    }\n});\n\n// Ensure we have at least some data\nif (dataSource.length === 0) {\n    console.log('No data processed, adding sample row');\n    dataSource.push({\n        source: 'N/A',\n        make: 'No Data',\n        model: 'Available',\n        location: '',\n        year: '',\n        age: '',\n        hoursTotal: '',\n        hoursPerYear: '',\n        currentPrice: '',\n        priceType: '',\n        oecEstimate: '',\n        residPercent: '',\n        yoyPercent: '',\n        twentyPercent: '',\n        thirtyFivePercent: '',\n        notes: 'No input data received',\n        effectiveAge: ''\n    });\n}\n\n// Create QuickChart table data format\nconst tableData = {\n    title: \"Equipment Residual Value Analysis\",\n    columns: columns,\n    dataSource: dataSource\n};\n\n// Create styling options\nconst options = {\n    paddingVertical: 12,\n    paddingHorizontal: 8,\n    backgroundColor: \"#ffffff\",\n    fontFamily: \"Arial\",\n    fontSize: 11,\n    headerBackgroundColor: \"#f8f9fa\",\n    headerTextColor: \"#495057\",\n    borderColor: \"#dee2e6\"\n};\n\n// Build the GET URL for QuickChart Table API\nconst baseUrl = 'https://api.quickchart.io/v1/table';\n\nlet tableUrlWithOptions = '';\nlet tableUrlSimple = '';\n\ntry {\n    const dataParam = encodeURIComponent(JSON.stringify(tableData));\n    const optionsParam = encodeURIComponent(JSON.stringify(options));\n    \n    // Create URLs (with and without options for fallback)\n    tableUrlWithOptions = `${baseUrl}?data=${dataParam}&options=${optionsParam}`;\n    tableUrlSimple = `${baseUrl}?data=${dataParam}`;\n} catch (urlError) {\n    console.error('Error creating URLs:', urlError.message);\n    tableUrlWithOptions = baseUrl;\n    tableUrlSimple = baseUrl;\n}\n\n// Check URL lengths\nconst urlWithOptionsLength = tableUrlWithOptions.length;\nconst urlSimpleLength = tableUrlSimple.length;\n\nconsole.log(`URL with options length: ${urlWithOptionsLength}`);\nconsole.log(`Simple URL length: ${urlSimpleLength}`);\n\n// Return the prepared data\nreturn [{ \n    json: { \n        // Primary URL with styling options\n        tableUrl: urlWithOptionsLength < 8000 ? tableUrlWithOptions : tableUrlSimple,\n        \n        // Alternative URLs for testing\n        tableUrlWithOptions: tableUrlWithOptions,\n        tableUrlSimple: tableUrlSimple,\n        \n        // For debugging\n        baseUrl: baseUrl,\n        tableData: tableData,\n        options: options,\n        \n        // Statistics\n        stats: {\n            totalRows: dataSource.length,\n            totalColumns: columns.length,\n            urlWithOptionsLength: urlWithOptionsLength,\n            urlSimpleLength: urlSimpleLength,\n            recommendedUrl: urlWithOptionsLength < 8000 ? 'with options' : 'simple'\n        },\n        \n        // Debug info\n        debugInfo: {\n            totalInputItems: sheetsData.length,\n            processedRows: dataSource.length,\n            columnNames: columns.map(col => col.title),\n            sampleData: dataSource.slice(0, 2), // First 2 rows for debugging\n            firstItemKeys: sheetsData.length > 0 ? Object.keys(sheetsData[0].json || sheetsData[0]) : []\n        }\n    } \n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2020,
        -1300
      ],
      "id": "42cd4242-fab4-45dc-8963-6db9e0f704ac",
      "name": "Prepare Residual Table"
    },
    {
      "parameters": {
        "url": "={{ $json.tableUrl }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "mod_dep_plot"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3160,
        -560
      ],
      "id": "ac47e1de-4dfc-4522-a725-cac4fb1386f6",
      "name": "Residual Table",
      "retryOnFail": true,
      "maxTries": 5,
      "waitBetweenTries": 500,
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// Get all items from the Google Sheets node \"Add results from search\"\nconst items = $('Add results from search').all();\n\n\n// Prepare the table data structure\nconst tableData = {\n  title: \"Machinery Search Results\",\n  columns: [\n    {\n      title: \"Description\",\n      dataIndex: \"item_description\",\n      width: 280\n    },\n    {\n      title: \"Year\",\n      dataIndex: \"year\",\n      width: 70,\n      align: \"center\"\n    },\n    {\n      title: \"Hours\",\n      dataIndex: \"hours\",\n      width: 80,\n      align: \"right\"\n    },\n    {\n      title: \"Serial #\",\n      dataIndex: \"serial_number\",\n      width: 120,\n      align: \"center\"\n    },\n    {\n      title: \"Price\",\n      dataIndex: \"price\",\n      width: 120,\n      align: \"right\"\n    },\n    {\n      title: \"Location\",\n      dataIndex: \"seller_location\",\n      width: 200\n    },\n    {\n      title: \"Dealer\",\n      dataIndex: \"dealer\",\n      width: 160\n    },\n    {\n      title: \"Phone\",\n      dataIndex: \"phone\",\n      width: 130,\n      align: \"center\"\n    },\n    {\n      title: \"Listing URL\",\n      dataIndex: \"url_to_listing\",\n      width: 300\n    }\n  ],\n  dataSource: []\n};\n\n// Process each item and add to dataSource\nitems.forEach((item, index) => {\n  const json = item.json;\n  \n  // Create a shortened URL for display (keep full URL for functionality)\n  let displayUrl = json.url_to_listing || \"\";\n  if (displayUrl.length > 45) {\n    displayUrl = displayUrl.substring(0, 42) + \"...\";\n  }\n  \n  tableData.dataSource.push({\n    item_description: json.item_description || \"\",\n    year: json.year || \"\",\n    hours: json.hours || \"\",\n    serial_number: json.serial_number || \"\",\n    price: json.price || \"\",\n    seller_location: json.seller_location || \"\",\n    dealer: json.dealer || \"\",\n    phone: json.phone || \"\",\n    url_to_listing: displayUrl\n  });\n});\n\n// Optional: Add styling options for better readability\nconst options = {\n  paddingVertical: 20,\n  paddingHorizontal: 20,\n  backgroundColor: \"#ffffff\",\n  fontFamily: \"Arial, sans-serif\",\n  cellHeight: 45,\n  cellWidth: 100  // Default cell width, overridden by column widths\n};\n\n// Create the QuickChart URL\nconst baseUrl = \"https://api.quickchart.io/v1/table\";\nconst dataParam = encodeURIComponent(JSON.stringify(tableData));\nconst optionsParam = encodeURIComponent(JSON.stringify(options));\nconst quickChartUrl = `${baseUrl}?data=${dataParam}&options=${optionsParam}`;\n\n// Return the URL and additional data for the next node\nreturn [\n  {\n    json: {\n      quickchart_url: quickChartUrl,\n      total_records: items.length,\n      table_width: 3500,  // Total calculated width for reference\n      note: \"URLs are shortened for display - full URLs available in original data\"\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2080,
        -1140
      ],
      "id": "8a32b523-ec2d-4aa4-8fbc-bbcad09b2f94",
      "name": "Prepare Comps Table"
    },
    {
      "parameters": {
        "url": "={{ $json.quickchart_url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "mod_dep_plot"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        3020,
        -420
      ],
      "id": "5091745b-dcf0-47ab-8f21-f55b209cccb7",
      "name": "Comps Table",
      "retryOnFail": true,
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node: Parse Executive Summary Agent Output (Updated)\n// This node processes the revised AI agent output and extracts structured JSON data\n// Updated to handle the new asset_management_table structure with residual value arrays\n\nconst items = $input.all();\nconst processedItems = [];\n\nfor (let i = 0; i < items.length; i++) {\n  const item = items[i];\n  \n  try {\n    // Get the output field from the item - handle multiple possible structures\n    let rawOutput = null;\n    \n    if (item.json.output) {\n      rawOutput = item.json.output;\n    } else if (item.json.executive_summary || item.json.valuation_details || item.json.asset_management_table) {\n      // Already structured data\n      rawOutput = item.json;\n    } else {\n      // Try the whole item\n      rawOutput = item.json;\n    }\n    \n    // Clean and parse the output string if it's a string\n    if (typeof rawOutput === 'string') {\n      // Remove markdown code block markers and clean whitespace\n      rawOutput = rawOutput\n        .replace(/```json\\n?/gi, '')\n        .replace(/```\\n?$/g, '')\n        .replace(/^\\s+|\\s+$/g, '');\n      \n      // Fix common JSON issues and handle array formatting\n      if (!rawOutput.trim().endsWith('}') && !rawOutput.trim().endsWith(']')) {\n        // Attempt to complete truncated JSON\n        const openBraces = (rawOutput.match(/{/g) || []).length;\n        const closeBraces = (rawOutput.match(/}/g) || []).length;\n        const openBrackets = (rawOutput.match(/\\[/g) || []).length;\n        const closeBrackets = (rawOutput.match(/\\]/g) || []).length;\n        \n        const missingBraces = openBraces - closeBraces;\n        const missingBrackets = openBrackets - closeBrackets;\n        \n        // Add missing closing brackets first, then braces\n        for (let j = 0; j < missingBrackets; j++) {\n          rawOutput += ']';\n        }\n        for (let j = 0; j < missingBraces; j++) {\n          rawOutput += '}';\n        }\n      }\n      \n      // Handle common truncation patterns in the new format\n      if (rawOutput.includes('\"resid_lo_dollar\": [') && !rawOutput.includes(']]')) {\n        // Look for incomplete residual arrays and attempt completion\n        const lastCompleteValue = rawOutput.match(/\"\\$\\d{1,3}(,\\d{3})*\"(?!.*\"\\$)/);\n        if (lastCompleteValue && !rawOutput.trim().endsWith('\"]')) {\n          const insertPoint = rawOutput.lastIndexOf(lastCompleteValue[0]) + lastCompleteValue[0].length;\n          rawOutput = rawOutput.substring(0, insertPoint) + ']' + rawOutput.substring(insertPoint).replace(/[,\\s]*$/, '') + '}';\n        }\n      }\n      \n      // Parse the JSON with enhanced error handling\n      try {\n        const parsedData = JSON.parse(rawOutput);\n        \n        // Validate the structure has expected sections\n        if (!parsedData.executive_summary && !parsedData.valuation_details && !parsedData.asset_management_table) {\n          throw new Error('Missing expected executive_summary, valuation_details, or asset_management_table sections');\n        }\n        \n        // Process and validate asset_management_table if present\n        if (parsedData.asset_management_table) {\n          parsedData.asset_management_table = validateAndProcessAssetTable(parsedData.asset_management_table);\n        }\n        \n        // Structure the output with enhanced metadata\n        const structuredOutput = {\n          success: true,\n          timestamp: new Date().toISOString(),\n          agent_type: 'executive_summary',\n          data: parsedData,\n          metadata: {\n            processing_status: 'completed',\n            data_sources_integrated: [\n              'inflation_analysis',\n              'utilization_scatter_plot', \n              'market_histograms',\n              'depreciation_analysis',\n              'oec_residual_estimates',\n              'market_comparison_chart',\n              'asset_management_table'\n            ],\n            parsing_method: 'json_extraction',\n            input_item_index: i,\n            total_items: items.length,\n            has_asset_table: !!parsedData.asset_management_table,\n            residual_periods_count: parsedData.asset_management_table ? \n              (parsedData.asset_management_table.resid_hi_percent ? parsedData.asset_management_table.resid_hi_percent.length : 0) : 0\n          }\n        };\n        \n        processedItems.push({\n          json: structuredOutput,\n          binary: item.binary || {}\n        });\n        \n      } catch (jsonError) {\n        console.log(`JSON parsing failed for item ${i}:`, jsonError.message);\n        \n        // Attempt manual extraction with updated patterns for new format\n        const manualExtraction = extractKeyDataAdvanced(rawOutput);\n        \n        const structuredOutput = {\n          success: manualExtraction.success,\n          timestamp: new Date().toISOString(),\n          agent_type: 'executive_summary',\n          error: 'JSON parsing failed',\n          error_details: jsonError.message,\n          data: manualExtraction.data,\n          raw_output_preview: rawOutput.substring(0, 500) + '...',\n          metadata: {\n            processing_status: 'partial_extraction',\n            parsing_method: 'manual_extraction',\n            input_item_index: i,\n            total_items: items.length,\n            extraction_confidence: manualExtraction.confidence,\n            has_asset_table: !!(manualExtraction.data && manualExtraction.data.asset_management_table)\n          }\n        };\n        \n        processedItems.push({\n          json: structuredOutput,\n          binary: item.binary || {}\n        });\n      }\n      \n    } else if (typeof rawOutput === 'object') {\n      // If it's already an object, structure it properly\n      if (rawOutput.asset_management_table) {\n        rawOutput.asset_management_table = validateAndProcessAssetTable(rawOutput.asset_management_table);\n      }\n      \n      const structuredOutput = {\n        success: true,\n        timestamp: new Date().toISOString(),\n        agent_type: 'executive_summary',\n        data: rawOutput,\n        metadata: {\n          processing_status: 'completed',\n          data_sources_integrated: [\n            'inflation_analysis',\n            'utilization_scatter_plot', \n            'market_histograms',\n            'depreciation_analysis',\n            'oec_residual_estimates',\n            'market_comparison_chart',\n            'asset_management_table'\n          ],\n          parsing_method: 'object_passthrough',\n          has_asset_table: !!rawOutput.asset_management_table,\n          residual_periods_count: rawOutput.asset_management_table ? \n            (rawOutput.asset_management_table.resid_hi_percent ? rawOutput.asset_management_table.resid_hi_percent.length : 0) : 0\n        }\n      };\n      \n      processedItems.push({\n        json: structuredOutput,\n        binary: item.binary\n      });\n    }\n    \n  } catch (error) {\n    // Handle any other errors\n    console.error('Error processing item:', error);\n    \n    const errorOutput = {\n      success: false,\n      timestamp: new Date().toISOString(),\n      agent_type: 'executive_summary',\n      error: 'Processing failed',\n      error_details: error.message,\n      data: null,\n      raw_input: JSON.stringify(item.json).substring(0, 500) + '...[truncated]',\n      metadata: {\n        processing_status: 'failed',\n        parsing_method: 'error_handling'\n      }\n    };\n    \n    processedItems.push({\n      json: errorOutput,\n      binary: item.binary\n    });\n  }\n}\n\n// Helper function to validate and process asset management table\nfunction validateAndProcessAssetTable(assetTable) {\n  try {\n    // Ensure all required fields are present\n    const requiredFields = ['subject_price', 'subject_year', 'hpy_or_mpy', 'resid_hi_percent', 'resid_hi_dollar', 'resid_lo_percent', 'resid_lo_dollar'];\n    const processedTable = { ...assetTable };\n    \n    // Validate array lengths match\n    const arrayFields = ['resid_hi_percent', 'resid_hi_dollar', 'resid_lo_percent', 'resid_lo_dollar'];\n    let expectedLength = null;\n    \n    for (const field of arrayFields) {\n      if (processedTable[field] && Array.isArray(processedTable[field])) {\n        if (expectedLength === null) {\n          expectedLength = processedTable[field].length;\n        } else if (processedTable[field].length !== expectedLength) {\n          console.warn(`Array length mismatch in asset_management_table for field: ${field}`);\n        }\n      }\n    }\n    \n    // Add computed fields for analysis\n    if (processedTable.resid_hi_percent && processedTable.resid_lo_percent) {\n      processedTable.periods_count = processedTable.resid_hi_percent.length;\n      processedTable.validation_status = 'valid';\n      \n      // Calculate period labels (assuming monthly periods starting from month 12)\n      processedTable.period_labels = Array.from({ length: processedTable.periods_count }, (_, index) => {\n        return `${(index + 1) * 12} months`;\n      });\n    }\n    \n    return processedTable;\n  } catch (error) {\n    console.error('Error processing asset management table:', error);\n    return {\n      ...assetTable,\n      validation_status: 'error',\n      validation_error: error.message\n    };\n  }\n}\n\n// Enhanced helper function for manual extraction with updated patterns for new format\nfunction extractKeyDataAdvanced(rawText) {\n  const extracted = {\n    executive_summary: {},\n    valuation_details: {},\n    asset_management_table: {},\n    extraction_method: 'advanced_regex_pattern_matching'\n  };\n  \n  let confidence = 0;\n  const maxConfidence = 15; // Increased for new fields\n  \n  try {\n    // Extract overview with better handling of quotes\n    const overviewMatch = rawText.match(/\"overview\":\\s*\"((?:[^\"\\\\]|\\\\.)*)\"/s);\n    if (overviewMatch) {\n      extracted.executive_summary.overview = overviewMatch[1].replace(/\\\\\"/g, '\"');\n      confidence++;\n    }\n    \n    // Extract key findings array with improved parsing\n    const keyFindingsMatch = rawText.match(/\"key_findings\":\\s*\\[([\\s\\S]*?)\\](?=\\s*,\\s*\"|\\s*}\\s*,|\\s*}$)/);\n    if (keyFindingsMatch) {\n      const findingsText = keyFindingsMatch[1];\n      const findings = findingsText\n        .split(/\",\\s*\"/)\n        .map(f => f.replace(/^\"/, '').replace(/\"$/, '').replace(/\\\\\"/g, '\"').trim())\n        .filter(f => f.length > 10);\n      extracted.executive_summary.key_findings = findings;\n      confidence += 2;\n    }\n    \n    // Extract asset management table fields with IMPROVED ARRAY EXTRACTION\n    const assetFields = {\n      'subject_price': 'string',\n      'subject_year': 'string', \n      'hpy_or_mpy': 'string',\n      'resid_hi_percent': 'array',\n      'resid_hi_dollar': 'array',\n      'resid_lo_percent': 'array',\n      'resid_lo_dollar': 'array'\n    };\n    \n    for (const [field, type] of Object.entries(assetFields)) {\n      if (type === 'string') {\n        const fieldMatch = rawText.match(new RegExp(`\"${field}\":\\\\s*\"([^\"]*)\"`, 's'));\n        if (fieldMatch) {\n          extracted.asset_management_table[field] = fieldMatch[1];\n          confidence++;\n        }\n      } else if (type === 'array') {\n        // IMPROVED ARRAY EXTRACTION - handles multi-line arrays and nested brackets\n        const arrayMatch = rawText.match(new RegExp(`\"${field}\":\\\\s*\\\\[(.*?)\\\\](?=\\\\s*[,}])`, 's'));\n        if (arrayMatch) {\n          try {\n            // First try direct JSON parsing\n            const arrayString = '[' + arrayMatch[1] + ']';\n            const parsedArray = JSON.parse(arrayString);\n            extracted.asset_management_table[field] = parsedArray;\n            confidence++;\n          } catch (e) {\n            // Enhanced manual array extraction for complex cases\n            let arrayContent = arrayMatch[1];\n            \n            // Handle different quote styles and formatting\n            const values = [];\n            let current = '';\n            let inQuotes = false;\n            let escapeNext = false;\n            \n            for (let j = 0; j < arrayContent.length; j++) {\n              const char = arrayContent[j];\n              \n              if (escapeNext) {\n                current += char;\n                escapeNext = false;\n                continue;\n              }\n              \n              if (char === '\\\\') {\n                escapeNext = true;\n                continue;\n              }\n              \n              if (char === '\"') {\n                inQuotes = !inQuotes;\n                continue;\n              }\n              \n              if (!inQuotes && char === ',') {\n                if (current.trim()) {\n                  values.push(current.trim().replace(/^\"|\"$/g, ''));\n                }\n                current = '';\n                continue;\n              }\n              \n              current += char;\n            }\n            \n            // Add the last value\n            if (current.trim()) {\n              values.push(current.trim().replace(/^\"|\"$/g, ''));\n            }\n            \n            // Filter out empty values and clean up\n            const cleanedValues = values\n              .filter(v => v.length > 0)\n              .map(v => {\n                // Handle numeric values vs. string values\n                if (field.includes('percent')) {\n                  return v.replace('%', '');\n                } else if (field.includes('dollar')) {\n                  return v.replace(/[\\$,]/g, '');\n                }\n                return v;\n              });\n            \n            if (cleanedValues.length > 0) {\n              extracted.asset_management_table[field] = cleanedValues;\n              confidence++;\n            }\n          }\n        } else {\n          // FALLBACK: Look for arrays split across multiple lines\n          const multiLinePattern = new RegExp(`\"${field}\":\\\\s*\\\\[([\\\\s\\\\S]*?)(?=\\\\],|\\\\}|\"\\\\w+\":)`, 's');\n          const multiLineMatch = rawText.match(multiLinePattern);\n          if (multiLineMatch) {\n            const content = multiLineMatch[1];\n            const values = content\n              .split(/,|\\n/)\n              .map(v => v.replace(/[\"\\s]/g, '').replace(/[\\$,]/g, ''))\n              .filter(v => v.length > 0 && v !== ']');\n            \n            if (values.length > 0) {\n              extracted.asset_management_table[field] = values;\n              confidence++;\n            }\n          }\n        }\n      }\n    }\n    \n    // Extract market conditions\n    const marketMatch = rawText.match(/\"market_conditions\":\\s*\"((?:[^\"\\\\]|\\\\.)*)\"/s);\n    if (marketMatch) {\n      extracted.executive_summary.market_conditions = marketMatch[1].replace(/\\\\\"/g, '\"');\n      confidence++;\n    }\n    \n    // Extract utilization analysis object\n    const utilizationMatch = rawText.match(/\"utilization_analysis\":\\s*\\{([\\s\\S]*?)\\}(?=\\s*,\\s*\"|\\s*}\\s*,|\\s*}$)/);\n    if (utilizationMatch) {\n      try {\n        const utilizationText = '{' + utilizationMatch[1] + '}';\n        const utilizationObj = JSON.parse(utilizationText);\n        extracted.executive_summary.utilization_analysis = utilizationObj;\n        confidence++;\n      } catch (e) {\n        // Manual extraction for utilization\n        const currentUtil = rawText.match(/\"current_utilization\":\\s*\"((?:[^\"\\\\]|\\\\.)*)\"/s);\n        const efficiency = rawText.match(/\"efficiency_rating\":\\s*\"((?:[^\"\\\\]|\\\\.)*)\"/s);\n        const optimization = rawText.match(/\"optimization_opportunities\":\\s*\"((?:[^\"\\\\]|\\\\.)*)\"/s);\n        \n        if (currentUtil || efficiency || optimization) {\n          extracted.executive_summary.utilization_analysis = {};\n          if (currentUtil) extracted.executive_summary.utilization_analysis.current_utilization = currentUtil[1];\n          if (efficiency) extracted.executive_summary.utilization_analysis.efficiency_rating = efficiency[1];\n          if (optimization) extracted.executive_summary.utilization_analysis.optimization_opportunities = optimization[1];\n          confidence++;\n        }\n      }\n    }\n    \n    // Extract depreciation method recommendation\n    const depreciationMatch = rawText.match(/\"depreciation_method_recommended\":\\s*\"((?:[^\"\\\\]|\\\\.)*)\"/s);\n    if (depreciationMatch) {\n      extracted.valuation_details.depreciation_method_recommended = depreciationMatch[1].replace(/\\\\\"/g, '\"');\n      confidence++;\n    }\n    \n    // Extract valuation periods (48, 60, 72 month values)\n    ['48', '60', '72'].forEach(period => {\n      const periodPattern = new RegExp(`\"${period}_month_values\":\\\\s*\\\\{([^}]*)\\\\}`, 's');\n      const periodMatch = rawText.match(periodPattern);\n      if (periodMatch) {\n        const retailMatch = periodMatch[1].match(/\"retail\":\\s*\"([^\"]*)\"/);\n        const marketMatch = periodMatch[1].match(/\"market\":\\s*\"([^\"]*)\"/);\n        const wholesaleMatch = periodMatch[1].match(/\"wholesale\":\\s*\"([^\"]*)\"/);\n        \n        if (retailMatch || marketMatch || wholesaleMatch) {\n          extracted.valuation_details[`${period}_month_values`] = {};\n          if (retailMatch) extracted.valuation_details[`${period}_month_values`].retail = retailMatch[1];\n          if (marketMatch) extracted.valuation_details[`${period}_month_values`].market = marketMatch[1];\n          if (wholesaleMatch) extracted.valuation_details[`${period}_month_values`].wholesale = wholesaleMatch[1];\n          confidence++;\n        }\n      }\n    });\n    \n    // Extract recommendations array\n    const recommendationsMatch = rawText.match(/\"recommendations\":\\s*\\[([\\s\\S]*?)\\](?=\\s*,\\s*\"|\\s*}\\s*,|\\s*}$)/);\n    if (recommendationsMatch) {\n      const recText = recommendationsMatch[1];\n      const recommendations = recText\n        .split(/\",\\s*\"/)\n        .map(r => r.replace(/^\"/, '').replace(/\"$/, '').replace(/\\\\\"/g, '\"').trim())\n        .filter(r => r.length > 10);\n      extracted.executive_summary.recommendations = recommendations;\n      confidence++;\n    }\n    \n    // Extract next steps\n    const nextStepsMatch = rawText.match(/\"next_steps\":\\s*\\[([\\s\\S]*?)\\](?=\\s*,\\s*\"|\\s*}\\s*,|\\s*}$)/);\n    if (nextStepsMatch) {\n      const stepsText = nextStepsMatch[1];\n      const nextSteps = stepsText\n        .split(/\",\\s*\"/)\n        .map(s => s.replace(/^\"/, '').replace(/\"$/, '').replace(/\\\\\"/g, '\"').trim())\n        .filter(s => s.length > 10);\n      extracted.executive_summary.next_steps = nextSteps;\n      confidence++;\n    }\n    \n    // Post-process asset management table if we have enough data\n    if (Object.keys(extracted.asset_management_table).length > 3) {\n      extracted.asset_management_table = validateAndProcessAssetTable(extracted.asset_management_table);\n    }\n    \n  } catch (extractError) {\n    console.error('Advanced extraction error:', extractError);\n    extracted.extraction_error = extractError.message;\n  }\n  \n  return {\n    success: confidence > 5, // Higher threshold due to more complex structure\n    confidence: Math.round((confidence / maxConfidence) * 100),\n    data: extracted\n  };\n}\n\nreturn processedItems;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5200,
        -1020
      ],
      "id": "47a75cfd-20d6-422f-96f0-271733ced6c7",
      "name": "Format Executive Summary Output"
    },
    {
      "parameters": {
        "url": "={{ $json.quickchart_url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "inflation_plot"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2820,
        -600
      ],
      "id": "5c15b5ab-9eb9-4aba-8fbc-989004f07a5d",
      "name": "Inflation Plot",
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsCode": "// Prepare inflation data for Chart.js scatter plot\nconst inflationData = items[0].json.inflation_ratios;\n\n// Transform data for Chart.js scatter plot format\nconst scatterData = inflationData.map(item => ({\n  x: item.age,\n  y: item.rel_interest_val\n}));\n\n// Create Chart.js configuration\nconst chartConfig = {\n  type: 'scatter',\n  data: {\n    datasets: [{\n      label: 'Inflation Ratios by Equipment Age',\n      data: scatterData,\n      backgroundColor: 'rgba(54, 162, 235, 0.6)',\n      borderColor: 'rgba(54, 162, 235, 1)',\n      borderWidth: 2,\n      pointRadius: 6,\n      pointHoverRadius: 8\n    }]\n  },\n  options: {\n    responsive: true,\n    maintainAspectRatio: false,\n    title: {\n      display: true,\n      text: 'Equipment Age vs Relative Interest Value',\n      fontSize: 16,\n      fontStyle: 'bold'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom',\n        scaleLabel: {\n          display: true,\n          labelString: 'Equipment Age (Years)',\n          fontSize: 14\n        },\n        ticks: {\n          min: 0,\n          max: Math.max(...inflationData.map(item => item.age)) + 1\n        }\n      }],\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Relative Interest Value',\n          fontSize: 14\n        },\n        ticks: {\n          min: 0,\n          max: 1,\n          stepSize: 0.1\n        }\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          return `Age: ${tooltipItem.xLabel} years, Value: ${tooltipItem.yLabel.toFixed(3)}`;\n        }\n      }\n    },\n    legend: {\n      display: true,\n      position: 'top'\n    }\n  }\n};\n\n// Convert chart config to URL-encoded string for GET request\nconst chartConfigString = JSON.stringify(chartConfig);\nconst encodedConfig = encodeURIComponent(chartConfigString);\n\n// Create QuickChart URL for GET request\nconst quickChartUrl = `https://quickchart.io/chart?c=${encodedConfig}&width=800&height=500&format=png`;\n\n// Prepare output data\nconst output = {\n  chart_config: chartConfig,\n  scatter_data: scatterData,\n  quickchart_url: quickChartUrl,\n  data_points: scatterData.length,\n  age_range: {\n    min: Math.min(...inflationData.map(item => item.age)),\n    max: Math.max(...inflationData.map(item => item.age))\n  },\n  value_range: {\n    min: Math.min(...inflationData.map(item => item.rel_interest_val)),\n    max: Math.max(...inflationData.map(item => item.rel_interest_val))\n  }\n};\n\n// Return the prepared data\nreturn [{ json: output }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2080,
        -760
      ],
      "id": "c1960210-3dcc-4ddf-ab67-24bdf8eeda3b",
      "name": "Prepare Inflation Vals"
    },
    {
      "parameters": {
        "resource": "spreadsheet",
        "title": "={{$('Webhook').first().json.body.itemDescription}}_{{ $now.format('yyyyMMddhhmmss') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -2040,
        -940
      ],
      "id": "c31ce0dd-a1a5-4ded-91c2-658571e122ef",
      "name": "Create Market Comps Sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GiAHEXtMUmejLsMw",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "resource": "spreadsheet",
        "title": "={{$('Webhook').first().json.body.itemDescription}}_residuals_{{ $now.format('yyyyMMddhhmmss') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -1840,
        -940
      ],
      "id": "e71c2e8f-e0cb-4553-9179-9b8735ed97ba",
      "name": "Create Residuals Calcs Sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GiAHEXtMUmejLsMw",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://www.googleapis.com/drive/v3/files/{{ $('Create Market Comps Sheet').item.json.spreadsheetId }}/permissions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleSheetsOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"role\": \"reader\",\n  \"type\": \"anyone\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1600,
        -1080
      ],
      "id": "18f2543d-606a-401d-87e1-6323d11fc07c",
      "name": "Make Comps Public",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GiAHEXtMUmejLsMw",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://www.googleapis.com/drive/v3/files/{{ $('Create Residuals Calcs Sheet').item.json.spreadsheetId }}/permissions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleSheetsOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n  \"role\": \"reader\",\n  \"type\": \"anyone\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1600,
        -860
      ],
      "id": "6ec0d506-0c0e-45fe-b940-5daec5ffdc9e",
      "name": "Make Residuals Public",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GiAHEXtMUmejLsMw",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "7e9a7065-afc2-4700-8018-d45e310bfe5a",
              "leftValue": "={{ $json.total_count }}",
              "rightValue": 3,
              "operator": {
                "type": "number",
                "operation": "gt"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        20,
        -720
      ],
      "id": "71592894-3e8f-413a-9cef-851c2052f0f6",
      "name": "If"
    },
    {
      "parameters": {
        "jsCode": "// Initialize array to store URLs with print=1\nconst printUrls = [];\n\n// Helper function to check if URL is from USA (exclude foreign domains)\nconst isUSUrl = (url) => {\n  try {\n    const urlObj = new URL(url);\n    const hostname = urlObj.hostname.toLowerCase();\n    \n    // Exclude common foreign domains\n    const foreignDomains = ['.co.uk', '.ca', '.au', '.de', '.fr', '.nl', '.it', '.es', '.jp', '.cn', '.in', '.br'];\n    \n    // Check if hostname ends with any foreign domain\n    return !foreignDomains.some(domain => hostname.endsWith(domain));\n  } catch (error) {\n    // If URL parsing fails, fall back to simple string check\n    const urlLower = url.toLowerCase();\n    const foreignDomains = ['.co.uk', '.ca', '.au', '.de', '.fr', '.nl', '.it', '.es', '.jp', '.cn', '.in', '.br'];\n    return !foreignDomains.some(domain => urlLower.includes(domain));\n  }\n};\n\n// Helper function to add print=1 parameter to URL\nconst addPrintParam = (url) => {\n  try {\n    const urlObj = new URL(url);\n    urlObj.searchParams.set('print', '1');\n    return urlObj.toString();\n  } catch (error) {\n    // If URL parsing fails, try simple concatenation\n    const separator = url.includes('?') ? '&' : '?';\n    return url + separator + 'print=1';\n  }\n};\n\n// Get all items from the \"split out data\" node\nconst splitData = $('split out data').all();\n\n// Cycle through each item\nfor (const item of splitData) {\n  const data = item.json;\n  \n  // Check all possible URL fields in the data\n  const urlFields = ['url', 'sourceUrl', 'favicon', 'ogImage', 'ogUrl', 'link', 'href', 'src'];\n  \n  // Check direct URL fields\n  urlFields.forEach(field => {\n    if (data[field] && typeof data[field] === 'string' && \n        data[field].startsWith('http') && \n        isUSUrl(data[field])) {\n      const urlWithPrint = addPrintParam(data[field]);\n      printUrls.push(urlWithPrint);\n    }\n  });\n  \n  // Check the links array if it exists\n  if (data.links && Array.isArray(data.links)) {\n    data.links.forEach(link => {\n      if (typeof link === 'string' && \n          link.startsWith('http') && \n          isUSUrl(link)) {\n        const urlWithPrint = addPrintParam(link);\n        printUrls.push(urlWithPrint);\n      } else if (typeof link === 'object') {\n        // Check all properties of link object for URLs\n        Object.values(link).forEach(value => {\n          if (typeof value === 'string' && \n              value.startsWith('http') && \n              isUSUrl(value)) {\n            const urlWithPrint = addPrintParam(value);\n            printUrls.push(urlWithPrint);\n          }\n        });\n      }\n    });\n  }\n  \n  // Check metadata object if it exists (from your screenshots)\n  if (data.metadata && typeof data.metadata === 'object') {\n    Object.values(data.metadata).forEach(value => {\n      if (typeof value === 'string' && \n          value.startsWith('http') && \n          isUSUrl(value)) {\n        const urlWithPrint = addPrintParam(value);\n        printUrls.push(urlWithPrint);\n      }\n    });\n  }\n  \n  // Check any other fields that might contain URLs\n  Object.entries(data).forEach(([key, value]) => {\n    // Skip already processed arrays and objects\n    if (key === 'links' || key === 'metadata' || urlFields.includes(key)) {\n      return;\n    }\n    \n    if (typeof value === 'string' && \n        value.startsWith('http') && \n        isUSUrl(value)) {\n      const urlWithPrint = addPrintParam(value);\n      printUrls.push(urlWithPrint);\n    } else if (typeof value === 'object' && value !== null && !Array.isArray(value)) {\n      // Check nested objects for URLs\n      Object.values(value).forEach(nestedValue => {\n        if (typeof nestedValue === 'string' && \n            nestedValue.startsWith('http') && \n            isUSUrl(nestedValue)) {\n          const urlWithPrint = addPrintParam(nestedValue);\n          printUrls.push(urlWithPrint);\n        }\n      });\n    }\n  });\n}\n\n// Remove duplicates\nconst uniquePrintUrls = [...new Set(printUrls)];\n\nreturn [{ json: { printUrls: uniquePrintUrls, count: uniquePrintUrls.length } }];\n\n\n\n// OLD CODE BELOW:\n\n// // Initialize array to store URLs with print=1\n// const printUrls = [];\n\n// // Helper function to check if URL is Canadian (.ca domain)\n// const isCanadianUrl = (url) => {\n//   try {\n//     const urlObj = new URL(url);\n//     return urlObj.hostname.endsWith('.ca');\n//   } catch (error) {\n//     // If URL parsing fails, fall back to simple string check\n//     return url.toLowerCase().includes('.ca');\n//   }\n// };\n\n// // Get all items from the \"split out data\" node\n// const splitData = $('split out data').all();\n\n// // Cycle through each item\n// for (const item of splitData) {\n//   const data = item.json;\n  \n//   // Check all possible link fields in the data\n//   const linkFields = ['url', 'sourceUrl', 'favicon', 'ogImage', 'ogUrl'];\n  \n//   // Check direct link fields\n//   linkFields.forEach(field => {\n//     if (data[field] && typeof data[field] === 'string' && \n//         data[field].includes('print=1') && \n//         !isCanadianUrl(data[field])) {\n//       printUrls.push(data[field]);\n//     }\n//   });\n  \n//   // Check the links array if it exists\n//   if (data.links && Array.isArray(data.links)) {\n//     data.links.forEach(link => {\n//       if (typeof link === 'string' && \n//           link.includes('print=1') && \n//           !isCanadianUrl(link)) {\n//         printUrls.push(link);\n//       } else if (typeof link === 'object' && link.url && \n//                  link.url.includes('print=1') && \n//                  !isCanadianUrl(link.url)) {\n//         printUrls.push(link.url);\n//       }\n//     });\n//   }\n  \n//   // Check any other fields that might contain URLs\n//   Object.values(data).forEach(value => {\n//     if (typeof value === 'string' && \n//         value.includes('http') && \n//         value.includes('print=1') && \n//         !isCanadianUrl(value)) {\n//       printUrls.push(value);\n//     }\n//   });\n// }\n\n// // Remove duplicates\n// const uniquePrintUrls = [...new Set(printUrls)];\n// return [{ json: { printUrls: uniquePrintUrls } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -840,
        -820
      ],
      "id": "287f6e9e-3ef1-41dc-9354-01b5e15773f7",
      "name": "Only return print URLs"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5d2b55f7-d6b5-41f8-a7e8-91d531712bf9",
              "name": "EMAIL_ADDRESS",
              "value": "skyler@theendlessforms.com",
              "type": "string"
            },
            {
              "id": "60acbdbb-1112-4bf8-8111-d6c6d4f5ad88",
              "name": "EMAIL_SUBJECT",
              "value": "={{ $('Gather Assets for Evaluation').item.json.Description }}Residual Results June23",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        5460,
        -920
      ],
      "id": "c1fd0cf2-58c1-4c64-87ee-e47f41dc787c",
      "name": "Contact Info",
      "disabled": true
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node - Generate HTML Table for Email from Google Sheets Data\n// This creates a properly formatted HTML table that works in email clients\n\n// Get data from previous node\n//const sheetsData = $input.all();\nconst sheetsData = $('Save Residual Data').all();\n\nconsole.log('Total input items:', sheetsData.length);\nconsole.log('Sample input structure:', sheetsData.length > 0 ? Object.keys(sheetsData[0].json || sheetsData[0]) : 'No data');\n\n// Helper function to safely get and format values\nfunction formatValue(value, type = 'text') {\n  if (!value || value === '' || value === null || value === undefined) {\n    return '';\n  }\n  \n  const str = value.toString();\n  \n  switch(type) {\n    case 'currency':\n      const num = parseFloat(str.replace(/[$,%\\s]/g, ''));\n      return isNaN(num) ? str : '$' + num.toLocaleString();\n    case 'percent':\n      const pct = parseFloat(str.replace(/[%\\s]/g, ''));\n      return isNaN(pct) ? str : pct.toFixed(1) + '%';\n    case 'number':\n      const numVal = parseFloat(str.replace(/[,\\s]/g, ''));\n      return isNaN(numVal) ? str : numVal.toLocaleString();\n    default:\n      return str;\n  }\n}\n\n// Helper function to get field value with multiple possible names\nfunction getField(obj, ...fieldNames) {\n  for (let fieldName of fieldNames) {\n    if (obj.hasOwnProperty(fieldName) && obj[fieldName] !== null && obj[fieldName] !== undefined && obj[fieldName] !== '') {\n      return obj[fieldName];\n    }\n  }\n  return '';\n}\n\n// Helper function to parse numeric values from formatted strings\nfunction parseNumericValue(value) {\n  if (!value || value === '' || value === null || value === undefined) {\n    return null;\n  }\n  const numStr = value.toString().replace(/[$,%\\s]/g, '');\n  const num = parseFloat(numStr);\n  return isNaN(num) ? null : num;\n}\n\n// Calculate YOY percentage\nfunction calculateYOY(currentPrice, oecEstimate) {\n  const current = parseNumericValue(currentPrice);\n  const oec = parseNumericValue(oecEstimate);\n  if (current && oec && oec > 0) {\n    return ((current / oec) * 100).toFixed(1) + '%';\n  }\n  return '';\n}\n\n// Calculate percentage-based values\nfunction calculatePercentageValue(baseValue, percentage) {\n  const base = parseNumericValue(baseValue);\n  const pct = parseNumericValue(percentage);\n  if (base && pct) {\n    return '$' + Math.round(base * (pct / 100)).toLocaleString();\n  }\n  return '';\n}\n\n// Define table structure based on your actual Google Sheets columns\n// UPDATED: Removed Notes column, added calculated fields\nconst tableConfig = [\n  { header: 'Source', fields: ['Source'], type: 'text' },\n  { header: 'Make', fields: ['Make'], type: 'text' },\n  { header: 'Model', fields: ['Model'], type: 'text' },\n  { header: 'Location', fields: ['Location'], type: 'text' },\n  { header: 'Year', fields: ['Year model'], type: 'text' },\n  { header: 'Age', fields: ['Age'], type: 'number' },\n  { header: 'Hours Total', fields: ['Hours - total'], type: 'number' },\n  { header: 'Hours/Year', fields: ['Hours - per year'], type: 'number' },\n  { header: 'Current Price', fields: ['Current Price'], type: 'currency' },\n  { header: 'Price Type', fields: ['Price Type'], type: 'text' },\n  { header: 'OEC Estimate', fields: ['OEC (estimate)'], type: 'currency' },\n  { header: 'Resid %', fields: ['Resid'], type: 'percent' },\n  { header: 'YOY %', fields: ['YOY'], type: 'percent', calculated: true },\n  { header: '20% Value', fields: ['20% Value'], type: 'currency', calculated: true },\n  { header: '35% Value', fields: ['35% Value'], type: 'currency', calculated: true },\n  { header: 'Effective Age', fields: ['Effective Age'], type: 'number' }\n];\n\n// Arrays to store values for averages calculation\nconst averagesData = {\n  age: [],\n  hoursTotal: [],\n  hoursPerYear: [],\n  currentPrice: [],\n  oecEstimate: [],\n  residPercent: [],\n  yoyPercent: [],\n  twentyPercentValue: [],\n  thirtyFivePercentValue: [],\n  effectiveAge: []\n};\n\n// Start building HTML\nlet htmlTable = `\n<div style=\"font-family: Arial, sans-serif; margin: 20px 0;\">\n  <h2 style=\"color: #333; margin-bottom: 15px;\">Equipment Residual Value Analysis</h2>\n  <table style=\"\n    border-collapse: collapse; \n    width: 100%; \n    max-width: 1200px;\n    font-size: 12px;\n    background-color: #fff;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  \">\n    <thead>\n      <tr style=\"background-color: #f8f9fa;\">`;\n\n// Add headers\ntableConfig.forEach(col => {\n  htmlTable += `\n        <th style=\"\n          border: 1px solid #dee2e6;\n          padding: 8px 6px;\n          text-align: left;\n          font-weight: bold;\n          color: #495057;\n          background-color: #f8f9fa;\n        \">${col.header}</th>`;\n});\n\nhtmlTable += `\n      </tr>\n    </thead>\n    <tbody>`;\n\n// Process data rows\nlet rowCount = 0;\nlet debugInfo = [];\n\nsheetsData.forEach((item, index) => {\n  try {\n    // Handle different data structures\n    let data;\n    if (item.json) {\n      data = item.json;\n    } else {\n      data = item;\n    }\n    \n    // Skip empty rows or rows without meaningful data\n    if (!data || typeof data !== 'object') {\n      console.log(`Skipping item ${index}: not an object`);\n      return;\n    }\n    \n    // Debug: log the first few items to understand structure\n    if (index < 3) {\n      debugInfo.push({\n        index: index,\n        keys: Object.keys(data),\n        sampleValues: {\n          Source: data.Source,\n          Make: data.Make,\n          Model: data.Model\n        }\n      });\n      console.log(`Row ${index} keys:`, Object.keys(data));\n      console.log(`Row ${index} Source:`, data.Source);\n    }\n    \n    // Check if this row has any meaningful data\n    const hasData = tableConfig.some(col => {\n      const value = getField(data, ...col.fields);\n      return value && value !== '';\n    });\n    \n    if (!hasData) {\n      console.log(`Skipping row ${index}: no meaningful data`);\n      return;\n    }\n    \n    const isEvenRow = rowCount % 2 === 0;\n    \n    htmlTable += `\n      <tr style=\"background-color: ${isEvenRow ? '#fff' : '#f9f9f9'};\">`;\n    \n    // Get values for calculations\n    const currentPrice = getField(data, 'Current Price');\n    const oecEstimate = getField(data, 'OEC (estimate)');\n    \n    // Calculate YOY if not already present\n    let yoyValue = getField(data, 'YOY');\n    if (!yoyValue) {\n      yoyValue = calculateYOY(currentPrice, oecEstimate);\n    }\n    \n    // Calculate 20% and 35% values if not already present\n    let twentyPercentValue = getField(data, '20% Value');\n    if (!twentyPercentValue) {\n      twentyPercentValue = calculatePercentageValue(oecEstimate, 20);\n    }\n    \n    let thirtyFivePercentValue = getField(data, '35% Value');\n    if (!thirtyFivePercentValue) {\n      thirtyFivePercentValue = calculatePercentageValue(oecEstimate, 35);\n    }\n    \n    // Collect values for averages (only for non-empty numeric values)\n    const ageVal = parseNumericValue(getField(data, 'Age'));\n    if (ageVal !== null) averagesData.age.push(ageVal);\n    \n    const hoursTotalVal = parseNumericValue(getField(data, 'Hours - total'));\n    if (hoursTotalVal !== null) averagesData.hoursTotal.push(hoursTotalVal);\n    \n    const hoursPerYearVal = parseNumericValue(getField(data, 'Hours - per year'));\n    if (hoursPerYearVal !== null) averagesData.hoursPerYear.push(hoursPerYearVal);\n    \n    const currentPriceVal = parseNumericValue(currentPrice);\n    if (currentPriceVal !== null) averagesData.currentPrice.push(currentPriceVal);\n    \n    const oecEstimateVal = parseNumericValue(oecEstimate);\n    if (oecEstimateVal !== null) averagesData.oecEstimate.push(oecEstimateVal);\n    \n    const residPercentVal = parseNumericValue(getField(data, 'Resid'));\n    if (residPercentVal !== null) averagesData.residPercent.push(residPercentVal);\n    \n    const yoyPercentVal = parseNumericValue(yoyValue);\n    if (yoyPercentVal !== null) averagesData.yoyPercent.push(yoyPercentVal);\n    \n    const twentyPercentVal = parseNumericValue(twentyPercentValue);\n    if (twentyPercentVal !== null) averagesData.twentyPercentValue.push(twentyPercentVal);\n    \n    const thirtyFivePercentVal = parseNumericValue(thirtyFivePercentValue);\n    if (thirtyFivePercentVal !== null) averagesData.thirtyFivePercentValue.push(thirtyFivePercentVal);\n    \n    const effectiveAgeVal = parseNumericValue(getField(data, 'Effective Age'));\n    if (effectiveAgeVal !== null) averagesData.effectiveAge.push(effectiveAgeVal);\n    \n    // Add data cells\n    tableConfig.forEach(col => {\n      let value;\n      let formattedValue;\n      \n      // Handle calculated fields\n      if (col.calculated) {\n        switch(col.fields[0]) {\n          case 'YOY':\n            value = yoyValue;\n            formattedValue = value;\n            break;\n          case '20% Value':\n            value = twentyPercentValue;\n            formattedValue = value;\n            break;\n          case '35% Value':\n            value = thirtyFivePercentValue;\n            formattedValue = value;\n            break;\n          default:\n            value = getField(data, ...col.fields);\n            formattedValue = formatValue(value, col.type);\n        }\n      } else {\n        value = getField(data, ...col.fields);\n        formattedValue = formatValue(value, col.type);\n      }\n      \n      // Determine text alignment based on data type\n      const textAlign = ['currency', 'number', 'percent'].includes(col.type) ? 'right' : 'left';\n      \n      htmlTable += `\n        <td style=\"\n          border: 1px solid #dee2e6;\n          padding: 6px;\n          text-align: ${textAlign};\n          vertical-align: top;\n        \">${formattedValue}</td>`;\n    });\n    \n    htmlTable += `\n      </tr>`;\n    \n    rowCount++;\n    console.log(`Added row ${rowCount}: ${getField(data, 'Make')} ${getField(data, 'Model')}`);\n    \n  } catch (error) {\n    console.error(`Error processing row ${index}:`, error.message);\n  }\n});\n\n// Calculate and add AVERAGES row\nif (rowCount > 0) {\n  const calculateAverage = (arr) => {\n    if (arr.length === 0) return '';\n    const sum = arr.reduce((a, b) => a + b, 0);\n    return (sum / arr.length);\n  };\n  \n  htmlTable += `\n    <tr style=\"background-color: #e9ecef; font-weight: bold;\">`;\n  \n  tableConfig.forEach((col, colIndex) => {\n    let avgValue = '';\n    const textAlign = ['currency', 'number', 'percent'].includes(col.type) ? 'right' : 'left';\n    \n    if (colIndex === 0) {\n      // First column shows \"AVERAGES\"\n      avgValue = 'AVERAGES';\n    } else {\n      // Calculate averages for numeric columns\n      switch(col.fields[0]) {\n        case 'Age':\n          const avgAge = calculateAverage(averagesData.age);\n          avgValue = avgAge ? avgAge.toFixed(1) : '';\n          break;\n        case 'Hours - total':\n          const avgHoursTotal = calculateAverage(averagesData.hoursTotal);\n          avgValue = avgHoursTotal ? Math.round(avgHoursTotal).toLocaleString() : '';\n          break;\n        case 'Hours - per year':\n          const avgHoursPerYear = calculateAverage(averagesData.hoursPerYear);\n          avgValue = avgHoursPerYear ? Math.round(avgHoursPerYear).toLocaleString() : '';\n          break;\n        case 'Current Price':\n          const avgCurrentPrice = calculateAverage(averagesData.currentPrice);\n          avgValue = avgCurrentPrice ? '$' + Math.round(avgCurrentPrice).toLocaleString() : '';\n          break;\n        case 'OEC (estimate)':\n          const avgOecEstimate = calculateAverage(averagesData.oecEstimate);\n          avgValue = avgOecEstimate ? '$' + Math.round(avgOecEstimate).toLocaleString() : '';\n          break;\n        case 'Resid':\n          const avgResidPercent = calculateAverage(averagesData.residPercent);\n          avgValue = avgResidPercent ? avgResidPercent.toFixed(1) + '%' : '';\n          break;\n        case 'YOY':\n          const avgYoyPercent = calculateAverage(averagesData.yoyPercent);\n          avgValue = avgYoyPercent ? avgYoyPercent.toFixed(1) + '%' : '';\n          break;\n        case '20% Value':\n          const avgTwentyPercent = calculateAverage(averagesData.twentyPercentValue);\n          avgValue = avgTwentyPercent ? '$' + Math.round(avgTwentyPercent).toLocaleString() : '';\n          break;\n        case '35% Value':\n          const avgThirtyFivePercent = calculateAverage(averagesData.thirtyFivePercentValue);\n          avgValue = avgThirtyFivePercent ? '$' + Math.round(avgThirtyFivePercent).toLocaleString() : '';\n          break;\n        case 'Effective Age':\n          const avgEffectiveAge = calculateAverage(averagesData.effectiveAge);\n          avgValue = avgEffectiveAge ? avgEffectiveAge.toFixed(1) : '';\n          break;\n        default:\n          avgValue = '';\n      }\n    }\n    \n    htmlTable += `\n      <td style=\"\n        border: 1px solid #dee2e6;\n        padding: 6px;\n        text-align: ${textAlign};\n        vertical-align: top;\n        background-color: #e9ecef;\n        font-weight: bold;\n      \">${avgValue}</td>`;\n  });\n  \n  htmlTable += `\n    </tr>`;\n}\n\n// Handle empty data\nif (rowCount === 0) {\n  console.log('No valid data rows found, adding empty data message');\n  htmlTable += `\n    <tr>\n      <td colspan=\"${tableConfig.length}\" style=\"\n        border: 1px solid #dee2e6;\n        padding: 20px;\n        text-align: center;\n        color: #6c757d;\n        font-style: italic;\n      \">No data available - Please check your Google Sheets connection</td>\n    </tr>`;\n}\n\n// Close table\nhtmlTable += `\n    </tbody>\n  </table>\n  <p style=\"font-size: 11px; color: #6c757d; margin-top: 10px;\">\n    Generated on ${new Date().toLocaleString()} | Total Records: ${rowCount}\n  </p>\n</div>`;\n\n// Create responsive version for mobile\nconst responsiveTable = `\n<style>\n  @media only screen and (max-width: 600px) {\n    .responsive-table {\n      font-size: 10px !important;\n    }\n    .responsive-table th,\n    .responsive-table td {\n      padding: 4px !important;\n    }\n  }\n</style>\n<div class=\"responsive-table\">\n  ${htmlTable}\n</div>`;\n\n// If no data, create a simple debug table\nlet debugTable = '';\nif (rowCount === 0 && sheetsData.length > 0) {\n  debugTable = `\n<div style=\"font-family: Arial, sans-serif; margin: 20px 0;\">\n  <h3 style=\"color: #d73027;\">Debug Information</h3>\n  <table style=\"border-collapse: collapse; font-size: 11px;\">\n    <tr><td style=\"border: 1px solid #ccc; padding: 5px;\"><strong>Total Input Items:</strong></td><td style=\"border: 1px solid #ccc; padding: 5px;\">${sheetsData.length}</td></tr>\n    <tr><td style=\"border: 1px solid #ccc; padding: 5px;\"><strong>First Item Keys:</strong></td><td style=\"border: 1px solid #ccc; padding: 5px;\">${sheetsData.length > 0 ? Object.keys(sheetsData[0].json || sheetsData[0]).join(', ') : 'None'}</td></tr>\n    <tr><td style=\"border: 1px solid #ccc; padding: 5px;\"><strong>Expected Fields:</strong></td><td style=\"border: 1px solid #ccc; padding: 5px;\">${tableConfig.map(c => c.fields[0]).join(', ')}</td></tr>\n  </table>\n</div>`;\n}\n\n// Return both versions\nreturn [{\n  json: {\n    htmlTable: htmlTable,\n    responsiveHtmlTable: responsiveTable,\n    debugTable: debugTable,\n    \n    // Email-ready HTML with full structure\n    emailHtml: `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Equipment Residual Value Analysis</title>\n  <style>\n    @media only screen and (max-width: 600px) {\n      .responsive-table { font-size: 10px !important; }\n      .responsive-table th, .responsive-table td { padding: 4px !important; }\n    }\n  </style>\n</head>\n<body style=\"margin: 0; padding: 20px; background-color: #f5f5f5;\">\n  <div class=\"responsive-table\">\n    ${htmlTable}\n    ${debugTable}\n  </div>\n</body>\n</html>`,\n    \n    // Statistics\n    stats: {\n      totalRows: rowCount,\n      totalColumns: tableConfig.length,\n      generatedAt: new Date().toISOString(),\n      inputItems: sheetsData.length,\n      averagesCalculated: {\n        age: averagesData.age.length,\n        hoursTotal: averagesData.hoursTotal.length,\n        hoursPerYear: averagesData.hoursPerYear.length,\n        currentPrice: averagesData.currentPrice.length,\n        oecEstimate: averagesData.oecEstimate.length,\n        residPercent: averagesData.residPercent.length,\n        yoyPercent: averagesData.yoyPercent.length,\n        twentyPercentValue: averagesData.twentyPercentValue.length,\n        thirtyFivePercentValue: averagesData.thirtyFivePercentValue.length,\n        effectiveAge: averagesData.effectiveAge.length\n      }\n    },\n    \n    // Debug info\n    debugInfo: {\n      processedItems: sheetsData.length,\n      successfulRows: rowCount,\n      tableConfigColumns: tableConfig.map(c => c.header),\n      firstItemKeys: sheetsData.length > 0 ? Object.keys(sheetsData[0].json || sheetsData[0]) : [],\n      debugDetails: debugInfo,\n      expectedFields: tableConfig.map(c => c.fields[0])\n    }\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5660,
        -1060
      ],
      "id": "c186a162-5ebf-4c8c-a5a4-10af3eff62e9",
      "name": "generate HTML table for Residual Data"
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node - Generate HTML Table for Email from Market Comps Data\n// This creates a properly formatted HTML table that works in email clients\n\n// Get data from the Market Comps node\nconst sheetsData = $('Add results from search').all();\n\nconsole.log('Total input items:', sheetsData.length);\nconsole.log('Sample input structure:', sheetsData.length > 0 ? Object.keys(sheetsData[0].json || sheetsData[0]) : 'No data');\n\n// Helper function to safely get and format values\nfunction formatValue(value, type = 'text') {\n  if (!value || value === '' || value === null || value === undefined) {\n    return '';\n  }\n  \n  const str = value.toString();\n  \n  switch(type) {\n    case 'currency':\n      const num = parseFloat(str.replace(/[$,%\\s]/g, ''));\n      return isNaN(num) ? str : '$' + num.toLocaleString();\n    case 'percent':\n      const pct = parseFloat(str.replace(/[%\\s]/g, ''));\n      return isNaN(pct) ? str : pct.toFixed(1) + '%';\n    case 'number':\n      const numVal = parseFloat(str.replace(/[,\\s]/g, ''));\n      return isNaN(numVal) ? str : numVal.toLocaleString();\n    case 'phone':\n      // Format phone number if it looks like one\n      const phoneStr = str.replace(/\\D/g, '');\n      if (phoneStr.length === 10) {\n        return `(${phoneStr.slice(0,3)}) ${phoneStr.slice(3,6)}-${phoneStr.slice(6)}`;\n      }\n      return str;\n    case 'url':\n      // Truncate long URLs for display\n      return str.length > 50 ? str.substring(0, 47) + '...' : str;\n    default:\n      return str;\n  }\n}\n\n// Helper function to get field value with multiple possible names\nfunction getField(obj, ...fieldNames) {\n  for (let fieldName of fieldNames) {\n    if (obj.hasOwnProperty(fieldName) && obj[fieldName] !== null && obj[fieldName] !== undefined && obj[fieldName] !== '') {\n      return obj[fieldName];\n    }\n  }\n  return '';\n}\n\n// Define table structure based on your market comps data structure\n// UPDATED: Removed Lot Number, Index, and Total Count columns\nconst tableConfig = [\n  { header: 'Description', fields: ['item_description'], type: 'text' },\n  { header: 'Hours', fields: ['hours'], type: 'number' },\n  { header: 'Serial Number', fields: ['serial_number'], type: 'text' },\n  { header: 'Dealer', fields: ['dealer'], type: 'text' },\n  { header: 'Location', fields: ['seller_location', 'location'], type: 'text' },\n  { header: 'Phone', fields: ['phone'], type: 'phone' },\n  { header: 'Price', fields: ['price'], type: 'currency' },\n  { header: 'Listing URL', fields: ['url_to_listing'], type: 'url' },\n  { header: 'Year', fields: ['year'], type: 'text' }\n];\n\n// Start building HTML\nlet htmlTable = `\n<div style=\"font-family: Arial, sans-serif; margin: 20px 0;\">\n  <h2 style=\"color: #333; margin-bottom: 15px;\">Equipment Market Comparables Analysis</h2>\n  <table style=\"\n    border-collapse: collapse; \n    width: 100%; \n    max-width: 1400px;\n    font-size: 11px;\n    background-color: #fff;\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  \">\n    <thead>\n      <tr style=\"background-color: #f8f9fa;\">`;\n\n// Add headers\ntableConfig.forEach(col => {\n  // Adjust column width based on content type\n  let width = '100px';\n  if (col.fields[0] === 'item_description') width = '200px';\n  if (col.fields[0] === 'url_to_listing') width = '150px';\n  if (col.fields[0] === 'seller_location') width = '120px';\n  if (col.fields[0] === 'dealer') width = '120px';\n  if (col.fields[0] === 'phone') width = '120px';\n  \n  htmlTable += `\n        <th style=\"\n          border: 1px solid #dee2e6;\n          padding: 8px 6px;\n          text-align: left;\n          font-weight: bold;\n          color: #495057;\n          background-color: #f8f9fa;\n          width: ${width};\n        \">${col.header}</th>`;\n});\n\nhtmlTable += `\n      </tr>\n    </thead>\n    <tbody>`;\n\n// Process data rows\nlet rowCount = 0;\nlet debugInfo = [];\n\nsheetsData.forEach((item, index) => {\n  try {\n    // Handle different data structures\n    let data;\n    if (item.json) {\n      data = item.json;\n    } else {\n      data = item;\n    }\n    \n    // Skip empty rows or rows without meaningful data\n    if (!data || typeof data !== 'object') {\n      console.log(`Skipping item ${index}: not an object`);\n      return;\n    }\n    \n    // Debug: log the first few items to understand structure\n    if (index < 3) {\n      debugInfo.push({\n        index: index,\n        keys: Object.keys(data),\n        sampleValues: {\n          item_description: data.item_description,\n          dealer: data.dealer,\n          price: data.price\n        }\n      });\n      console.log(`Row ${index} keys:`, Object.keys(data));\n      console.log(`Row ${index} Description:`, data.item_description);\n    }\n    \n    // Check if this row has any meaningful data\n    const hasData = tableConfig.some(col => {\n      const value = getField(data, ...col.fields);\n      return value && value !== '';\n    });\n    \n    if (!hasData) {\n      console.log(`Skipping row ${index}: no meaningful data`);\n      return;\n    }\n    \n    const isEvenRow = rowCount % 2 === 0;\n    \n    htmlTable += `\n      <tr style=\"background-color: ${isEvenRow ? '#fff' : '#f9f9f9'};\">`;\n    \n    // Add data cells\n    tableConfig.forEach(col => {\n      const value = getField(data, ...col.fields);\n      const formattedValue = formatValue(value, col.type);\n      \n      // Determine text alignment based on data type\n      const textAlign = ['currency', 'number'].includes(col.type) ? 'right' : 'left';\n      \n      // Special handling for URL fields\n      let cellContent = formattedValue;\n      if (col.type === 'url' && value) {\n        cellContent = `<a href=\"${value}\" target=\"_blank\" style=\"color: #007bff; text-decoration: none;\">${formattedValue}</a>`;\n      }\n      \n      htmlTable += `\n        <td style=\"\n          border: 1px solid #dee2e6;\n          padding: 6px;\n          text-align: ${textAlign};\n          vertical-align: top;\n          word-wrap: break-word;\n          max-width: 200px;\n        \">${cellContent}</td>`;\n    });\n    \n    htmlTable += `\n      </tr>`;\n    \n    rowCount++;\n    console.log(`Added row ${rowCount}: ${getField(data, 'item_description')}`);\n    \n  } catch (error) {\n    console.error(`Error processing row ${index}:`, error.message);\n  }\n});\n\n// Handle empty data\nif (rowCount === 0) {\n  console.log('No valid data rows found, adding empty data message');\n  htmlTable += `\n    <tr>\n      <td colspan=\"${tableConfig.length}\" style=\"\n        border: 1px solid #dee2e6;\n        padding: 20px;\n        text-align: center;\n        color: #6c757d;\n        font-style: italic;\n      \">No market comps data available - Please check your data source</td>\n    </tr>`;\n}\n\n// Close table\nhtmlTable += `\n    </tbody>\n  </table>\n  <p style=\"font-size: 11px; color: #6c757d; margin-top: 10px;\">\n    Generated on ${new Date().toLocaleString()} | Total Records: ${rowCount}\n  </p>\n</div>`;\n\n// Create responsive version for mobile\nconst responsiveTable = `\n<style>\n  @media only screen and (max-width: 600px) {\n    .responsive-table {\n      font-size: 9px !important;\n    }\n    .responsive-table th,\n    .responsive-table td {\n      padding: 3px !important;\n    }\n    .responsive-table table {\n      max-width: 100% !important;\n    }\n  }\n</style>\n<div class=\"responsive-table\">\n  ${htmlTable}\n</div>`;\n\n// If no data, create a simple debug table\nlet debugTable = '';\nif (rowCount === 0 && sheetsData.length > 0) {\n  debugTable = `\n<div style=\"font-family: Arial, sans-serif; margin: 20px 0;\">\n  <h3 style=\"color: #d73027;\">Debug Information</h3>\n  <table style=\"border-collapse: collapse; font-size: 11px;\">\n    <tr><td style=\"border: 1px solid #ccc; padding: 5px;\"><strong>Total Input Items:</strong></td><td style=\"border: 1px solid #ccc; padding: 5px;\">${sheetsData.length}</td></tr>\n    <tr><td style=\"border: 1px solid #ccc; padding: 5px;\"><strong>First Item Keys:</strong></td><td style=\"border: 1px solid #ccc; padding: 5px;\">${sheetsData.length > 0 ? Object.keys(sheetsData[0].json || sheetsData[0]).join(', ') : 'None'}</td></tr>\n    <tr><td style=\"border: 1px solid #ccc; padding: 5px;\"><strong>Expected Fields:</strong></td><td style=\"border: 1px solid #ccc; padding: 5px;\">${tableConfig.map(c => c.fields[0]).join(', ')}</td></tr>\n  </table>\n</div>`;\n}\n\n// Create a summary section\nlet summaryInfo = '';\nif (rowCount > 0) {\n  // Calculate some basic stats\n  const prices = sheetsData\n    .map(item => {\n      const data = item.json || item;\n      const priceStr = getField(data, 'price');\n      if (priceStr) {\n        const num = parseFloat(priceStr.toString().replace(/[$,%\\s]/g, ''));\n        return isNaN(num) ? null : num;\n      }\n      return null;\n    })\n    .filter(price => price !== null);\n  \n  let avgPrice = 0;\n  let minPrice = 0;\n  let maxPrice = 0;\n  \n  if (prices.length > 0) {\n    avgPrice = prices.reduce((sum, price) => sum + price, 0) / prices.length;\n    minPrice = Math.min(...prices);\n    maxPrice = Math.max(...prices);\n  }\n  \n  summaryInfo = `\n<div style=\"font-family: Arial, sans-serif; margin: 20px 0; padding: 15px; background-color: #f8f9fa; border-radius: 5px;\">\n  <h3 style=\"color: #333; margin-bottom: 10px;\">Market Summary</h3>\n  <div style=\"display: grid; grid-template-columns: repeat(auto-fit, minmax(200px, 1fr)); gap: 10px;\">\n    <div><strong>Total Comparables:</strong> ${rowCount}</div>\n    <div><strong>Price Range:</strong> ${minPrice > 0 ? '$' + minPrice.toLocaleString() + ' - $' + maxPrice.toLocaleString() : 'N/A'}</div>\n    <div><strong>Average Price:</strong> ${avgPrice > 0 ? '$' + Math.round(avgPrice).toLocaleString() : 'N/A'}</div>\n  </div>\n</div>`;\n}\n\n// Return both versions\nreturn [{\n  json: {\n    htmlTable: htmlTable,\n    responsiveHtmlTable: responsiveTable,\n    debugTable: debugTable,\n    summaryInfo: summaryInfo,\n    \n    // Email-ready HTML with full structure\n    emailHtml: `\n<!DOCTYPE html>\n<html>\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>Equipment Market Comparables Analysis</title>\n  <style>\n    @media only screen and (max-width: 600px) {\n      .responsive-table { font-size: 9px !important; }\n      .responsive-table th, .responsive-table td { padding: 3px !important; }\n      .responsive-table table { max-width: 100% !important; }\n    }\n  </style>\n</head>\n<body style=\"margin: 0; padding: 20px; background-color: #f5f5f5;\">\n  <div class=\"responsive-table\">\n    ${summaryInfo}\n    ${htmlTable}\n    ${debugTable}\n  </div>\n</body>\n</html>`,\n    \n    // Statistics\n    stats: {\n      totalRows: rowCount,\n      totalColumns: tableConfig.length,\n      generatedAt: new Date().toISOString(),\n      inputItems: sheetsData.length\n    },\n    \n    // Debug info\n    debugInfo: {\n      processedItems: sheetsData.length,\n      successfulRows: rowCount,\n      tableConfigColumns: tableConfig.map(c => c.header),\n      firstItemKeys: sheetsData.length > 0 ? Object.keys(sheetsData[0].json || sheetsData[0]) : [],\n      debugDetails: debugInfo,\n      expectedFields: tableConfig.map(c => c.fields[0])\n    }\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        5880,
        -920
      ],
      "id": "7584b381-7734-4410-86a7-a40f094349b1",
      "name": "Generate HTML table for Market Comps"
    },
    {
      "parameters": {
        "url": "={{ $json.plot_url }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "inflation_plot"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        2660,
        -540
      ],
      "id": "4f704cfd-5e2f-4d16-aecb-80e4377da7a2",
      "name": "Comps Comparison Plot",
      "retryOnFail": true
    },
    {
      "parameters": {
        "jsCode": "// n8n Code Node for QuickChart Scatter Plot\n// Input: items with equipment data\n// Output: Age of Comp unit (years) vs Hours Per Year scatter plot\n\n// Process the input data to extract scatter plot points\nconst scatterData = [];\n\n// Get the input data from the \"Aggregated Data\" node\nconst inputData = $('Aggregated Data').all();\n\n// The data is nested under the 'data' property\nlet dataToProcess = [];\nif (inputData.length > 0 && inputData[0].json && inputData[0].json.data) {\n  dataToProcess = inputData[0].json.data;\n} else {\n  // Fallback: try to get data directly\n  dataToProcess = inputData.map(item => item.json);\n}\n\n// Current date for age calculation in months\nconst currentDate = new Date();\nconst currentYear = currentDate.getFullYear();\nconst currentMonth = currentDate.getMonth() + 1; // getMonth() returns 0-11, so add 1\n\n// Debug: log the data structure\nconsole.log('Data to process:', dataToProcess.length, 'items');\nconsole.log('Current date:', currentYear, 'Year', currentMonth, 'Month');\nif (dataToProcess.length > 0) {\n  console.log('First item keys:', Object.keys(dataToProcess[0]));\n  console.log('First item sample:', dataToProcess[0]);\n}\n\nfor (const dataItem of dataToProcess) {\n  // Calculate age from \"Year model\" field (note the lowercase 'm')\n  const yearModel = parseInt(dataItem['Year model'] || 0);\n  \n  // Calculate age in months (simplified - assume all 2024 equipment is 6 months old)\n  let ageInMonths = 0;\n  if (yearModel === 2024) {\n    ageInMonths = 6; // Assume 6 months old for 2024 equipment\n  } else if (yearModel > 0) {\n    ageInMonths = (currentYear - yearModel) * 12 + currentMonth;\n  }\n  \n  // Convert age in months to fractional years for x-axis\n  const ageInYears = ageInMonths / 12;\n  \n  // Calculate Hours Per Month from \"Hours - total\" field\n  const totalHours = parseInt(dataItem['Hours - total'] || 0);\n  const hoursPerMonth = ageInMonths > 0 ? totalHours / ageInMonths : 0;\n  \n  // Debug logging\n  console.log(`Item: ${dataItem['Model'] || 'Unknown'}, Year: ${yearModel}, Age: ${ageInMonths} months (${ageInYears.toFixed(2)} years), Total Hours: ${totalHours}, Hours/Month: ${hoursPerMonth.toFixed(1)}`);\n  \n  // Add to scatter data if both values are valid (relaxed conditions)\n  if (ageInYears > 0 && totalHours >= 0) {\n    scatterData.push({\n      x: ageInYears, // Age in fractional years for better x-axis scaling\n      y: hoursPerMonth, // Hours per month for y-axis\n      // Optional: include additional data for tooltips\n      model: dataItem['Model'] || '',\n      totalHours: totalHours,\n      ageInMonths: ageInMonths\n    });\n  }\n}\n\n// Debug: Log final data for verification\nconsole.log('Scatter data sample:', scatterData.slice(0, 3));\nconsole.log('X-axis range:', Math.min(...scatterData.map(d => d.x)), 'to', Math.max(...scatterData.map(d => d.x)));\nconsole.log('Y-axis range:', Math.min(...scatterData.map(d => d.y)), 'to', Math.max(...scatterData.map(d => d.y)));\n\n// Create Chart.js configuration for scatter plot\nconst scatterChartConfig = {\n  type: 'scatter',\n  data: {\n    datasets: [{\n      label: 'Equipment Age vs Hours Per Month',\n      data: scatterData,\n      backgroundColor: 'rgba(255, 99, 132, 0.6)',\n      borderColor: 'rgba(255, 99, 132, 1)',\n      borderWidth: 1,\n      pointRadius: 5\n    }]\n  },\n  options: {\n    responsive: true,\n    title: {\n      display: true,\n      text: 'Equipment Age vs Hours Per Month'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom',\n        scaleLabel: {\n          display: true,\n          labelString: 'Age of Equipment (Years)'\n        },\n        ticks: {\n          beginAtZero: true,\n          callback: function(value) {\n            const months = Math.round(value * 12);\n            return months + ' mo';\n          }\n        }\n      }],\n      yAxes: [{\n        scaleLabel: {\n          display: true,\n          labelString: 'Hours Per Month'\n        },\n        ticks: {\n          beginAtZero: true,\n          callback: function(value) {\n            return Math.round(value) + ' hrs/mo';\n          }\n        }\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        label: function(tooltipItem, data) {\n          const dataPoint = scatterData[tooltipItem.index];\n          const months = dataPoint.ageInMonths;\n          return [\n            `Age: ${months} months`,\n            `Hours/Month: ${Math.round(tooltipItem.yLabel)}`,\n            `Total Hours: ${dataPoint.totalHours?.toLocaleString() || 'N/A'}`,\n            `Model: ${dataPoint.model || 'N/A'}`\n          ];\n        }\n      }\n    }\n  }\n};\n\n// Generate QuickChart URL\nconst baseUrl = 'https://quickchart.io/chart';\nconst chartConfigJson = JSON.stringify(scatterChartConfig);\nconst encodedConfig = encodeURIComponent(chartConfigJson);\nconst plot_url = `${baseUrl}?c=${encodedConfig}&width=800&height=600`;\n\n// Return the result\nreturn [\n  {\n    json: {\n      plot_url: plot_url,\n      data_points: scatterData.length,\n      chart_config: scatterChartConfig\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2100,
        -540
      ],
      "id": "03586f86-3e37-46e1-ba35-847afe3da188",
      "name": "Prepare Comps Comparison Plot"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"inflation_ratios\": [\n    { \"age\": 1, \"rel_interest_val\": 0.966, \"relative_inflation\": \"3.4%\" },\n    { \"age\": 2, \"rel_interest_val\": 0.918, \"relative_inflation\": \"4.8%\" },\n    { \"age\": 3, \"rel_interest_val\": 0.856, \"relative_inflation\": \"6.2%\" },\n    { \"age\": 4, \"rel_interest_val\": 0.82, \"relative_inflation\": \"3.6%\" },\n    { \"age\": 5, \"rel_interest_val\": 0.803, \"relative_inflation\": \"1.7%\" },\n    { \"age\": 6, \"rel_interest_val\": 0.781, \"relative_inflation\": \"2.2%\" },\n    { \"age\": 7, \"rel_interest_val\": 0.76, \"relative_inflation\": \"2.1%\" },\n    { \"age\": 8, \"rel_interest_val\": 0.742, \"relative_inflation\": \"1.8%\" },\n    { \"age\": 9, \"rel_interest_val\": 0.72, \"relative_inflation\": \"2.2%\" },\n    { \"age\": 10, \"rel_interest_val\": 0.702, \"relative_inflation\": \"1.8%\" },\n    { \"age\": 11, \"rel_interest_val\": 0.685, \"relative_inflation\": \"1.7%\" },\n    { \"age\": 12, \"rel_interest_val\": 0.667, \"relative_inflation\": \"1.8%\" },\n    { \"age\": 13, \"rel_interest_val\": 0.646, \"relative_inflation\": \"2.1%\" },\n    { \"age\": 14, \"rel_interest_val\": 0.629, \"relative_inflation\": \"1.7%\" },\n    { \"age\": 15, \"rel_interest_val\": 0.619, \"relative_inflation\": \"1.0%\" },\n    { \"age\": 16, \"rel_interest_val\": 0.602, \"relative_inflation\": \"1.7%\" },\n    { \"age\": 17, \"rel_interest_val\": 0.579, \"relative_inflation\": \"2.3%\" },\n    { \"age\": 18, \"rel_interest_val\": 0.556, \"relative_inflation\": \"2.3%\" },\n    { \"age\": 19, \"rel_interest_val\": 0.531, \"relative_inflation\": \"2.5%\" },\n    { \"age\": 20, \"rel_interest_val\": 0.509, \"relative_inflation\": \"2.2%\" },\n    { \"age\": 21, \"rel_interest_val\": 0.491, \"relative_inflation\": \"1.8%\" }\n  ]\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        580,
        -1360
      ],
      "id": "a20ee278-85f6-4cfc-a68c-e9522688a2b7",
      "name": "Add Banfield inflation ratios"
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "https://docs.google.com/document/d/1yr02yMe6Ijf1QE60VDA3eEY0m4Fekd_y97ON9UY0ll4/edit?tab=t.0"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        -3060,
        -1360
      ],
      "id": "f356f479-f605-45ca-a640-a4a30c43cf26",
      "name": "Prompt - Market Value Agent",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "MNPIBoqzaATjHFC9",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "https://docs.google.com/document/d/1LwB-heVmANKBy5ZkXH6QVXpWR-QCiz7rVfh2ZJqWwMI/edit?tab=t.0"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        -3060,
        -1120
      ],
      "id": "f01148c4-3d39-4f18-9cb5-902ee193337e",
      "name": "Prompt - Executive Summary Agent",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "MNPIBoqzaATjHFC9",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "https://docs.google.com/document/d/1l6nAaFxC1gcpKRJuLE7YkSXE_4Op68s_gvT5lQhJIgA/edit?tab=t.0"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        -3060,
        -900
      ],
      "id": "5177c5a4-4487-4a42-b8bf-59dd448f2c03",
      "name": "Prompt - Inflation Agent",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "MNPIBoqzaATjHFC9",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "documentURL": "https://docs.google.com/document/d/1bBF51fLPci-sLsbmMSGZYeTN-JpZ7InuZpidEnX8e_8/edit?tab=t.0"
      },
      "type": "n8n-nodes-base.googleDocs",
      "typeVersion": 2,
      "position": [
        -3060,
        -680
      ],
      "id": "e008fe99-6623-4255-9499-2619f60c5d93",
      "name": "Prompt - Modified Depreciation Agent",
      "credentials": {
        "googleDocsOAuth2Api": {
          "id": "MNPIBoqzaATjHFC9",
          "name": "Google Docs account"
        }
      }
    },
    {
      "parameters": {
        "content": "# 2. Gather Items for residual analysis",
        "height": 420,
        "width": 400
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -2800,
        -1120
      ],
      "id": "d812689b-9818-4ed8-b753-024b002514cb",
      "name": "Sticky Note12"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "5214914c-a4c0-48ac-8026-19e8226179eb",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "*"
        }
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -3680,
        -820
      ],
      "id": "40ed23c6-2f6d-4784-a597-e3d52329d6bd",
      "name": "Webhook",
      "webhookId": "5214914c-a4c0-48ac-8026-19e8226179eb"
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ $('Format Executive Summary Output').first().json.data.toJsonString() }}",
        "options": {
          "responseCode": 200
        }
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.3,
      "position": [
        6480,
        -1040
      ],
      "id": "13dd8139-eb68-4a3e-b5cd-34c95e984ba6",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "dd0cba67-edc3-4827-bd6d-49654d635a63",
              "name": "response.headers.Access-Control-Allow-Origin",
              "value": "*",
              "type": "string"
            },
            {
              "id": "42202b12-c3da-4acc-8d86-964058af4c9e",
              "name": "response.headers.Access-Control-Allow-Methods",
              "value": "GET, POST, PUT, DELETE, OPTIONS",
              "type": "string"
            },
            {
              "id": "daf4a67d-cd34-4b85-b0d2-7e89a86ac5b3",
              "name": "response.headers.Access-Control-Allow-Headers",
              "value": "Content-Type, Authorization",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3400,
        -1060
      ],
      "id": "d0773321-7a46-429d-8cac-bf206103be0e",
      "name": "Enabling CORS"
    },
    {
      "parameters": {
        "amount": 30
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        4300,
        -1120
      ],
      "id": "acdc8d41-8728-44ce-a1f1-fba83edcfd49",
      "name": "Wait for other data sources",
      "webhookId": "21095df1-bba4-417b-89d7-68e631e902cb"
    },
    {
      "parameters": {
        "jsCode": "// Market Comps List Generator for n8n - JavaScript implementation\n// Place this code in a Code node after your data source node\n\n// Helper Functions\nfunction safePriceToString(priceStr) {\n    if (!priceStr) return \"\";\n    \n    const priceString = priceStr.toString().trim();\n    \n    // Check for auction or call for price\n    if (priceString.toUpperCase() === \"AUCTION\" || \n        priceString.toLowerCase().includes(\"call for price\") ||\n        priceString === \"{empty}\") {\n        return \"AUCTION\";\n    }\n    \n    // Return the original price string, cleaned up\n    return priceString;\n}\n\nfunction safeHoursToString(hoursStr) {\n    if (!hoursStr) return \"\";\n    \n    const hoursString = hoursStr.toString().trim();\n    \n    // Check for empty values\n    if (hoursString === \"\" || \n        hoursString === \"{empty}\" || \n        hoursString.toLowerCase() === \"null\" ||\n        hoursString.toLowerCase() === \"undefined\") {\n        return \"\";\n    }\n    \n    return hoursString;\n}\n\n// Extract year from item_description (assuming format like \"2019 BELL B45E\")\nfunction extractYear(description) {\n    if (!description) return \"\";\n    \n    // Look for 4-digit year at the beginning\n    const yearMatch = description.match(/^(\\d{4})/);\n    if (yearMatch) {\n        const year = parseInt(yearMatch[1]);\n        // Validate year is reasonable (between 1990 and current year + 2)\n        const currentYear = new Date().getFullYear();\n        if (year >= 1990 && year <= currentYear + 2) {\n            return year.toString();\n        }\n    }\n    \n    // Fallback: look for any 4-digit number that looks like a year\n    const allYears = description.match(/\\b(19|20)\\d{2}\\b/g);\n    if (allYears && allYears.length > 0) {\n        const year = parseInt(allYears[0]);\n        const currentYear = new Date().getFullYear();\n        if (year >= 1990 && year <= currentYear + 2) {\n            return year.toString();\n        }\n    }\n    \n    return \"\";\n}\n\n// Main transformation function to create market comps list\nfunction createMarketCompsList(items) {\n    const marketComps = [];\n    \n    items.forEach((item, index) => {\n        const data = item.json;\n        \n        try {\n            // Extract year from description if not provided separately\n            const year = data.year || extractYear(data.item_description);\n            \n            // Create market comp entry\n            const marketComp = {\n                item_description: data.item_description || \"\",\n                year: year,\n                hours: safeHoursToString(data.hours),\n                serial_number: data.serial_number || \"\",\n                dealer: data.dealer || \"\",\n                seller_location: data.seller_location || data.location || \"\",\n                phone: data.phone || \"\",\n                price: safePriceToString(data.price),\n                url_to_listing: data.url_to_listing || data.url || \"\"\n            };\n            \n            // Only add non-empty entries\n            if (marketComp.item_description || marketComp.price) {\n                marketComps.push(marketComp);\n            }\n            \n        } catch (error) {\n            console.log(`Error processing item ${index + 1}:`, error);\n            // Continue with next item\n        }\n    });\n    \n    return marketComps;\n}\n\n// Main execution\ntry {\n    // Get input data - adjust the node name as needed\n    const inputItems = $('Add results from search').all();\n    \n    if (!inputItems || inputItems.length === 0) {\n        console.log('No input data received');\n        return [{ json: { market_comps: [] } }];\n    }\n    \n    const marketComps = createMarketCompsList(inputItems);\n    \n    // Log summary for debugging\n    console.log(`Processed ${inputItems.length} items`);\n    console.log(`Generated ${marketComps.length} market comps`);\n    \n    // Return the market comps list as a single JSON object\n    return [{ \n        json: { \n            market_comps: marketComps,\n            total_items: marketComps.length\n        } \n    }];\n    \n} catch (error) {\n    console.error('Error in Market Comps List generation:', error);\n    return [{ \n        json: { \n            error: `Market Comps generation failed: ${error.message}`,\n            market_comps: []\n        } \n    }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1840,
        -60
      ],
      "id": "dc91034b-c051-44d2-94f4-e850e729038a",
      "name": "market_comps_list"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://ami-residual-agent.replit.app/api/webhook-result/{{$('Webhook').first().json.body.lesseeName}}_{{$('Webhook').first().json.body.timestamp}}\n",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        6960,
        -1100
      ],
      "id": "42921155-18e2-4bb2-9d4a-45b0e6f725ac",
      "name": "Send data to Frontend"
    },
    {
      "parameters": {
        "content": "# 12. Send data to Frontend",
        "height": 420,
        "width": 740,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        6420,
        -1160
      ],
      "id": "acc7066e-8413-4b9b-925c-b36f0281c4fe",
      "name": "Sticky Note13"
    },
    {
      "parameters": {
        "jsCode": "// N8N Code Node - Format Response for Equipment Analysis\n// Updated to use Format Executive Summary Output and fix formatting issues\n\nconst items = $input.all();\n\n// Helper function to safely parse JSON strings\nfunction safeJsonParse(data) {\n  if (typeof data === 'string') {\n    try {\n      return JSON.parse(data);\n    } catch (e) {\n      console.log('JSON parse error:', e);\n      return data;\n    }\n  }\n  return data;\n}\n\n// Helper function to extract data from various node formats\nfunction extractNodeData(nodeData) {\n  if (!nodeData) return null;\n  \n  // Handle different data structures\n  if (Array.isArray(nodeData)) {\n    return nodeData.map(item => {\n      if (item.json) return item.json;\n      return item;\n    });\n  }\n  \n  if (nodeData.json) return nodeData.json;\n  return nodeData;\n}\n\n// Helper function to format JSON properly without \\n issues\nfunction formatJsonOutput(data) {\n  if (typeof data === 'string') {\n    // Try to parse and re-stringify to clean up formatting\n    try {\n      const parsed = JSON.parse(data);\n      return JSON.stringify(parsed, null, 2);\n    } catch (e) {\n      // If parsing fails, return cleaned string\n      return data.replace(/\\\\n/g, '\\n').replace(/\\\\\\\"/g, '\"');\n    }\n  }\n  \n  if (typeof data === 'object' && data !== null) {\n    return JSON.stringify(data, null, 2);\n  }\n  \n  return data;\n}\n\n// Helper function to remove formatting from residual values\nfunction cleanResidualValues(data) {\n  if (!data || typeof data !== 'object') return data;\n  \n  // Create a deep copy to avoid modifying original data\n  const cleanedData = JSON.parse(JSON.stringify(data));\n  \n  // Function to recursively clean values\n  function cleanValue(value) {\n    if (typeof value === 'string') {\n      // Remove $ and % symbols, keep the numeric value\n      return value.replace(/[$%,]/g, '');\n    } else if (Array.isArray(value)) {\n      return value.map(cleanValue);\n    } else if (typeof value === 'object' && value !== null) {\n      const cleaned = {};\n      for (const [key, val] of Object.entries(value)) {\n        cleaned[key] = cleanValue(val);\n      }\n      return cleaned;\n    }\n    return value;\n  }\n  \n  // Clean specific residual value fields\n  if (cleanedData.asset_management_table) {\n    const table = cleanedData.asset_management_table;\n    \n    // Clean residual percentage and dollar arrays\n    if (table.resid_hi_percent) {\n      table.resid_hi_percent = table.resid_hi_percent.map(val => val.replace('%', ''));\n    }\n    if (table.resid_hi_dollar) {\n      table.resid_hi_dollar = table.resid_hi_dollar.map(val => val.replace(/[$,]/g, ''));\n    }\n    if (table.resid_lo_percent) {\n      table.resid_lo_percent = table.resid_lo_percent.map(val => val.replace('%', ''));\n    }\n    if (table.resid_lo_dollar) {\n      table.resid_lo_dollar = table.resid_lo_dollar.map(val => val.replace(/[$,]/g, ''));\n    }\n    \n    // Clean subject_price\n    if (table.subject_price) {\n      table.subject_price = table.subject_price.replace(/[$,]/g, '');\n    }\n  }\n  \n  // Clean valuation_details\n  if (cleanedData.valuation_details && cleanedData.valuation_details['48_month_values']) {\n    const values = cleanedData.valuation_details['48_month_values'];\n    if (values.retail) {\n      values.retail = values.retail.replace(/[$,]/g, '').split(' ')[0]; // Keep only the numeric part\n    }\n    if (values.market) {\n      values.market = values.market.replace(/[$,]/g, '').split(' ')[0]; // Keep only the numeric part\n    }\n  }\n  \n  return cleanedData;\n}\n\ntry {\n  // 1. Get Inflation Analysis Data from Inflation Agent node\n  let inflationData = null;\n  try {\n    const inflationNodeData = $('Inflation Agent').item.json;\n    if (inflationNodeData && inflationNodeData.output) {\n      inflationData = safeJsonParse(inflationNodeData.output);\n    } else if (inflationNodeData) {\n      inflationData = inflationNodeData;\n    }\n  } catch (e) {\n    console.log('Inflation data extraction error:', e);\n    inflationData = { error: 'Failed to extract inflation data from Inflation Agent node' };\n  }\n\n  // 2. Get Utilization vs Price Analysis Data from Determine Residual and OEC node\n  let utilizationData = null;\n  try {\n    const oecNodeData = $('Determine Residual and OEC').all();\n    if (oecNodeData && oecNodeData.length > 0) {\n      // Extract the residual data which contains utilization analysis\n      const residualData = extractNodeData(oecNodeData);\n      \n      // Create utilization analysis from the data\n      if (residualData && Array.isArray(residualData)) {\n        // Calculate utilization metrics from the data\n        const utilizationMetrics = residualData.map(item => ({\n          source: item.Source,\n          year_model: item[\"Year model\"],\n          age: item.Age,\n          total_hours: item[\"Hours - total\"],\n          hours_per_year: item[\"Hours - per year\"],\n          current_price: item[\"Current Price\"],\n          residual_percentage: item.Resid,\n          effective_age: item[\"Effective Age\"],\n          price_per_hour_impact: Math.round((parseFloat(item[\"Current Price\"].replace(/[$,]/g, '')) / item[\"Hours - total\"]) * 100) / 100\n        }));\n\n        utilizationData = {\n          utilization_analysis: utilizationMetrics,\n          summary: {\n            average_hours_per_year: Math.round(utilizationMetrics.reduce((sum, item) => sum + item.hours_per_year, 0) / utilizationMetrics.length),\n            optimal_range: \"750-850 hours per year for maximum value retention\",\n            correlation: \"Inverse correlation between annual usage and residual value percentage\"\n          },\n          chart_data: {\n            scatter_plot: {\n              x_axis: \"Hours per Year\",\n              y_axis: \"Residual Percentage\",\n              data_points: utilizationMetrics.map(item => ({\n                x: item.hours_per_year,\n                y: parseFloat(item.residual_percentage.replace('%', '')),\n                label: `${item.year_model} (${item.total_hours}h)`\n              }))\n            }\n          }\n        };\n      }\n    }\n  } catch (e) {\n    console.log('Utilization data extraction error:', e);\n    utilizationData = { error: 'Failed to extract utilization data' };\n  }\n\n  // 3. Get Depreciation Analysis & Financial Summary Data from Prep Modified Depreciation output node\n  let depreciationData = null;\n  try {\n    // Reference the \"Prep Modified Depreciation output\" node instead\n    const depreciationNodeData = $('Prep Modified Depreciation output').item.json;\n    \n    if (depreciationNodeData) {\n      // The data should be in the expected format already\n      if (Array.isArray(depreciationNodeData)) {\n        // If it's an array, take the first item\n        depreciationData = depreciationNodeData[0];\n      } else {\n        depreciationData = depreciationNodeData;\n      }\n      \n      // Clean up any formatting issues in the depreciation data\n      if (depreciationData && typeof depreciationData === 'object') {\n        // Ensure all numeric arrays are properly formatted\n        if (depreciationData.depreciation_calculations) {\n          const calc = depreciationData.depreciation_calculations;\n          \n          // Make sure all arrays are properly formatted numbers\n          ['straight_line', 'double_declining', 'sum_of_years_digits', 'macrs'].forEach(method => {\n            if (calc[method] && Array.isArray(calc[method])) {\n              calc[method] = calc[method].map(val => typeof val === 'string' ? parseFloat(val) : val);\n            }\n          });\n        }\n      }\n    }\n  } catch (e) {\n    console.log('Depreciation data extraction error:', e);\n    depreciationData = { error: 'Failed to extract depreciation data from Prep Modified Depreciation output node' };\n  }\n\n  // 4. Get OEC and Residual Value Analysis Data\n  let oecResidualData = null;\n  try {\n    const oecData = $('Determine Residual and OEC').all();\n    oecResidualData = extractNodeData(oecData);\n  } catch (e) {\n    console.log('OEC and Residual data extraction error:', e);\n    oecResidualData = { error: 'Failed to extract OEC and residual data' };\n  }\n\n  // 5. Get Market Comparison Data\n  let marketCompsData = null;\n  try {\n    const marketData = $('market_comps_list').all();\n    marketCompsData = extractNodeData(marketData);\n  } catch (e) {\n    console.log('Market comps data extraction error:', e);\n    marketCompsData = { error: 'Failed to extract market comparison data' };\n  }\n\n  // 6. Get Executive Summary Data from Format Executive Summary Output node\n  let executiveSummaryData = null;\n  try {\n    // Use the Format Executive Summary Output node as specified\n    const execData = $('Format Executive Summary Output').item.json;\n    if (execData) {\n      // Handle both array and object formats\n      if (Array.isArray(execData)) {\n        executiveSummaryData = execData[0];\n      } else {\n        executiveSummaryData = execData;\n      }\n      \n      // Extract the data field if it exists\n      if (executiveSummaryData && executiveSummaryData.data) {\n        executiveSummaryData = executiveSummaryData.data;\n      }\n      \n      // Clean residual values from executive summary data\n      executiveSummaryData = cleanResidualValues(executiveSummaryData);\n    }\n  } catch (e) {\n    console.log('Executive summary extraction error:', e);\n    \n    // Fallback to other possible nodes if Format Executive Summary Output fails\n    const possibleNodes = [\n      'Executive Summary Agent',\n      'Executive Summary'\n    ];\n    \n    for (const nodeName of possibleNodes) {\n      try {\n        const execData = $(nodeName).item.json;\n        if (execData) {\n          executiveSummaryData = execData;\n          executiveSummaryData = cleanResidualValues(executiveSummaryData);\n          break;\n        }\n      } catch (e) {\n        continue;\n      }\n    }\n    \n    if (!executiveSummaryData) {\n      executiveSummaryData = { error: 'Failed to extract executive summary data from Format Executive Summary Output node' };\n    }\n  }\n\n  // Create the properly formatted combined response\n  const combinedResponse = {\n    success: true,\n    timestamp: new Date().toISOString(),\n    equipment_analysis: {\n      equipment_name: \"2025 Volvo A30G Articulating Dump Truck\",\n      initial_cost: \"507750\", // Removed $ formatting\n      analysis_date: new Date().toISOString().split('T')[0]\n    },\n    data_sources: {\n      inflation_analysis: {\n        description: \"Consumer Price Index and inflation impact analysis\",\n        data: inflationData\n      },\n      utilization_vs_price: {\n        description: \"Equipment utilization hours vs current market pricing analysis\",\n        data: utilizationData\n      },\n      depreciation_analysis: {\n        description: \"MACRS depreciation schedules and financial projections\",\n        data: depreciationData\n      },\n      oec_residual_analysis: {\n        description: \"Original Equipment Cost and residual value projections\",\n        data: oecResidualData\n      },\n      market_comparisons: {\n        description: \"Comparable equipment market analysis and pricing data\",\n        data: marketCompsData\n      },\n      executive_summary: {\n        description: \"Executive summary with key findings and recommendations\",\n        data: executiveSummaryData\n      }\n    },\n    metadata: {\n      total_data_sources: 6,\n      processing_timestamp: new Date().toISOString(),\n      data_quality: {\n        inflation_data_available: inflationData !== null && !inflationData.error,\n        utilization_data_available: utilizationData !== null && !utilizationData.error,\n        depreciation_data_available: depreciationData !== null && !depreciationData.error,\n        oec_residual_data_available: oecResidualData !== null && !oecResidualData.error,\n        market_comps_data_available: marketCompsData !== null && !marketCompsData.error,\n        executive_summary_available: executiveSummaryData !== null && !executiveSummaryData.error\n      }\n    }\n  };\n\n  console.log('Successfully processed all data sources');\n  \n  // Return the properly formatted combined data\n  return [{\n    json: combinedResponse\n  }];\n\n} catch (error) {\n  console.error('Error in data combination:', error);\n  \n  // Return error response with debug information\n  return [{\n    json: {\n      success: false,\n      error: 'Failed to combine data sources',\n      error_details: error.message,\n      timestamp: new Date().toISOString(),\n      debug_info: {\n        available_nodes: \"Check n8n workflow for available node names\",\n        input_items_count: items ? items.length : 0,\n        error_stack: error.stack\n      },\n      partial_data: {\n        message: \"Some data sources may be available, check individual error messages in logs\"\n      }\n    }\n  }];\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        6740,
        -900
      ],
      "id": "a5aa024d-12c4-4b1d-94af-26b9cd0b8765",
      "name": "Make Response"
    }
  ],
  "pinData": {
    "Search Firecrawl for URL LINKS1": [
      {
        "json": {
          "success": true,
          "data": [
            {
              "title": "VOLVO L150H Construction Equipment For Sale - Machinery Trader",
              "description": "The VOLVO L150H Wheel Loaders ranges in price from as low as $84,889 to $500,000 based on MachineryTrader's market leading data.",
              "url": "https://www.machinerytrader.com/listings/for-sale/volvo/l150h/construction-equipment?srsltid=AfmBOoqNqdEcOlpiN6cwrKZUEVV3S5pvadrmHAIu7h_Bd4W7ai7Kj0Ax",
              "metadata": {
                "ogLocale": "en_US",
                "ogSiteName": "MachineryTrader.com",
                "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0",
                "referrer": "unsafe-url",
                "ogUrl": "https://www.machinerytrader.com/listings/for-sale/volvo/l150h/construction-equipment",
                "apple-itunes-app": "app-id=380184450",
                "og:site_name": "MachineryTrader.com",
                "og:image": "https://media.sandhills.com/img.axd?id=9071260592&wid=4326182721&rwl=False&p=&ext=&w=350&h=220&t=&lp=&c=True&wt=False&sz=Max&rt=0&checksum=iHlqkaqn4t%2bDzDJMy1qcYpdCjR2tfEFWfOXwW37BURg%3d",
                "ogDescription": "Browse a wide selection of new and used VOLVO L150H Construction Equipment for sale near you at MachineryTrader.com",
                "ogTitle": "VOLVO L150H Construction Equipment For Sale | MachineryTrader.com",
                "title": "VOLVO L150H Construction Equipment For Sale | MachineryTrader.com",
                "ogImage": "https://media.sandhills.com/img.axd?id=9071260592&wid=4326182721&rwl=False&p=&ext=&w=350&h=220&t=&lp=&c=True&wt=False&sz=Max&rt=0&checksum=iHlqkaqn4t%2bDzDJMy1qcYpdCjR2tfEFWfOXwW37BURg%3d",
                "description": "Browse a wide selection of new and used VOLVO L150H Construction Equipment for sale near you at MachineryTrader.com",
                "robots": "noarchive",
                "language": "en",
                "favicon": "https://media.sandhills.com/cdn/Images/Icons/Favicons/Machinery.ico?v=3",
                "og:type": "website",
                "og:title": "VOLVO L150H Construction Equipment For Sale | MachineryTrader.com",
                "og:url": "https://www.machinerytrader.com/listings/for-sale/volvo/l150h/construction-equipment",
                "og:description": "Browse a wide selection of new and used VOLVO L150H Construction Equipment for sale near you at MachineryTrader.com",
                "og:locale": "en_US",
                "scrapeId": "21690054-f9da-446c-99d5-081ebcf9bb53",
                "sourceURL": "https://www.machinerytrader.com/listings/for-sale/volvo/l150h/construction-equipment?srsltid=AfmBOoqNqdEcOlpiN6cwrKZUEVV3S5pvadrmHAIu7h_Bd4W7ai7Kj0Ax",
                "url": "https://www.machinerytrader.com/listings/for-sale/volvo/l150h/construction-equipment",
                "statusCode": 200,
                "contentType": "text/html; charset=utf-8",
                "proxyUsed": "basic",
                "cacheState": "miss"
              },
              "links": [
                "https://www.machinerytrader.com/listings/for-sale/volvo/l150h/construction-equipment#main-content",
                "https://www.machinerytrader.com/listings/for-sale/volvo/l150h/construction-equipment#filters",
                "https://www.machinerytrader.com/listings/search?Manufacturer=VOLVO&Model=L150H&ScopeCategoryIDs=4%7C27%7C28%7C464%7C151000&sort=1&print=1",
                "https://www.machinerytrader.com/DataAnalysis/ParseHighLowAverage?ListingType=For%20Retail%7CFor%20Rent%7CFor%20Lease%7CUpcoming%20Auctions&ManufacturerName=VOLVO&ModelName=L150H&IsModelGroup=False&ScopeCategoryIDs=4%7C27%7C28%7C464%7C151000",
                "https://www.machinerytrader.com/parts/search/volvo/l150h?Manufacturer=VOLVO&Model=L150H",
                "https://www.machinerytrader.com/blog/construction-equipment-news/2025/03/volvo-reveals-new-fuel-saving-26-to-50-ton-hybrid-excavators",
                "https://www.machinerytrader.com/blog/construction-equipment-news/2024/06/newest-volvo-midsize-and-large-excavators-offer-better-fuel-economy-and-operator-comfort",
                "https://www.machinerytrader.com/blog/construction-equipment-news/2024/06/volvo-ce-debuts-new-l120-electric-wheel-loader",
                "https://www.auctionvalues.com/?gtmlt=1",
                "https://www.equipmentfacts.com/listings/construction-equipment/auctions/online/245532407?gtmlt=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D14183115/Machinery/4/1060/245532407",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D14183115/Machinery/4/1060/245532407",
                "tel:+13308454411",
                "https://www.machinerytrader.com/listing/for-sale/234799821/2019-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/32/ListPage/D17010241/Machinery/4/1060/234799821",
                "tel:+17807770000",
                "https://semlerfarms.com/",
                "https://www.machinerytrader.com/listing/for-sale/238992517/2024-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D28525584/Machinery/4/1060/238992517",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D28525584/Machinery/4/1060/238992517",
                "tel:+14072325359",
                "http://www.altaused.com/",
                "https://www.machinerytrader.com/listing/for-sale/238842099/2021-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17169033/Machinery/4/1060/238842099?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17169033/Machinery/4/1060/238842099",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17169033/Machinery/4/1060/238842099",
                "tel:+15099729668",
                "https://www.pacwestmachinery.com/",
                "https://www.machinerytrader.com/listing/for-sale/233289019/2020-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/233289019?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/233289019",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17994737/Machinery/4/1060/233289019",
                "tel:+18173201995",
                "http://www.romcoused.com/",
                "https://www.machinerytrader.com/listing/for-sale/241821097/2015-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D12852631/Machinery/4/1060/241821097?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D12852631/Machinery/4/1060/241821097",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D12852631/Machinery/4/1060/241821097",
                "tel:+17655760022",
                "http://www.a-1equipment.com/",
                "https://www.machinerytrader.com/listing/for-sale/243283403/2025-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283403",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283403",
                "tel:+12626077016",
                "http://www.aringequipment.com/",
                "https://www.machinerytrader.com/listing/for-sale/243283325/2025-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283325",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283325",
                "https://www.machinerytrader.com/listing/for-sale/240273469/2024-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29137711/Machinery/4/1060/240273469?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29137711/Machinery/4/1060/240273469",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D29137711/Machinery/4/1060/240273469",
                "tel:+17046593306",
                "http://www.ascendummachineryused.com/",
                "https://www.machinerytrader.com/listing/for-sale/242296195/2024-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16352304/Machinery/4/1060/242296195",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16352304/Machinery/4/1060/242296195",
                "tel:+14026257250",
                "http://www.wiseheavyequipment.com/",
                "https://www.machinerytrader.com/listing/for-sale/235333377/2024-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333377",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333377",
                "https://www.machinerytrader.com/listing/for-sale/235333327/2024-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333327",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333327",
                "https://www.machinerytrader.com/listing/for-sale/235246679/2024-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D20756023/Machinery/4/1060/235246679",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D20756023/Machinery/4/1060/235246679",
                "tel:+16056245785",
                "https://www.machinerytrader.com/listing/for-sale/238556165/2023-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D22210546/Machinery/4/1060/238556165",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D22210546/Machinery/4/1060/238556165",
                "tel:+18887241525",
                "http://www.nussinventory.com/",
                "https://www.machinerytrader.com/listing/for-sale/243783905/2021-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D28525584/Machinery/4/1060/243783905?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D28525584/Machinery/4/1060/243783905",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D28525584/Machinery/4/1060/243783905",
                "tel:+12484309007",
                "https://www.machinerytrader.com/listing/for-sale/241344077/2020-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/241344077?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/241344077",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17994737/Machinery/4/1060/241344077",
                "https://www.machinerytrader.com/listing/for-sale/240816837/2020-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29240838/Machinery/4/1060/240816837?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29240838/Machinery/4/1060/240816837",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D29240838/Machinery/4/1060/240816837",
                "tel:+18138167060",
                "https://www.machinerytrader.com/listing/for-sale/241400529/2019-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16168482/Machinery/4/1060/241400529",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16168482/Machinery/4/1060/241400529",
                "tel:+17167802782",
                "https://www.machinerytrader.com/listing/for-sale/225394497/2018-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17661035/Machinery/4/1060/225394497?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17661035/Machinery/4/1060/225394497",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17661035/Machinery/4/1060/225394497",
                "tel:+18643053528",
                "http://www.gearheadzus.com/",
                "https://www.machinerytrader.com/listing/for-sale/233338445/2019-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/32/ListPage/D17010241/Machinery/4/1060/233338445",
                "https://www.machinerytrader.com/listing/for-sale/243138465/2025-volvo-l150h-wheel-loaders",
                "tel:+494504790000",
                "https://www.machinerytrader.com/listing/for-sale/244716905/2024-volvo-l150h-wheel-loaders",
                "tel:+31418788101",
                "https://www.machinerytrader.com/listing/for-sale/244889943/2023-volvo-l150h-wheel-loaders",
                "tel:+31738080404",
                "https://www.machinerytrader.com/listing/for-sale/244191977/2023-volvo-l150h-wheel-loaders",
                "https://www.machinerytrader.com/listing/for-sale/244191975/2023-volvo-l150h-wheel-loaders",
                "https://www.machinerytrader.com/listing/for-sale/244223847/2022-volvo-l150h-wheel-loaders",
                "https://www.machinerytrader.com/listing/for-sale/244223845/2022-volvo-l150h-wheel-loaders",
                "https://www.machinerytrader.com/listing/for-sale/244191971/2022-volvo-l150h-wheel-loaders",
                "https://www.machinerytrader.com/drilldown-search/search/?Manufacturer=VOLVO&Model=L150H&internalLinkGroup=Condition%7CGrossVehicleWeightRating%7CDrive&dbt=WLDB",
                "https://www.gocurrency.com/legal/",
                "https://vip.machinerytrader.com/",
                "https://www.machinerytrader.com/watchlist",
                "https://www.machinerytrader.com/email-alerts",
                "https://www.machinerytrader.com/info/cookies-policy",
                "https://www.machinerytrader.com/info/privacy-policy",
                "https://www.microsoft.com/en-us/edge",
                "https://www.google.com/chrome",
                "https://www.mozilla.org/en-US/firefox/browsers/"
              ]
            },
            {
              "title": "VOLVO L150 Construction Equipment For Sale | MachineryTrader.com",
              "description": "The VOLVO L150 Wheel Loaders ranges in price from as low as $19,000 to $500,000 based on MachineryTrader's market leading data.",
              "url": "https://www.machinerytrader.com/listings/for-sale/volvo/l150/construction-equipment?srsltid=AfmBOopclMXXLNqTFqemdNGFl6pTdRlNrj5MWjoYX01fLxQWYsYjBhy0",
              "metadata": {
                "og:title": "VOLVO L150 Construction Equipment For Sale | MachineryTrader.com",
                "favicon": "https://media.sandhills.com/cdn/Images/Icons/Favicons/Machinery.ico?v=3",
                "robots": "noarchive",
                "ogUrl": "https://www.machinerytrader.com/listings/for-sale/volvo/l150/construction-equipment",
                "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0",
                "ogDescription": "Browse a wide selection of new and used VOLVO L150 Construction Equipment for sale near you at MachineryTrader.com",
                "referrer": "unsafe-url",
                "og:type": "website",
                "og:description": "Browse a wide selection of new and used VOLVO L150 Construction Equipment for sale near you at MachineryTrader.com",
                "ogImage": "https://media.sandhills.com/img.axd?id=9071351159&wid=4326182721&rwl=False&p=&ext=&w=350&h=220&t=&lp=&c=True&wt=False&sz=Max&rt=0&checksum=PEA0KFAp2hn2uWq6%2fhNKzARmuGg%2bN5Hzqp1qGoVYXF0%3d",
                "ogSiteName": "MachineryTrader.com",
                "og:site_name": "MachineryTrader.com",
                "language": "en",
                "og:image": "https://media.sandhills.com/img.axd?id=9071351159&wid=4326182721&rwl=False&p=&ext=&w=350&h=220&t=&lp=&c=True&wt=False&sz=Max&rt=0&checksum=PEA0KFAp2hn2uWq6%2fhNKzARmuGg%2bN5Hzqp1qGoVYXF0%3d",
                "ogLocale": "en_US",
                "og:url": "https://www.machinerytrader.com/listings/for-sale/volvo/l150/construction-equipment",
                "description": "Browse a wide selection of new and used VOLVO L150 Construction Equipment for sale near you at MachineryTrader.com",
                "ogTitle": "VOLVO L150 Construction Equipment For Sale | MachineryTrader.com",
                "title": "VOLVO L150 Construction Equipment For Sale | MachineryTrader.com",
                "apple-itunes-app": "app-id=380184450",
                "og:locale": "en_US",
                "scrapeId": "8ffd3c3f-0446-469c-84ae-54da795f7064",
                "sourceURL": "https://www.machinerytrader.com/listings/for-sale/volvo/l150/construction-equipment?srsltid=AfmBOopclMXXLNqTFqemdNGFl6pTdRlNrj5MWjoYX01fLxQWYsYjBhy0",
                "url": "https://www.machinerytrader.com/listings/for-sale/volvo/l150/construction-equipment",
                "statusCode": 200,
                "contentType": "text/html; charset=utf-8",
                "proxyUsed": "basic",
                "cacheState": "miss"
              },
              "links": [
                "https://www.machinerytrader.com/listings/for-sale/volvo/l150/construction-equipment#main-content",
                "https://www.machinerytrader.com/listings/for-sale/volvo/l150/construction-equipment#filters",
                "https://www.machinerytrader.com/listings/search?Manufacturer=VOLVO&ModelGroup=L150&ScopeCategoryIDs=4%7C27%7C28%7C464%7C151000&sort=1&print=1",
                "https://www.machinerytrader.com/DataAnalysis/ParseHighLowAverage?ListingType=For%20Retail%7CFor%20Rent%7CFor%20Lease%7CUpcoming%20Auctions&ManufacturerName=VOLVO&ModelName=L150&IsModelGroup=True&ScopeCategoryIDs=4%7C27%7C28%7C464%7C151000",
                "https://www.machinerytrader.com/parts/search/volvo/l150?Manufacturer=VOLVO&Model=L150",
                "https://www.machinerytrader.com/blog/construction-equipment-news/2025/03/volvo-reveals-new-fuel-saving-26-to-50-ton-hybrid-excavators",
                "https://www.machinerytrader.com/blog/construction-equipment-news/2024/06/newest-volvo-midsize-and-large-excavators-offer-better-fuel-economy-and-operator-comfort",
                "https://www.machinerytrader.com/blog/construction-equipment-news/2024/06/volvo-ce-debuts-new-l120-electric-wheel-loader",
                "https://www.auctionvalues.com/?gtmlt=1",
                "https://www.equipmentfacts.com/listings/construction-equipment/auctions/online/245558405?gtmlt=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D14156275/Machinery/4/1060/245558405",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D14156275/Machinery/4/1060/245558405",
                "https://bid.equipmentfacts.com/AuctionCastBoard/Event/244447629",
                "tel:+19152293559",
                "https://www.machinerytrader.com/listing/for-sale/234799821/2019-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/32/ListPage/D17010241/Machinery/4/1060/234799821",
                "tel:+17807770000",
                "https://semlerfarms.com/",
                "https://www.machinerytrader.com/listing/for-sale/244272593/2014-volvo-l150g-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D31868203/Machinery/4/1060/244272593?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D31868203/Machinery/4/1060/244272593",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D31868203/Machinery/4/1060/244272593",
                "tel:+14323052074",
                "https://www.machinerytrader.com/listing/for-sale/238992517/2024-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D28525584/Machinery/4/1060/238992517",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D28525584/Machinery/4/1060/238992517",
                "tel:+14072325359",
                "http://www.altaused.com/",
                "https://www.machinerytrader.com/listing/for-sale/228758847/1992-volvo-l150-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16404354/Machinery/4/1060/228758847?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16404354/Machinery/4/1060/228758847",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16404354/Machinery/4/1060/228758847",
                "tel:+12083625163",
                "http://www.boisewestequip.com/",
                "https://www.machinerytrader.com/listing/for-sale/238842099/2021-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17169033/Machinery/4/1060/238842099?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17169033/Machinery/4/1060/238842099",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17169033/Machinery/4/1060/238842099",
                "tel:+15099729668",
                "https://www.pacwestmachinery.com/",
                "https://www.machinerytrader.com/listing/for-sale/233289019/2020-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/233289019?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/233289019",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17994737/Machinery/4/1060/233289019",
                "tel:+18173201995",
                "http://www.romcoused.com/",
                "https://www.machinerytrader.com/listing/for-sale/241821097/2015-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D12852631/Machinery/4/1060/241821097?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D12852631/Machinery/4/1060/241821097",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D12852631/Machinery/4/1060/241821097",
                "tel:+17655760022",
                "http://www.a-1equipment.com/",
                "https://www.machinerytrader.com/listing/for-sale/244886943/1995-volvo-l150-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D9916499/Machinery/4/1060/244886943?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D9916499/Machinery/4/1060/244886943",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D9916499/Machinery/4/1060/244886943",
                "tel:+17174007051",
                "http://www.kurtztrading.com/",
                "https://www.machinerytrader.com/listing/for-sale/227739257/1994-volvo-l150-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16741821/Machinery/4/1060/227739257?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16741821/Machinery/4/1060/227739257",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16741821/Machinery/4/1060/227739257",
                "tel:+18438608438",
                "http://www.palmettomachinery.com/",
                "https://www.machinerytrader.com/listing/for-sale/242378995/2006-volvo-l150e-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D8606009/Machinery/4/1060/242378995?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D8606009/Machinery/4/1060/242378995",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D8606009/Machinery/4/1060/242378995",
                "tel:+18165267032",
                "http://www.summitheavyequipment.com/",
                "https://www.machinerytrader.com/listing/for-sale/242813669/2006-volvo-l150e-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D32535306/Machinery/4/1060/242813669?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D32535306/Machinery/4/1060/242813669",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D32535306/Machinery/4/1060/242813669",
                "tel:+15864675012",
                "https://www.machinerytrader.com/listing/for-sale/224439547/2004-volvo-l150e-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17130/Machinery/4/1060/224439547?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17130/Machinery/4/1060/224439547",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17130/Machinery/4/1060/224439547",
                "tel:+18884771713",
                "https://www.hesequipment.com/default.htm",
                "https://www.machinerytrader.com/listing/for-sale/32824507/2009-volvo-l150f-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D363065/Machinery/4/1060/32824507",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D363065/Machinery/4/1060/32824507",
                "tel:+16036418608",
                "http://www.josephequipment.net/",
                "https://www.machinerytrader.com/listing/for-sale/245556649/2012-volvo-l150g-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D13676065/Machinery/4/1060/245556649?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D13676065/Machinery/4/1060/245556649",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D13676065/Machinery/4/1060/245556649",
                "tel:+17174007180",
                "http://www.leonequipment.com/",
                "https://www.machinerytrader.com/listing/for-sale/243283403/2025-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283403",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283403",
                "tel:+12626077016",
                "http://www.aringequipment.com/",
                "https://www.machinerytrader.com/listing/for-sale/243283325/2025-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283325",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283325",
                "https://www.machinerytrader.com/listing/for-sale/240273469/2024-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29137711/Machinery/4/1060/240273469?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29137711/Machinery/4/1060/240273469",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D29137711/Machinery/4/1060/240273469",
                "tel:+17046593306",
                "http://www.ascendummachineryused.com/",
                "https://www.machinerytrader.com/listing/for-sale/242296195/2024-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16352304/Machinery/4/1060/242296195",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16352304/Machinery/4/1060/242296195",
                "tel:+14026257250",
                "http://www.wiseheavyequipment.com/",
                "https://www.machinerytrader.com/listing/for-sale/235333377/2024-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333377",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333377",
                "https://www.machinerytrader.com/listing/for-sale/235333327/2024-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333327",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333327",
                "https://www.machinerytrader.com/listing/for-sale/235246679/2024-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D20756023/Machinery/4/1060/235246679",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D20756023/Machinery/4/1060/235246679",
                "tel:+16056245785",
                "https://www.machinerytrader.com/listing/for-sale/238556165/2023-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D22210546/Machinery/4/1060/238556165",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D22210546/Machinery/4/1060/238556165",
                "tel:+18887241525",
                "http://www.nussinventory.com/",
                "https://www.machinerytrader.com/listing/for-sale/243783905/2021-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D28525584/Machinery/4/1060/243783905?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D28525584/Machinery/4/1060/243783905",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D28525584/Machinery/4/1060/243783905",
                "tel:+12484309007",
                "https://www.machinerytrader.com/listing/for-sale/241344077/2020-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/241344077?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/241344077",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17994737/Machinery/4/1060/241344077",
                "https://www.machinerytrader.com/listing/for-sale/240816837/2020-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29240838/Machinery/4/1060/240816837?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29240838/Machinery/4/1060/240816837",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D29240838/Machinery/4/1060/240816837",
                "tel:+18138167060",
                "https://www.machinerytrader.com/listing/for-sale/241400529/2019-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16168482/Machinery/4/1060/241400529",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16168482/Machinery/4/1060/241400529",
                "tel:+17167802782",
                "https://www.machinerytrader.com/listing/for-sale/225394497/2018-volvo-l150h-wheel-loaders",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17661035/Machinery/4/1060/225394497?pala=1",
                "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17661035/Machinery/4/1060/225394497",
                "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17661035/Machinery/4/1060/225394497",
                "tel:+18643053528",
                "http://www.gearheadzus.com/",
                "https://www.machinerytrader.com/drilldown-search/search/?Manufacturer=VOLVO&ModelGroup=L150&internalLinkGroup=Condition%7CGrossVehicleWeightRating%7CDrive&dbt=WLDB",
                "https://www.gocurrency.com/legal/",
                "https://vip.machinerytrader.com/",
                "https://www.machinerytrader.com/watchlist",
                "https://www.machinerytrader.com/email-alerts",
                "https://www.machinerytrader.com/info/cookies-policy",
                "https://www.machinerytrader.com/info/privacy-policy",
                "https://www.microsoft.com/en-us/edge",
                "https://www.google.com/chrome",
                "https://www.mozilla.org/en-US/firefox/browsers/"
              ]
            },
            {
              "title": "Volvo L150H Equipment For Sale",
              "description": "Looking to buy a Volvo L150h equipment? Browse our extensive inventory of new and used Volvo L150h equipment from local Volvo dealers and private sellers.",
              "url": "https://www.equipmenttrader.com/Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0",
              "metadata": {
                "format-detection": "telephone=no",
                "og:site_name": "Equipment Trader",
                "og:url": "https://www.equipmenttrader.com/Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0",
                "referrer": "unsafe-url",
                "description": "Volvo L150H Equipment For Sale: 50 Equipment Near Me - Find New and Used Volvo L150H Equipment on Equipment Trader.",
                "twitter:title": "Volvo L150H Equipment For Sale - Volvo L150H Equipment - Equipment Trader",
                "twitter:creator": "@equipmenttraderblog",
                "ogTitle": "Volvo L150H Equipment For Sale - Volvo L150H Equipment - Equipment Trader",
                "ogImage": "https://cdn-media.tilabs.io/v1/media/684cb1f6ccf8a605a5150bf4.jpg?width=400&height=300&quality=60&bestfit=true&upsize=true&blurBackground=true&blurValue=100",
                "og:description": "Volvo L150H Equipment For Sale: 50 Equipment Near Me - Find New and Used Volvo L150H Equipment on Equipment Trader.",
                "ogDescription": "Volvo L150H Equipment For Sale: 50 Equipment Near Me - Find New and Used Volvo L150H Equipment on Equipment Trader.",
                "twitter:image": "https://cdn-media.tilabs.io/v1/media/684cb1f6ccf8a605a5150bf4.jpg?width=400&height=300&quality=60&bestfit=true&upsize=true&blurBackground=true&blurValue=100",
                "og:image": "https://cdn-media.tilabs.io/v1/media/684cb1f6ccf8a605a5150bf4.jpg?width=400&height=300&quality=60&bestfit=true&upsize=true&blurBackground=true&blurValue=100",
                "apple-itunes-app": "app-id=343382613",
                "com.silverpop.brandeddomains": "www.pages05.net,EquipmentTrader.com",
                "favicon": "https://www.equipmenttrader.com/favicon.ico",
                "language": "en",
                "ogUrl": "https://www.equipmenttrader.com/Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0",
                "HandheldFriendly": "True",
                "copyright": "Copyright 2025 Trader Interactive",
                "title": "Volvo L150H Equipment For Sale - Volvo L150H Equipment - Equipment Trader",
                "og:title": "Volvo L150H Equipment For Sale - Volvo L150H Equipment - Equipment Trader",
                "mobile-web-app-capable": "yes",
                "twitter:url": "https://www.equipmenttrader.com/Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0",
                "twitter:description": "Volvo L150H Equipment For Sale: 50 Equipment Near Me - Find New and Used Volvo L150H Equipment on Equipment Trader.",
                "twitter:site": "EquipmentTrader.com",
                "ogSiteName": "Equipment Trader",
                "twitter:card": "summary",
                "viewport": "width=device-width, maximum-scale=1.0, minimum-scale=1.0, initial-scale=1.0 user-scalable=no",
                "scrapeId": "54b32113-a4e4-4b00-b2c7-2df586f31bb1",
                "sourceURL": "https://www.equipmenttrader.com/Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0",
                "url": "https://www.equipmenttrader.com/Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0",
                "statusCode": 200,
                "proxyUsed": "basic"
              },
              "links": [
                "https://www.equipmenttrader.com/dealers/",
                "https://dealers.equipmenttrader.com/",
                "https://equipmentmediakit.com/",
                "https://www.equipmenttrader.com/locator/",
                "https://www.equipmenttrader.com/sell/",
                "https://www.equipmenttrader.com/listing/2016-VOLVO-L220H-5035302317",
                "https://www.equipmenttrader.com/listing/2017-VOLVO-L110H-5034398491#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2017&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=125000&vin_serial=VCEL110HC0S631256",
                "https://www.equipmenttrader.com/dealergroups/detail/5000001332",
                "https://www.equipmenttrader.com/listing/2023-VOLVO-Attachment-5036569564#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2023&make=VOLVO&model=Attachment&listing_title=Wheels&condition=Used&price=2000&vin_serial=",
                "https://www.equipmenttrader.com/listing/2018-VOLVO-L150H-5033688636#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2018&make=VOLVO&model=L150H&listing_title=Loaders&condition=Used&price=255000&vin_serial=",
                "https://www.equipmenttrader.com/dealergroups/detail/5000001166",
                "https://www.equipmenttrader.com/listing/-VOLVO-Attachment-5031402304#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=&make=VOLVO&model=Attachment&listing_title=Cab&condition=Used&price=1900&vin_serial=",
                "https://www.equipmenttrader.com/listing/2012-Volvo-L150G-5030917722#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2012&make=Volvo&model=L150G&listing_title=Loaders&condition=Used&price=48750&vin_serial=",
                "https://www.equipmenttrader.com/listing/2017-VOLVO-L110H-5035343587#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2017&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=72000&vin_serial=",
                "https://www.equipmenttrader.com/listing/2019-VOLVO-L180H-5034043487#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2019&make=VOLVO&model=L180H&listing_title=Loaders&condition=Used&price=143000&vin_serial=",
                "https://www.equipmenttrader.com/listing/1995-VOLVO-L150-5036486053#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=1995&make=VOLVO&model=L150&listing_title=Loaders&condition=Used&price=29500&vin_serial=L150V60422",
                "https://www.equipmenttrader.com/listing/-VOLVO-Attachment-5033525186#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=&make=VOLVO&model=Attachment&listing_title=Bucket&condition=Used&price=8400&vin_serial=",
                "https://www.equipmenttrader.com/listing/-VOLVO-Attachment-5033525210#sid=860987",
                "https://www.equipmenttrader.com/listing/2015-VOLVO-L150H-5027911894#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2015&make=VOLVO&model=L150H&listing_title=Loaders&condition=Used&price=115000&vin_serial=",
                "https://www.equipmenttrader.com/dealergroups/detail/5000002032",
                "https://www.equipmenttrader.com/listing/2016-VOLVO-L220H-5035302317#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2016&make=VOLVO&model=L220H&listing_title=Loaders&condition=Used&price=79500&vin_serial=",
                "https://www.equipmenttrader.com/listing/-volvo-Attachment-5033525060#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=&make=volvo&model=Attachment&listing_title=Forklift%20Attachments&condition=Used&price=8800&vin_serial=15705",
                "https://www.equipmenttrader.com/listing/-volvo-Attachment-5033525929#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=&make=volvo&model=Attachment&listing_title=Forklift%20Attachments&condition=Used&price=8900&vin_serial=15603",
                "https://www.equipmenttrader.com/listing/2025-VOLVO-L150H-5035791892#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2025&make=VOLVO&model=L150H&listing_title=Loaders&condition=New&price=0&vin_serial=VCEL150HT00007512",
                "https://www.equipmenttrader.com/listing/2025-VOLVO-L150H-5035792028#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2025&make=VOLVO&model=L150H&listing_title=Loaders&condition=New&price=0&vin_serial=VCEL150HV00007503",
                "https://www.equipmenttrader.com/listing/2024-VOLVO-L150H-5032411538#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2024&make=VOLVO&model=L150H&listing_title=Loaders&condition=New&price=0&vin_serial=VCEL150HK00007397",
                "https://www.equipmenttrader.com/listing/2024-VOLVO-L150H-5032411541#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2024&make=VOLVO&model=L150H&listing_title=Loaders&condition=New&price=0&vin_serial=VCEL150HJ00007398",
                "https://www.equipmenttrader.com/listing/2016-VOLVO-Attachment-5033052328#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2016&make=VOLVO&model=Attachment&listing_title=Bucket&condition=Used&price=17500&vin_serial=329",
                "https://www.equipmenttrader.com/listing/2004-Volvo-L150E-5033008119#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2004&make=Volvo&model=L150E&listing_title=Loaders&condition=Used&price=37900&vin_serial=",
                "https://www.equipmenttrader.com/dealergroups/detail/5000002333",
                "https://www.equipmenttrader.com/listing/2019-VOLVO-L120H-5032679470#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2019&make=VOLVO&model=L120H&listing_title=Loaders&condition=Used&price=228000&vin_serial=632583",
                "https://www.equipmenttrader.com/listing/-VOLVO-Attachment-5033524609#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=&make=VOLVO&model=Attachment&listing_title=Bucket&condition=Used&price=7500&vin_serial=",
                "https://www.equipmenttrader.com/listing/2017-VOLVO-L110H-5033970988#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2017&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=79500&vin_serial=VCEL110HJ0S63129",
                "https://www.equipmenttrader.com/listing/2015-VOLVO-L110H-5033524660#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2015&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=69500&vin_serial=VCEL110HJF0010402",
                "https://www.equipmenttrader.com/listing/-VOLVO-Attachment-5035775904#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=&make=VOLVO&model=Attachment&listing_title=Coupler&condition=Used&price=7000&vin_serial=",
                "https://www.equipmenttrader.com/dealergroups/detail/5000002550",
                "https://www.equipmenttrader.com/listing/2004-VOLVO-L150E-5033525198#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2004&make=VOLVO&model=L150E&listing_title=Loaders&condition=Used&price=64500&vin_serial=L150EV7337",
                "https://www.equipmenttrader.com/listing/2018-VOLVO-L120H-5032679505#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2018&make=VOLVO&model=L120H&listing_title=Loaders&condition=Used&price=89500&vin_serial=632304",
                "https://www.equipmenttrader.com/listing/2017-Volvo-Loader+Bucket-5028086202#sid=860987",
                "https://www.equipmenttrader.com/dealergroups/detail/5000002074",
                "https://www.equipmenttrader.com/listing/2015-VOLVO-L110H-5036029671#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2015&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=79950&vin_serial=",
                "https://www.equipmenttrader.com/dealergroups/detail/5000002275",
                "https://www.equipmenttrader.com/listing/2018-Volvo-L110H-5036463595#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2018&make=Volvo&model=L110H&listing_title=Loaders&condition=Used&price=111500&vin_serial=",
                "https://www.equipmenttrader.com/listing/2017-Volvo-L110H-5036250290#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2017&make=Volvo&model=L110H&listing_title=Loaders&condition=Used&price=71850&vin_serial=",
                "https://www.equipmenttrader.com/listing/2019-VOLVO-L110H-5036612019#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2019&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=180000&vin_serial=VCEL110HT0S631677",
                "https://www.equipmenttrader.com/listing/2018-Volvo-L110H-5036411823#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2018&make=Volvo&model=L110H&listing_title=Loaders&condition=Used&price=139500&vin_serial=",
                "https://www.equipmenttrader.com/listing/2018-Volvo-L110H-5036411843#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2018&make=Volvo&model=L110H&listing_title=Loaders&condition=Used&price=109500&vin_serial=",
                "https://www.equipmenttrader.com/listing/-VOLVO-Attachment-5036683954#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=&make=VOLVO&model=Attachment&listing_title=Grapples&condition=Used&price=1800&vin_serial=",
                "https://www.equipmenttrader.com/listing/2018-Volvo-L110H-5035166215#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2018&make=Volvo&model=L110H&listing_title=Loaders&condition=Used&price=129500&vin_serial=",
                "https://www.equipmenttrader.com/listing/2018-VOLVO-L110H-5034845428#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2018&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=134500&vin_serial=",
                "https://www.equipmenttrader.com/listing/2016-VOLVO-L110H-5036029659#sid=860987",
                "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2016&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=79950&vin_serial=",
                "https://www.traderinteractive.com/terms/",
                "https://www.equipmenttrader.com/privacy/",
                "https://www.equipmenttrader.com/2018-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2018%3A2018",
                "https://www.equipmenttrader.com/2017-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2017%3A2017",
                "https://www.equipmenttrader.com/2024-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2024%3A2024",
                "https://www.equipmenttrader.com/2025-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2025%3A2025",
                "https://www.equipmenttrader.com/2015-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2015%3A2015",
                "https://www.equipmenttrader.com/2016-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2016%3A2016",
                "https://www.equipmenttrader.com/2019-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2019%3A2019",
                "https://www.equipmenttrader.com/2004-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2004%3A2004",
                "https://www.equipmenttrader.com/2005-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2005%3A2005",
                "https://www.equipmenttrader.com/2023-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2023%3A2023",
                "https://www.equipmenttrader.com/Holland-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=holland&state=Michigan%7CMI",
                "https://www.equipmenttrader.com/Butler-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=butler&state=Wisconsin%7CWI",
                "https://www.equipmenttrader.com/Corona-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=corona&state=California%7CCA",
                "https://www.equipmenttrader.com/Annapolis-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=annapolis&state=Maryland%7CMD",
                "https://www.equipmenttrader.com/Brighton-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=brighton&state=Colorado%7CCO",
                "https://www.equipmenttrader.com/Fairfield-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=fairfield&state=New%20Jersey%7CNJ",
                "https://www.equipmenttrader.com/Belleville-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=belleville&state=Michigan%7CMI",
                "https://www.equipmenttrader.com/Colbert-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=colbert&state=Georgia%7CGA",
                "https://www.equipmenttrader.com/Crofton-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=crofton&state=Maryland%7CMD",
                "https://www.equipmenttrader.com/Elysburg-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=elysburg&state=Pennsylvania%7CPA",
                "https://www.equipmenttrader.com/Fountain-Inn-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=fountain%20inn&state=South%20Carolina%7CSC",
                "https://www.equipmenttrader.com/Jerome-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=jerome&state=Idaho%7CID",
                "https://www.equipmenttrader.com/Volvo-L150h/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&size=STANDARD",
                "https://www.equipmenttrader.com/Wheeled-Volvo-L150h/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&movementType=WHEELED",
                "https://www.equipmenttrader.com/Volvo-L150h-Loaders/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Loaders%7C2007484",
                "https://www.equipmenttrader.com/Volvo-L150h-Bucket/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Bucket%7C2010260",
                "https://www.equipmenttrader.com/Volvo-L150h-Salvage/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Salvage%20Equipment%7C2007680",
                "https://www.equipmenttrader.com/Volvo-L150h-Forklift-Attachments/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Forklift%20Attachments%7C2000286",
                "https://www.equipmenttrader.com/Volvo-L150h-Cab/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Cab%7C2012306",
                "https://www.equipmenttrader.com/Volvo-L150h-Coupler/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Coupler%7C2011536",
                "https://www.equipmenttrader.com/Volvo-L150h-Grapples/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Grapples%7C2005240",
                "https://www.equipmenttrader.com/Volvo-L150h-Wheels/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Wheels%7C644250139",
                "https://www.equipmenttrader.com/Volvo-L150h-Construction/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&segment=Construction%20Equipment%7C1227317744",
                "https://www.equipmenttrader.com/Volvo-L150h-Salvaged/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&segment=Salvaged%20Equipment%7C1227318466"
              ]
            },
            {
              "title": "Used and New Volvo l150h Wheel Loaders For Sale - MachineryZone",
              "description": "Find Used and New Volvo l150h Wheel Loaders For Sale amongst an extensive inventory of 37 listings on MachineryZone. .",
              "url": "https://www.machineryzone.com/used/wheeled-loader/1/2618/volvo/l150h.html",
              "metadata": {
                "msapplication-navbutton-color": "#EE7D11",
                "viewport": [
                  "width=device-width, initial-scale=1.0, shrink-to-fit=no, maximum-scale=1, user-scalable=no",
                  "width=device-width, initial-scale=1, user-scalable=yes"
                ],
                "robots": [
                  "index, follow",
                  "noindex, nofollow"
                ],
                "title": "Used and New Volvo l150h Wheel Loaders For Sale - MachineryZone",
                "favicon": "https://ads5-static.mbcore.io/bundles/mblinepasitefront/img/favicon-tp.ico?7.5.24",
                "google-site-verification": [
                  "P5nBDb251rRGlbvi3_77FEq2u9a_p7RTCoOsKBiUehk",
                  "fHYEz3mrlofGXZataaL0_C_TAN4dWhVXG9XPetDnShA",
                  "fHYEz3mrlofGXZataaL0_C_TAN4dWhVXG9XPetDnShA",
                  "fHYEz3mrlofGXZataaL0_C_TAN4dWhVXG9XPetDnShA",
                  "fHYEz3mrlofGXZataaL0_C_TAN4dWhVXG9XPetDnShA",
                  "T6bFSmsnquJ-zUSMV3Kku9K413VJ80KjprWnV_Bv5lw"
                ],
                "theme-color": "#EE7D11",
                "apple-mobile-web-app-status-bar-style": "#EE7D11",
                "description": "Find Used and New Volvo l150h Wheel Loaders For Sale amongst an extensive inventory of 39 listings on MachineryZone. ., Web survey powered by SurveyMonkey.com. Create your own online survey now with SurveyMonkey's expert certified FREE templates.",
                "language": "en-us",
                "keywords": [
                  "",
                  "questionnaire, questionnaires, questionaire, questionaires, free online survey, free online surveys"
                ],
                "scrapeId": "f4883476-3f6d-4659-ba0a-ea92facd8407",
                "sourceURL": "https://www.machineryzone.com/used/wheeled-loader/1/2618/volvo/l150h.html",
                "url": "https://www.machineryzone.com/used/wheeled-loader/1/2618/volvo/l150h.html",
                "statusCode": 200,
                "proxyUsed": "basic"
              },
              "links": [
                "https://www.machineryzone.com/",
                "https://www.machineryzone.com/used/1/construction-equipments.html",
                "https://www.machineryzone.com/used/1/loaders.html",
                "https://www.machineryzone.com/classified/find_url_reset/1.html",
                "https://www.machineryzone.com/remove-filter/facet_make/8600",
                "https://www.machineryzone.com/remove-filter/modele/l150h",
                "https://www.machineryzone.com/myaccount/alert/disconnected",
                "https://www.machineryzone.com/auction/wheeled-loader/46058173/volvo-l150h.html",
                "https://www.machineryzone.com/used/wheeled-loader/45509355/volvo-l150h.html",
                "https://www.machineryzone.com/used/wheeled-loader/42214890/volvo-l150h.html",
                "https://www.machineryzone.com/used/wheeled-loader/46082751/volvo-l150h-german-machine-3rd-function.html",
                "https://www.machineryzone.com/used/wheeled-loader/46082733/volvo-l-150-h.html",
                "https://www.machineryzone.com/used/wheeled-loader/45865132/volvo-l-150-h.html",
                "https://www.machineryzone.com/used/wheeled-loader/44497545/volvo-l150h.html",
                "https://www.machineryzone.com/used/wheeled-loader/45462006/volvo-l-150-h.html",
                "https://www.machineryzone.com/used/wheeled-loader/45461987/volvo-l-150-h.html",
                "https://www.machineryzone.com/used/wheeled-loader/46067709/volvo-l150h-german-machine-cdc-weight-system.html",
                "https://www.machineryzone.com/used/wheeled-loader/46067706/volvo-l150h-german-machine-automatic-greasing.html",
                "https://www.machineryzone.com/used/wheeled-loader/46066124/volvo-l150h.html",
                "https://www.machineryzone.com/auction/wheeled-loader/46064623/volvo-l150h.html",
                "https://www.machineryzone.com/used/wheeled-loader/43733682/volvo-l150h.html",
                "https://www.machineryzone.com/used/wheeled-loader/46053517/volvo-l150-h.html",
                "https://www.machineryzone.com/used/wheeled-loader/45930414/volvo-l150-h.html",
                "https://www.machineryzone.com/new/wheeled-loader/45912638/volvo-l150h-2023-new-unused-bss-cdc-3rd-valve-qc-ac-ce.html",
                "https://www.machineryzone.com/new/wheeled-loader/45912644/volvo-l150h-2023-new-unused-bss-cdc-3rd-valve-qc-ac.html",
                "https://www.machineryzone.com/new/wheeled-loader/45912655/volvo-l150h-2022-new-unused-01-optishift-ac-gp-bucket.html",
                "https://www.machineryzone.com/new/wheeled-loader/45914821/volvo-l150h-2022-new-unused-02-optishift-ac-gp-bucket.html",
                "https://www.machineryzone.com/used/wheeled-loader/46042008/volvo-l150h.html",
                "https://www.machineryzone.com/used/wheeled-loader/45687316/volvo-l150h.html",
                "https://www.machineryzone.com/used/wheeled-loader/45909367/volvo-l150h.html",
                "https://www.machineryzone.com/used/wheeled-loader/45844547/volvo-l150h-german.html",
                "https://www.machineryzone.com/used/wheeled-loader/45985374/volvo-l150h-german-machine-auto-greasing-camera.html",
                "https://www.machineryzone.com/used/wheeled-loader/45963509/volvo-l-150-h.html",
                "https://www.machineryzone.com/used/wheeled-loader/45326613/volvo-l150h.html",
                "https://www.machineryzone.com/used/wheeled-loader/45942484/volvo-l150h-german-machine-auto-greasing-camera.html",
                "https://www.machineryzone.com/used/wheeled-loader/45912793/volvo-l150h-german-machine-auto-greasing-camera.html",
                "https://www.machineryzone.com/used/wheeled-loader/45864380/volvo-l150h.html",
                "https://www.machineryzone.com/used/wheeled-loader/45864103/volvo-l-150-h.html",
                "https://www.machineryzone.com/used/wheeled-loader/45831541/volvo-l-150-h-new-2025.html",
                "https://www.machineryzone.com/used/wheeled-loader/45684512/volvo-l150h.html",
                "https://www.machineryzone.com/new/wheeled-loader/45399913/volvo-l150h-2023-new-unused-ce-bss-cdc-optishift-hydr-qc.html",
                "https://www.machineryzone.com/new/wheeled-loader/45399870/volvo-l150h-2022-new-unused-02-non-ce-gp-bucket-aircon.html",
                "https://www.machineryzone.com/used/wheeled-loader/44419847/volvo-l-150-h-new-unused-2023.html",
                "https://www.machineryzone.com/used/wheeled-loader/44400669/volvo-l-150h.html",
                "https://www.machineryzone.com/used/wheeled-loader/44387095/volvo-l-150-h.html",
                "https://www.machineryzone.com/used/wheeled-loader/44387076/volvo-l-150-h.html"
              ]
            },
            {
              "title": "Used Volvo Wheel Loader for sale - IronPlanet",
              "description": "2017 Volvo L150H Wheel Loader. Meter: 29,422 hrs. Dominican Republic. (2,175 mi away). Buy Now. US $100,000.",
              "url": "https://www.ironplanet.com/Volvo-Wheel+Loader",
              "metadata": {
                "description": "Buy used Wheel Loaders from Volvo, Cat, Komatsu, John Deere, AGT, Case and more. Buy with confidence with our IronClad Assurance&reg;.",
                "language": "en",
                "title": "Volvo  Wheel Loader For Sale | IronPlanet",
                "name": "Volvo  Wheel Loader For Sale | IronPlanet",
                "viewport": "width=device-width,initial-scale=1.0",
                "keywords": "used Wheel Loaders, Wheel Loaders for sale, Volvo, Cat, Komatsu, John Deere, AGT, Case for sale, inspection, guarantee, Construction, Forestry, heavy equipment, Wheel Loaders auctions, buy Wheel Loaders",
                "scrapeId": "55f757eb-f45c-4010-9380-f8d609b73e70",
                "sourceURL": "https://www.ironplanet.com/Volvo-Wheel+Loader",
                "url": "https://www.ironplanet.com/Volvo-Wheel+Loader",
                "statusCode": 200,
                "contentType": "text/html; charset=UTF-8",
                "proxyUsed": "basic",
                "cacheState": "miss"
              },
              "links": [
                "https://www.ironplanet.com/Volvo-Wheel+Loader#content",
                "http://www.ironplanet.com/jsp/equip/auction.jsp?groupId=105839&kwtag=motd",
                "https://www.ironplanet.com/Volvo-Wheel+Loader",
                "https://www.ironplanet.com/?h=",
                "https://www.ironplanet.com/Wheel+Loaders",
                "https://www.ironplanet.com/Volvo-Wheel+Loader#",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&anyType=1",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&fp=D",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&fp=A",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&fp=L",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&fp=S",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&fp=B",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&fp=M",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&ica=N",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&ica=Y",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L105",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L110H",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L120",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L120D",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L120E",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L120F",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L120H",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L150E",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L150H",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L180D",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L180F",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L180H",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L20F",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L220+F",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L220E",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L220F",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L220G",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L220H",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L25F",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L25F-Z",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L260H",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L30+G2",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L30B-Z%2FX",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L30B-ZX",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L30G",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L350F",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L35B",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L35B-Z",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L35G",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L35GS",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L45F-TP",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L50D",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L50F-TP",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L50G",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L60E",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L60H",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L70D",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L70F",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L70H",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L90E",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L90F",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L90G",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L90H",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-AR",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-AZ",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-CA",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-CO",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-FL",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-GA",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-IL",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-KS",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-MA",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-MD",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-MI",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-MN",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-NC",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-NM",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-OH",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-PA",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-TX",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-UT",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-WI",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=CAN",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=CAN-AB",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=CAN-BC",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=CAN-ON",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=CAN-QC",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=AUS",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=AUS-NSW",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=AUS-WA",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=DOM",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=EUR",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=EUR-ESP",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=EUR-FRA",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=EUR-GBR",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=EUR-NLD",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=EUR-SWE",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=PAN",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&yr=2020",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&yr=2015",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&yr=2010",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&yr=2000",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&yr=1900",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_us=-1",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_us=5000",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_us=10000",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_us=50000",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_us=100000",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_eu=-1",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_eu=100000",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_can=-1",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_can=100000",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&ms=I",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&ms=M",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&ms=R",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&ms=S",
                "https://www.ironplanet.com/jsp/acct/saved_search.jsp",
                "javascript:void(0);",
                "https://www.ironplanet.com/jsp/s/search.ips?m=Volvo&t=12918&sm=0",
                "https://www.ironplanet.com/jsp/s/search.ips?mode=2&sm=0&m=Volvo&t=12918",
                "https://www.ironplanet.com/jsp/s/search.ips?mode=1&sm=0&m=Volvo&t=12918",
                "https://www.ironplanet.com/jsp/s/search.ips?mode=3&sm=0&m=Volvo&t=12918",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918",
                "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&fp=",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2000-Volvo-L70D-Wheel-Loader-Colorado/13179581?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=1&hitprm=&pnLink=yes",
                "javascript:watchItem('13179581', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2001-Volvo-L70D-Wheel-Loader-Pennsylvania/13497086?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.5&hitprm=&pnLink=yes",
                "javascript:watchItem('13497086', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2012-Volvo-L90G-Wheel-Loader-Texas/11912883?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.33333&hitprm=&pnLink=yes",
                "javascript:watchItem('11912883', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2004-Volvo-L220E-Wheel-Loader-Illinois/13385996?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.25&hitprm=&pnLink=yes",
                "javascript:watchItem('13385996', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2005-Volvo-L220E-Wheel-Loader-Wisconsin/13425992?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.2&hitprm=&pnLink=yes",
                "javascript:watchItem('13425992', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L70H-Wheel-Loader-Illinois/13366633?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.16667&hitprm=&pnLink=yes",
                "javascript:watchItem('13366633', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2015-Volvo-L35GS-Wheel-Loader-Wisconsin/13408920?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.14286&hitprm=&pnLink=yes",
                "javascript:watchItem('13408920', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2007-Volvo-L90F-Wheel-Loader-Minnesota/11912834?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.125&hitprm=&pnLink=yes",
                "javascript:watchItem('11912834', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2019-Volvo-L120H-Wheel-Loader-Texas/12657406?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.11111&hitprm=&pnLink=yes",
                "javascript:watchItem('12657406', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2012-Volvo-L90G-Wheel-Loader-Utah/13033661?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.1&hitprm=&pnLink=yes",
                "javascript:watchItem('13033661', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2015-Volvo-L90H-Wheel-Loader-Arizona/13033659?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.09091&hitprm=&pnLink=yes",
                "javascript:watchItem('13033659', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2014-Volvo-L50G-Wheel-Loader-Florida/13039087?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.08333&hitprm=&pnLink=yes",
                "javascript:watchItem('13039087', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2020-Volvo-L150H-Wheel-Loader-Florida/13160230?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.07692&hitprm=&pnLink=yes",
                "javascript:watchItem('13160230', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2014-Volvo-L90G-Wheel-Loader-California/13033654?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.07143&hitprm=&pnLink=yes",
                "javascript:watchItem('13033654', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2012-Volvo-L50F-TP-Wheel-Loader-California/13537668?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.06667&hitprm=&pnLink=yes",
                "javascript:watchItem('13537668', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2012-Volvo-L90G-Wheel-Loader-California/13033660?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.0625&hitprm=&pnLink=yes",
                "javascript:watchItem('13033660', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2014-Volvo-L90G-Wheel-Loader-California/13033651?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.05882&hitprm=&pnLink=yes",
                "javascript:watchItem('13033651', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2015-Volvo-L90H-Wheel-Loader-California/13033652?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.05556&hitprm=&pnLink=yes",
                "javascript:watchItem('13033652', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L220H-Wheel-Loader-Colorado/13285344?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.05263&hitprm=&pnLink=yes",
                "javascript:watchItem('13285344', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2014-Volvo-L350F-Wheel-Loader-Ontario/13216900?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.05&hitprm=&pnLink=yes",
                "javascript:watchItem('13216900', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2014-Volvo-L350F-Wheel-Loader-British-Columbia/12546907?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.04762&hitprm=&pnLink=yes",
                "javascript:watchItem('12546907', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2004-Volvo-L90E-Wheel-Loader-Massachusetts/13594800?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.04545&hitprm=&pnLink=yes",
                "javascript:watchItem('13594800', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-Volvo-L120D-Wheel-Loader-Florida/13611730?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.04348&hitprm=&pnLink=yes",
                "javascript:watchItem('13611730', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-Volvo-L90G-Wheel-Loader-New-Mexico/13033650?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.04167&hitprm=&pnLink=yes",
                "javascript:watchItem('13033650', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-Volvo-L90G-Wheel-Loader-Minnesota/13033657?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.04&hitprm=&pnLink=yes",
                "javascript:watchItem('13033657', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2004-Volvo-L90E-Wheel-Loader-Florida/13611731?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.03846&hitprm=&pnLink=yes",
                "javascript:watchItem('13611731', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2005-Volvo-L90E-Wheel-Loader-Florida/13611736?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.03704&hitprm=&pnLink=yes",
                "javascript:watchItem('13611736', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-Volvo-L90G-Wheel-Loader-North-Carolina/12970685?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.03571&hitprm=&pnLink=yes",
                "javascript:watchItem('12970685', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-Volvo-L90G-Wheel-Loader-California/13033656?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.03448&hitprm=&pnLink=yes",
                "javascript:watchItem('13033656', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2012-Volvo-L90G-Wheel-Loader-Kansas/13033662?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.03333&hitprm=&pnLink=yes",
                "javascript:watchItem('13033662', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-Volvo-L60E-Wheel-Loader-Arkansas/13504182?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.03226&hitprm=&pnLink=yes",
                "javascript:watchItem('13504182', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2012-Volvo-L90G-Wheel-Loader-%28Inoperable%29-California/13033655?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.03125&hitprm=&pnLink=yes",
                "javascript:watchItem('13033655', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2014-Volvo-L105-Wheel-Loader-New-South-Wales/13083326?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.0303&hitprm=&pnLink=yes",
                "javascript:watchItem('13083326', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L150H-Wheel-Loader-DOM/13150000?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02941&hitprm=&pnLink=yes",
                "javascript:watchItem('13150000', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L220H-Wheel-Loader-DOM/13150001?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02857&hitprm=&pnLink=yes",
                "javascript:watchItem('13150001', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L150H-Wheel-Loader-PAN/9314911?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02778&hitprm=&pnLink=yes",
                "javascript:watchItem('9314911', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L150H-Wheel-Loader-PAN/9314912?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02703&hitprm=&pnLink=yes",
                "javascript:watchItem('9314912', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L150H-Wheel-Loader-ESP/12982006?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02632&hitprm=&pnLink=yes",
                "javascript:watchItem('12982006', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2020-Volvo-L90F-Wheel-Loader-Western-Australia/13459026?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02564&hitprm=&pnLink=yes",
                "javascript:watchItem('13459026', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2021-Volvo-L180H-Wheel-Loader-Western-Australia/12176274?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.025&hitprm=&pnLink=yes",
                "javascript:watchItem('12176274', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2021-Volvo-L260H-Wheel-Loader-Western-Australia/12176275?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02439&hitprm=&pnLink=yes",
                "javascript:watchItem('12176275', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L220H-Wheel-Loader-PAN/12789586?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02381&hitprm=&pnLink=yes",
                "javascript:watchItem('12789586', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L150H-Wheel-Loader-PAN/12789585?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02326&hitprm=&pnLink=yes",
                "javascript:watchItem('12789585', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2004-Volvo-L150E-Wheel-Loader-SWE/13623336?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02273&hitprm=&pnLink=yes",
                "javascript:watchItem('13623336', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2000-Volvo-L180D-Wheel-Loader-SWE/13623335?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02222&hitprm=&pnLink=yes",
                "javascript:watchItem('13623335', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2007-Volvo-L220-F-Wheel-Loader-SWE/13623334?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02174&hitprm=&pnLink=yes",
                "javascript:watchItem('13623334', false);",
                "https://www.ironplanet.com/for-sale/Wheel-Loaders-2008-Volvo-L180F-Wheel-Loader-SWE/13617536?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02128&hitprm=&pnLink=yes",
                "javascript:watchItem('13617536', false);",
                "https://www.rbauction.com/2020-volvo-l70f-wheel-loader?invId=15506404&id=ci&auction=australia-aus-2025305&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
                "https://www.rbauction.com/2015-volvo-l20f-wheel-loader?invId=15633816&id=ci&auction=fort-worth-tx-2025168&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
                "https://www.rbauction.com/2018-volvo-l70h-wheel-loader?invId=15633509&id=ci&auction=denver-co-2025154&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
                "https://www.rbauction.com/2003-volvo-l150e-inoperable-wheel-loader?invId=15581268&id=ci&auction=denver-co-2025154&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
                "https://www.rbauction.com/2008-volvo-l220f-wheel-loader?invId=15588823&id=ci&auction=minneapolis-mn-2025380&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
                "https://www.rbauction.com/2005-volvo-l120e-wheel-loader?invId=15548368&id=ci&auction=minneapolis-mn-2025177&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
                "https://www.rbauction.com/2018-volvo-l70h-wheel-loader?invId=15637066&id=ci&auction=columbus-oh-2025145&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
                "https://www.rbauction.com/2019-volvo-l70h-wheel-loader?invId=15636698&id=ci&auction=columbus-oh-2025145&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
                "https://www.rbauction.com/2018-volvo-l70h-wheel-loader?invId=15637315&id=ci&auction=columbus-oh-2025145&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
                "https://www.rbauction.com/2019-volvo-l70h-wheel-loader?invId=15636841&id=ci&auction=atlanta-ga-2025325&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
                "https://www.rbauction.com/2015-volvo-l150h-wheel-loader?invId=15584158&id=ci&auction=denver-co-2025154&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
                "https://www.rbauction.com/2003-volvo-l90e-inoperable-wheel-loader?invId=15541117&id=ci&auction=phoenix-az-2025185&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
                "https://www.rbauction.com/2017-volvo-l90h-wheel-loader?invId=15572941&id=ci&auction=orlando-fl-2025359&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
                "https://www.ironplanet.com/jsp/s/search.ips?pstart=60&sm=0&m=Volvo&t=12918",
                "https://www.ironplanet.com/how-to-sell?kwtag=sell-section",
                "https://www.ironplanet.com/pop/terms_page.jsp?id=4&noh1=yes&kwtag=footer#section9-ps",
                "https://www.ironplanet.com/jsp/acct/watch_list.jsp"
              ]
            }
          ],
          "warning": "No content found in search results"
        }
      }
    ],
    "split out data1": [
      {
        "json": {
          "title": "VOLVO L150H Construction Equipment For Sale - Machinery Trader",
          "description": "The VOLVO L150H Wheel Loaders ranges in price from as low as $84,889 to $500,000 based on MachineryTrader's market leading data.",
          "url": "https://www.machinerytrader.com/listings/for-sale/volvo/l150h/construction-equipment?srsltid=AfmBOoqNqdEcOlpiN6cwrKZUEVV3S5pvadrmHAIu7h_Bd4W7ai7Kj0Ax",
          "metadata": {
            "ogLocale": "en_US",
            "ogSiteName": "MachineryTrader.com",
            "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0",
            "referrer": "unsafe-url",
            "ogUrl": "https://www.machinerytrader.com/listings/for-sale/volvo/l150h/construction-equipment",
            "apple-itunes-app": "app-id=380184450",
            "og:site_name": "MachineryTrader.com",
            "og:image": "https://media.sandhills.com/img.axd?id=9071260592&wid=4326182721&rwl=False&p=&ext=&w=350&h=220&t=&lp=&c=True&wt=False&sz=Max&rt=0&checksum=iHlqkaqn4t%2bDzDJMy1qcYpdCjR2tfEFWfOXwW37BURg%3d",
            "ogDescription": "Browse a wide selection of new and used VOLVO L150H Construction Equipment for sale near you at MachineryTrader.com",
            "ogTitle": "VOLVO L150H Construction Equipment For Sale | MachineryTrader.com",
            "title": "VOLVO L150H Construction Equipment For Sale | MachineryTrader.com",
            "ogImage": "https://media.sandhills.com/img.axd?id=9071260592&wid=4326182721&rwl=False&p=&ext=&w=350&h=220&t=&lp=&c=True&wt=False&sz=Max&rt=0&checksum=iHlqkaqn4t%2bDzDJMy1qcYpdCjR2tfEFWfOXwW37BURg%3d",
            "description": "Browse a wide selection of new and used VOLVO L150H Construction Equipment for sale near you at MachineryTrader.com",
            "robots": "noarchive",
            "language": "en",
            "favicon": "https://media.sandhills.com/cdn/Images/Icons/Favicons/Machinery.ico?v=3",
            "og:type": "website",
            "og:title": "VOLVO L150H Construction Equipment For Sale | MachineryTrader.com",
            "og:url": "https://www.machinerytrader.com/listings/for-sale/volvo/l150h/construction-equipment",
            "og:description": "Browse a wide selection of new and used VOLVO L150H Construction Equipment for sale near you at MachineryTrader.com",
            "og:locale": "en_US",
            "scrapeId": "21690054-f9da-446c-99d5-081ebcf9bb53",
            "sourceURL": "https://www.machinerytrader.com/listings/for-sale/volvo/l150h/construction-equipment?srsltid=AfmBOoqNqdEcOlpiN6cwrKZUEVV3S5pvadrmHAIu7h_Bd4W7ai7Kj0Ax",
            "url": "https://www.machinerytrader.com/listings/for-sale/volvo/l150h/construction-equipment",
            "statusCode": 200,
            "contentType": "text/html; charset=utf-8",
            "proxyUsed": "basic",
            "cacheState": "miss"
          },
          "links": [
            "https://www.machinerytrader.com/listings/for-sale/volvo/l150h/construction-equipment#main-content",
            "https://www.machinerytrader.com/listings/for-sale/volvo/l150h/construction-equipment#filters",
            "https://www.machinerytrader.com/listings/search?Manufacturer=VOLVO&Model=L150H&ScopeCategoryIDs=4%7C27%7C28%7C464%7C151000&sort=1&print=1",
            "https://www.machinerytrader.com/DataAnalysis/ParseHighLowAverage?ListingType=For%20Retail%7CFor%20Rent%7CFor%20Lease%7CUpcoming%20Auctions&ManufacturerName=VOLVO&ModelName=L150H&IsModelGroup=False&ScopeCategoryIDs=4%7C27%7C28%7C464%7C151000",
            "https://www.machinerytrader.com/parts/search/volvo/l150h?Manufacturer=VOLVO&Model=L150H",
            "https://www.machinerytrader.com/blog/construction-equipment-news/2025/03/volvo-reveals-new-fuel-saving-26-to-50-ton-hybrid-excavators",
            "https://www.machinerytrader.com/blog/construction-equipment-news/2024/06/newest-volvo-midsize-and-large-excavators-offer-better-fuel-economy-and-operator-comfort",
            "https://www.machinerytrader.com/blog/construction-equipment-news/2024/06/volvo-ce-debuts-new-l120-electric-wheel-loader",
            "https://www.auctionvalues.com/?gtmlt=1",
            "https://www.equipmentfacts.com/listings/construction-equipment/auctions/online/245532407?gtmlt=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D14183115/Machinery/4/1060/245532407",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D14183115/Machinery/4/1060/245532407",
            "tel:+13308454411",
            "https://www.machinerytrader.com/listing/for-sale/234799821/2019-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/32/ListPage/D17010241/Machinery/4/1060/234799821",
            "tel:+17807770000",
            "https://semlerfarms.com/",
            "https://www.machinerytrader.com/listing/for-sale/238992517/2024-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D28525584/Machinery/4/1060/238992517",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D28525584/Machinery/4/1060/238992517",
            "tel:+14072325359",
            "http://www.altaused.com/",
            "https://www.machinerytrader.com/listing/for-sale/238842099/2021-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17169033/Machinery/4/1060/238842099?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17169033/Machinery/4/1060/238842099",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17169033/Machinery/4/1060/238842099",
            "tel:+15099729668",
            "https://www.pacwestmachinery.com/",
            "https://www.machinerytrader.com/listing/for-sale/233289019/2020-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/233289019?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/233289019",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17994737/Machinery/4/1060/233289019",
            "tel:+18173201995",
            "http://www.romcoused.com/",
            "https://www.machinerytrader.com/listing/for-sale/241821097/2015-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D12852631/Machinery/4/1060/241821097?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D12852631/Machinery/4/1060/241821097",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D12852631/Machinery/4/1060/241821097",
            "tel:+17655760022",
            "http://www.a-1equipment.com/",
            "https://www.machinerytrader.com/listing/for-sale/243283403/2025-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283403",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283403",
            "tel:+12626077016",
            "http://www.aringequipment.com/",
            "https://www.machinerytrader.com/listing/for-sale/243283325/2025-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283325",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283325",
            "https://www.machinerytrader.com/listing/for-sale/240273469/2024-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29137711/Machinery/4/1060/240273469?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29137711/Machinery/4/1060/240273469",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D29137711/Machinery/4/1060/240273469",
            "tel:+17046593306",
            "http://www.ascendummachineryused.com/",
            "https://www.machinerytrader.com/listing/for-sale/242296195/2024-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16352304/Machinery/4/1060/242296195",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16352304/Machinery/4/1060/242296195",
            "tel:+14026257250",
            "http://www.wiseheavyequipment.com/",
            "https://www.machinerytrader.com/listing/for-sale/235333377/2024-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333377",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333377",
            "https://www.machinerytrader.com/listing/for-sale/235333327/2024-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333327",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333327",
            "https://www.machinerytrader.com/listing/for-sale/235246679/2024-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D20756023/Machinery/4/1060/235246679",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D20756023/Machinery/4/1060/235246679",
            "tel:+16056245785",
            "https://www.machinerytrader.com/listing/for-sale/238556165/2023-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D22210546/Machinery/4/1060/238556165",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D22210546/Machinery/4/1060/238556165",
            "tel:+18887241525",
            "http://www.nussinventory.com/",
            "https://www.machinerytrader.com/listing/for-sale/243783905/2021-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D28525584/Machinery/4/1060/243783905?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D28525584/Machinery/4/1060/243783905",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D28525584/Machinery/4/1060/243783905",
            "tel:+12484309007",
            "https://www.machinerytrader.com/listing/for-sale/241344077/2020-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/241344077?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/241344077",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17994737/Machinery/4/1060/241344077",
            "https://www.machinerytrader.com/listing/for-sale/240816837/2020-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29240838/Machinery/4/1060/240816837?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29240838/Machinery/4/1060/240816837",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D29240838/Machinery/4/1060/240816837",
            "tel:+18138167060",
            "https://www.machinerytrader.com/listing/for-sale/241400529/2019-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16168482/Machinery/4/1060/241400529",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16168482/Machinery/4/1060/241400529",
            "tel:+17167802782",
            "https://www.machinerytrader.com/listing/for-sale/225394497/2018-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17661035/Machinery/4/1060/225394497?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17661035/Machinery/4/1060/225394497",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17661035/Machinery/4/1060/225394497",
            "tel:+18643053528",
            "http://www.gearheadzus.com/",
            "https://www.machinerytrader.com/listing/for-sale/233338445/2019-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/32/ListPage/D17010241/Machinery/4/1060/233338445",
            "https://www.machinerytrader.com/listing/for-sale/243138465/2025-volvo-l150h-wheel-loaders",
            "tel:+494504790000",
            "https://www.machinerytrader.com/listing/for-sale/244716905/2024-volvo-l150h-wheel-loaders",
            "tel:+31418788101",
            "https://www.machinerytrader.com/listing/for-sale/244889943/2023-volvo-l150h-wheel-loaders",
            "tel:+31738080404",
            "https://www.machinerytrader.com/listing/for-sale/244191977/2023-volvo-l150h-wheel-loaders",
            "https://www.machinerytrader.com/listing/for-sale/244191975/2023-volvo-l150h-wheel-loaders",
            "https://www.machinerytrader.com/listing/for-sale/244223847/2022-volvo-l150h-wheel-loaders",
            "https://www.machinerytrader.com/listing/for-sale/244223845/2022-volvo-l150h-wheel-loaders",
            "https://www.machinerytrader.com/listing/for-sale/244191971/2022-volvo-l150h-wheel-loaders",
            "https://www.machinerytrader.com/drilldown-search/search/?Manufacturer=VOLVO&Model=L150H&internalLinkGroup=Condition%7CGrossVehicleWeightRating%7CDrive&dbt=WLDB",
            "https://www.gocurrency.com/legal/",
            "https://vip.machinerytrader.com/",
            "https://www.machinerytrader.com/watchlist",
            "https://www.machinerytrader.com/email-alerts",
            "https://www.machinerytrader.com/info/cookies-policy",
            "https://www.machinerytrader.com/info/privacy-policy",
            "https://www.microsoft.com/en-us/edge",
            "https://www.google.com/chrome",
            "https://www.mozilla.org/en-US/firefox/browsers/"
          ]
        }
      },
      {
        "json": {
          "title": "VOLVO L150 Construction Equipment For Sale | MachineryTrader.com",
          "description": "The VOLVO L150 Wheel Loaders ranges in price from as low as $19,000 to $500,000 based on MachineryTrader's market leading data.",
          "url": "https://www.machinerytrader.com/listings/for-sale/volvo/l150/construction-equipment?srsltid=AfmBOopclMXXLNqTFqemdNGFl6pTdRlNrj5MWjoYX01fLxQWYsYjBhy0",
          "metadata": {
            "og:title": "VOLVO L150 Construction Equipment For Sale | MachineryTrader.com",
            "favicon": "https://media.sandhills.com/cdn/Images/Icons/Favicons/Machinery.ico?v=3",
            "robots": "noarchive",
            "ogUrl": "https://www.machinerytrader.com/listings/for-sale/volvo/l150/construction-equipment",
            "viewport": "width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0",
            "ogDescription": "Browse a wide selection of new and used VOLVO L150 Construction Equipment for sale near you at MachineryTrader.com",
            "referrer": "unsafe-url",
            "og:type": "website",
            "og:description": "Browse a wide selection of new and used VOLVO L150 Construction Equipment for sale near you at MachineryTrader.com",
            "ogImage": "https://media.sandhills.com/img.axd?id=9071351159&wid=4326182721&rwl=False&p=&ext=&w=350&h=220&t=&lp=&c=True&wt=False&sz=Max&rt=0&checksum=PEA0KFAp2hn2uWq6%2fhNKzARmuGg%2bN5Hzqp1qGoVYXF0%3d",
            "ogSiteName": "MachineryTrader.com",
            "og:site_name": "MachineryTrader.com",
            "language": "en",
            "og:image": "https://media.sandhills.com/img.axd?id=9071351159&wid=4326182721&rwl=False&p=&ext=&w=350&h=220&t=&lp=&c=True&wt=False&sz=Max&rt=0&checksum=PEA0KFAp2hn2uWq6%2fhNKzARmuGg%2bN5Hzqp1qGoVYXF0%3d",
            "ogLocale": "en_US",
            "og:url": "https://www.machinerytrader.com/listings/for-sale/volvo/l150/construction-equipment",
            "description": "Browse a wide selection of new and used VOLVO L150 Construction Equipment for sale near you at MachineryTrader.com",
            "ogTitle": "VOLVO L150 Construction Equipment For Sale | MachineryTrader.com",
            "title": "VOLVO L150 Construction Equipment For Sale | MachineryTrader.com",
            "apple-itunes-app": "app-id=380184450",
            "og:locale": "en_US",
            "scrapeId": "8ffd3c3f-0446-469c-84ae-54da795f7064",
            "sourceURL": "https://www.machinerytrader.com/listings/for-sale/volvo/l150/construction-equipment?srsltid=AfmBOopclMXXLNqTFqemdNGFl6pTdRlNrj5MWjoYX01fLxQWYsYjBhy0",
            "url": "https://www.machinerytrader.com/listings/for-sale/volvo/l150/construction-equipment",
            "statusCode": 200,
            "contentType": "text/html; charset=utf-8",
            "proxyUsed": "basic",
            "cacheState": "miss"
          },
          "links": [
            "https://www.machinerytrader.com/listings/for-sale/volvo/l150/construction-equipment#main-content",
            "https://www.machinerytrader.com/listings/for-sale/volvo/l150/construction-equipment#filters",
            "https://www.machinerytrader.com/listings/search?Manufacturer=VOLVO&ModelGroup=L150&ScopeCategoryIDs=4%7C27%7C28%7C464%7C151000&sort=1&print=1",
            "https://www.machinerytrader.com/DataAnalysis/ParseHighLowAverage?ListingType=For%20Retail%7CFor%20Rent%7CFor%20Lease%7CUpcoming%20Auctions&ManufacturerName=VOLVO&ModelName=L150&IsModelGroup=True&ScopeCategoryIDs=4%7C27%7C28%7C464%7C151000",
            "https://www.machinerytrader.com/parts/search/volvo/l150?Manufacturer=VOLVO&Model=L150",
            "https://www.machinerytrader.com/blog/construction-equipment-news/2025/03/volvo-reveals-new-fuel-saving-26-to-50-ton-hybrid-excavators",
            "https://www.machinerytrader.com/blog/construction-equipment-news/2024/06/newest-volvo-midsize-and-large-excavators-offer-better-fuel-economy-and-operator-comfort",
            "https://www.machinerytrader.com/blog/construction-equipment-news/2024/06/volvo-ce-debuts-new-l120-electric-wheel-loader",
            "https://www.auctionvalues.com/?gtmlt=1",
            "https://www.equipmentfacts.com/listings/construction-equipment/auctions/online/245558405?gtmlt=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D14156275/Machinery/4/1060/245558405",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D14156275/Machinery/4/1060/245558405",
            "https://bid.equipmentfacts.com/AuctionCastBoard/Event/244447629",
            "tel:+19152293559",
            "https://www.machinerytrader.com/listing/for-sale/234799821/2019-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/32/ListPage/D17010241/Machinery/4/1060/234799821",
            "tel:+17807770000",
            "https://semlerfarms.com/",
            "https://www.machinerytrader.com/listing/for-sale/244272593/2014-volvo-l150g-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D31868203/Machinery/4/1060/244272593?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D31868203/Machinery/4/1060/244272593",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D31868203/Machinery/4/1060/244272593",
            "tel:+14323052074",
            "https://www.machinerytrader.com/listing/for-sale/238992517/2024-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D28525584/Machinery/4/1060/238992517",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D28525584/Machinery/4/1060/238992517",
            "tel:+14072325359",
            "http://www.altaused.com/",
            "https://www.machinerytrader.com/listing/for-sale/228758847/1992-volvo-l150-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16404354/Machinery/4/1060/228758847?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16404354/Machinery/4/1060/228758847",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16404354/Machinery/4/1060/228758847",
            "tel:+12083625163",
            "http://www.boisewestequip.com/",
            "https://www.machinerytrader.com/listing/for-sale/238842099/2021-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17169033/Machinery/4/1060/238842099?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17169033/Machinery/4/1060/238842099",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17169033/Machinery/4/1060/238842099",
            "tel:+15099729668",
            "https://www.pacwestmachinery.com/",
            "https://www.machinerytrader.com/listing/for-sale/233289019/2020-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/233289019?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/233289019",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17994737/Machinery/4/1060/233289019",
            "tel:+18173201995",
            "http://www.romcoused.com/",
            "https://www.machinerytrader.com/listing/for-sale/241821097/2015-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D12852631/Machinery/4/1060/241821097?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D12852631/Machinery/4/1060/241821097",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D12852631/Machinery/4/1060/241821097",
            "tel:+17655760022",
            "http://www.a-1equipment.com/",
            "https://www.machinerytrader.com/listing/for-sale/244886943/1995-volvo-l150-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D9916499/Machinery/4/1060/244886943?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D9916499/Machinery/4/1060/244886943",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D9916499/Machinery/4/1060/244886943",
            "tel:+17174007051",
            "http://www.kurtztrading.com/",
            "https://www.machinerytrader.com/listing/for-sale/227739257/1994-volvo-l150-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16741821/Machinery/4/1060/227739257?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16741821/Machinery/4/1060/227739257",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16741821/Machinery/4/1060/227739257",
            "tel:+18438608438",
            "http://www.palmettomachinery.com/",
            "https://www.machinerytrader.com/listing/for-sale/242378995/2006-volvo-l150e-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D8606009/Machinery/4/1060/242378995?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D8606009/Machinery/4/1060/242378995",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D8606009/Machinery/4/1060/242378995",
            "tel:+18165267032",
            "http://www.summitheavyequipment.com/",
            "https://www.machinerytrader.com/listing/for-sale/242813669/2006-volvo-l150e-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D32535306/Machinery/4/1060/242813669?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D32535306/Machinery/4/1060/242813669",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D32535306/Machinery/4/1060/242813669",
            "tel:+15864675012",
            "https://www.machinerytrader.com/listing/for-sale/224439547/2004-volvo-l150e-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17130/Machinery/4/1060/224439547?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17130/Machinery/4/1060/224439547",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17130/Machinery/4/1060/224439547",
            "tel:+18884771713",
            "https://www.hesequipment.com/default.htm",
            "https://www.machinerytrader.com/listing/for-sale/32824507/2009-volvo-l150f-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D363065/Machinery/4/1060/32824507",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D363065/Machinery/4/1060/32824507",
            "tel:+16036418608",
            "http://www.josephequipment.net/",
            "https://www.machinerytrader.com/listing/for-sale/245556649/2012-volvo-l150g-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D13676065/Machinery/4/1060/245556649?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D13676065/Machinery/4/1060/245556649",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D13676065/Machinery/4/1060/245556649",
            "tel:+17174007180",
            "http://www.leonequipment.com/",
            "https://www.machinerytrader.com/listing/for-sale/243283403/2025-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283403",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283403",
            "tel:+12626077016",
            "http://www.aringequipment.com/",
            "https://www.machinerytrader.com/listing/for-sale/243283325/2025-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283325",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/243283325",
            "https://www.machinerytrader.com/listing/for-sale/240273469/2024-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29137711/Machinery/4/1060/240273469?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29137711/Machinery/4/1060/240273469",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D29137711/Machinery/4/1060/240273469",
            "tel:+17046593306",
            "http://www.ascendummachineryused.com/",
            "https://www.machinerytrader.com/listing/for-sale/242296195/2024-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16352304/Machinery/4/1060/242296195",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16352304/Machinery/4/1060/242296195",
            "tel:+14026257250",
            "http://www.wiseheavyequipment.com/",
            "https://www.machinerytrader.com/listing/for-sale/235333377/2024-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333377",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333377",
            "https://www.machinerytrader.com/listing/for-sale/235333327/2024-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333327",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16425133/Machinery/4/1060/235333327",
            "https://www.machinerytrader.com/listing/for-sale/235246679/2024-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D20756023/Machinery/4/1060/235246679",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D20756023/Machinery/4/1060/235246679",
            "tel:+16056245785",
            "https://www.machinerytrader.com/listing/for-sale/238556165/2023-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D22210546/Machinery/4/1060/238556165",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D22210546/Machinery/4/1060/238556165",
            "tel:+18887241525",
            "http://www.nussinventory.com/",
            "https://www.machinerytrader.com/listing/for-sale/243783905/2021-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D28525584/Machinery/4/1060/243783905?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D28525584/Machinery/4/1060/243783905",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D28525584/Machinery/4/1060/243783905",
            "tel:+12484309007",
            "https://www.machinerytrader.com/listing/for-sale/241344077/2020-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/241344077?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17994737/Machinery/4/1060/241344077",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17994737/Machinery/4/1060/241344077",
            "https://www.machinerytrader.com/listing/for-sale/240816837/2020-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29240838/Machinery/4/1060/240816837?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D29240838/Machinery/4/1060/240816837",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D29240838/Machinery/4/1060/240816837",
            "tel:+18138167060",
            "https://www.machinerytrader.com/listing/for-sale/241400529/2019-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D16168482/Machinery/4/1060/241400529",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D16168482/Machinery/4/1060/241400529",
            "tel:+17167802782",
            "https://www.machinerytrader.com/listing/for-sale/225394497/2018-volvo-l150h-wheel-loaders",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17661035/Machinery/4/1060/225394497?pala=1",
            "https://analyticstracking.sandhills.com/Financing/Machinery/178/ListPage/D17661035/Machinery/4/1060/225394497",
            "https://analyticstracking.sandhills.com/Shipping/Machinery/178/ListPage/D17661035/Machinery/4/1060/225394497",
            "tel:+18643053528",
            "http://www.gearheadzus.com/",
            "https://www.machinerytrader.com/drilldown-search/search/?Manufacturer=VOLVO&ModelGroup=L150&internalLinkGroup=Condition%7CGrossVehicleWeightRating%7CDrive&dbt=WLDB",
            "https://www.gocurrency.com/legal/",
            "https://vip.machinerytrader.com/",
            "https://www.machinerytrader.com/watchlist",
            "https://www.machinerytrader.com/email-alerts",
            "https://www.machinerytrader.com/info/cookies-policy",
            "https://www.machinerytrader.com/info/privacy-policy",
            "https://www.microsoft.com/en-us/edge",
            "https://www.google.com/chrome",
            "https://www.mozilla.org/en-US/firefox/browsers/"
          ]
        }
      },
      {
        "json": {
          "title": "Volvo L150H Equipment For Sale",
          "description": "Looking to buy a Volvo L150h equipment? Browse our extensive inventory of new and used Volvo L150h equipment from local Volvo dealers and private sellers.",
          "url": "https://www.equipmenttrader.com/Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0",
          "metadata": {
            "format-detection": "telephone=no",
            "og:site_name": "Equipment Trader",
            "og:url": "https://www.equipmenttrader.com/Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0",
            "referrer": "unsafe-url",
            "description": "Volvo L150H Equipment For Sale: 50 Equipment Near Me - Find New and Used Volvo L150H Equipment on Equipment Trader.",
            "twitter:title": "Volvo L150H Equipment For Sale - Volvo L150H Equipment - Equipment Trader",
            "twitter:creator": "@equipmenttraderblog",
            "ogTitle": "Volvo L150H Equipment For Sale - Volvo L150H Equipment - Equipment Trader",
            "ogImage": "https://cdn-media.tilabs.io/v1/media/684cb1f6ccf8a605a5150bf4.jpg?width=400&height=300&quality=60&bestfit=true&upsize=true&blurBackground=true&blurValue=100",
            "og:description": "Volvo L150H Equipment For Sale: 50 Equipment Near Me - Find New and Used Volvo L150H Equipment on Equipment Trader.",
            "ogDescription": "Volvo L150H Equipment For Sale: 50 Equipment Near Me - Find New and Used Volvo L150H Equipment on Equipment Trader.",
            "twitter:image": "https://cdn-media.tilabs.io/v1/media/684cb1f6ccf8a605a5150bf4.jpg?width=400&height=300&quality=60&bestfit=true&upsize=true&blurBackground=true&blurValue=100",
            "og:image": "https://cdn-media.tilabs.io/v1/media/684cb1f6ccf8a605a5150bf4.jpg?width=400&height=300&quality=60&bestfit=true&upsize=true&blurBackground=true&blurValue=100",
            "apple-itunes-app": "app-id=343382613",
            "com.silverpop.brandeddomains": "www.pages05.net,EquipmentTrader.com",
            "favicon": "https://www.equipmenttrader.com/favicon.ico",
            "language": "en",
            "ogUrl": "https://www.equipmenttrader.com/Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0",
            "HandheldFriendly": "True",
            "copyright": "Copyright 2025 Trader Interactive",
            "title": "Volvo L150H Equipment For Sale - Volvo L150H Equipment - Equipment Trader",
            "og:title": "Volvo L150H Equipment For Sale - Volvo L150H Equipment - Equipment Trader",
            "mobile-web-app-capable": "yes",
            "twitter:url": "https://www.equipmenttrader.com/Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0",
            "twitter:description": "Volvo L150H Equipment For Sale: 50 Equipment Near Me - Find New and Used Volvo L150H Equipment on Equipment Trader.",
            "twitter:site": "EquipmentTrader.com",
            "ogSiteName": "Equipment Trader",
            "twitter:card": "summary",
            "viewport": "width=device-width, maximum-scale=1.0, minimum-scale=1.0, initial-scale=1.0 user-scalable=no",
            "scrapeId": "54b32113-a4e4-4b00-b2c7-2df586f31bb1",
            "sourceURL": "https://www.equipmenttrader.com/Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0",
            "url": "https://www.equipmenttrader.com/Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0",
            "statusCode": 200,
            "proxyUsed": "basic"
          },
          "links": [
            "https://www.equipmenttrader.com/dealers/",
            "https://dealers.equipmenttrader.com/",
            "https://equipmentmediakit.com/",
            "https://www.equipmenttrader.com/locator/",
            "https://www.equipmenttrader.com/sell/",
            "https://www.equipmenttrader.com/listing/2016-VOLVO-L220H-5035302317",
            "https://www.equipmenttrader.com/listing/2017-VOLVO-L110H-5034398491#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2017&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=125000&vin_serial=VCEL110HC0S631256",
            "https://www.equipmenttrader.com/dealergroups/detail/5000001332",
            "https://www.equipmenttrader.com/listing/2023-VOLVO-Attachment-5036569564#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2023&make=VOLVO&model=Attachment&listing_title=Wheels&condition=Used&price=2000&vin_serial=",
            "https://www.equipmenttrader.com/listing/2018-VOLVO-L150H-5033688636#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2018&make=VOLVO&model=L150H&listing_title=Loaders&condition=Used&price=255000&vin_serial=",
            "https://www.equipmenttrader.com/dealergroups/detail/5000001166",
            "https://www.equipmenttrader.com/listing/-VOLVO-Attachment-5031402304#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=&make=VOLVO&model=Attachment&listing_title=Cab&condition=Used&price=1900&vin_serial=",
            "https://www.equipmenttrader.com/listing/2012-Volvo-L150G-5030917722#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2012&make=Volvo&model=L150G&listing_title=Loaders&condition=Used&price=48750&vin_serial=",
            "https://www.equipmenttrader.com/listing/2017-VOLVO-L110H-5035343587#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2017&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=72000&vin_serial=",
            "https://www.equipmenttrader.com/listing/2019-VOLVO-L180H-5034043487#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2019&make=VOLVO&model=L180H&listing_title=Loaders&condition=Used&price=143000&vin_serial=",
            "https://www.equipmenttrader.com/listing/1995-VOLVO-L150-5036486053#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=1995&make=VOLVO&model=L150&listing_title=Loaders&condition=Used&price=29500&vin_serial=L150V60422",
            "https://www.equipmenttrader.com/listing/-VOLVO-Attachment-5033525186#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=&make=VOLVO&model=Attachment&listing_title=Bucket&condition=Used&price=8400&vin_serial=",
            "https://www.equipmenttrader.com/listing/-VOLVO-Attachment-5033525210#sid=860987",
            "https://www.equipmenttrader.com/listing/2015-VOLVO-L150H-5027911894#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2015&make=VOLVO&model=L150H&listing_title=Loaders&condition=Used&price=115000&vin_serial=",
            "https://www.equipmenttrader.com/dealergroups/detail/5000002032",
            "https://www.equipmenttrader.com/listing/2016-VOLVO-L220H-5035302317#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2016&make=VOLVO&model=L220H&listing_title=Loaders&condition=Used&price=79500&vin_serial=",
            "https://www.equipmenttrader.com/listing/-volvo-Attachment-5033525060#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=&make=volvo&model=Attachment&listing_title=Forklift%20Attachments&condition=Used&price=8800&vin_serial=15705",
            "https://www.equipmenttrader.com/listing/-volvo-Attachment-5033525929#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=&make=volvo&model=Attachment&listing_title=Forklift%20Attachments&condition=Used&price=8900&vin_serial=15603",
            "https://www.equipmenttrader.com/listing/2025-VOLVO-L150H-5035791892#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2025&make=VOLVO&model=L150H&listing_title=Loaders&condition=New&price=0&vin_serial=VCEL150HT00007512",
            "https://www.equipmenttrader.com/listing/2025-VOLVO-L150H-5035792028#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2025&make=VOLVO&model=L150H&listing_title=Loaders&condition=New&price=0&vin_serial=VCEL150HV00007503",
            "https://www.equipmenttrader.com/listing/2024-VOLVO-L150H-5032411538#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2024&make=VOLVO&model=L150H&listing_title=Loaders&condition=New&price=0&vin_serial=VCEL150HK00007397",
            "https://www.equipmenttrader.com/listing/2024-VOLVO-L150H-5032411541#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2024&make=VOLVO&model=L150H&listing_title=Loaders&condition=New&price=0&vin_serial=VCEL150HJ00007398",
            "https://www.equipmenttrader.com/listing/2016-VOLVO-Attachment-5033052328#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2016&make=VOLVO&model=Attachment&listing_title=Bucket&condition=Used&price=17500&vin_serial=329",
            "https://www.equipmenttrader.com/listing/2004-Volvo-L150E-5033008119#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2004&make=Volvo&model=L150E&listing_title=Loaders&condition=Used&price=37900&vin_serial=",
            "https://www.equipmenttrader.com/dealergroups/detail/5000002333",
            "https://www.equipmenttrader.com/listing/2019-VOLVO-L120H-5032679470#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2019&make=VOLVO&model=L120H&listing_title=Loaders&condition=Used&price=228000&vin_serial=632583",
            "https://www.equipmenttrader.com/listing/-VOLVO-Attachment-5033524609#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=&make=VOLVO&model=Attachment&listing_title=Bucket&condition=Used&price=7500&vin_serial=",
            "https://www.equipmenttrader.com/listing/2017-VOLVO-L110H-5033970988#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2017&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=79500&vin_serial=VCEL110HJ0S63129",
            "https://www.equipmenttrader.com/listing/2015-VOLVO-L110H-5033524660#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2015&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=69500&vin_serial=VCEL110HJF0010402",
            "https://www.equipmenttrader.com/listing/-VOLVO-Attachment-5035775904#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=&make=VOLVO&model=Attachment&listing_title=Coupler&condition=Used&price=7000&vin_serial=",
            "https://www.equipmenttrader.com/dealergroups/detail/5000002550",
            "https://www.equipmenttrader.com/listing/2004-VOLVO-L150E-5033525198#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2004&make=VOLVO&model=L150E&listing_title=Loaders&condition=Used&price=64500&vin_serial=L150EV7337",
            "https://www.equipmenttrader.com/listing/2018-VOLVO-L120H-5032679505#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2018&make=VOLVO&model=L120H&listing_title=Loaders&condition=Used&price=89500&vin_serial=632304",
            "https://www.equipmenttrader.com/listing/2017-Volvo-Loader+Bucket-5028086202#sid=860987",
            "https://www.equipmenttrader.com/dealergroups/detail/5000002074",
            "https://www.equipmenttrader.com/listing/2015-VOLVO-L110H-5036029671#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2015&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=79950&vin_serial=",
            "https://www.equipmenttrader.com/dealergroups/detail/5000002275",
            "https://www.equipmenttrader.com/listing/2018-Volvo-L110H-5036463595#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2018&make=Volvo&model=L110H&listing_title=Loaders&condition=Used&price=111500&vin_serial=",
            "https://www.equipmenttrader.com/listing/2017-Volvo-L110H-5036250290#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2017&make=Volvo&model=L110H&listing_title=Loaders&condition=Used&price=71850&vin_serial=",
            "https://www.equipmenttrader.com/listing/2019-VOLVO-L110H-5036612019#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2019&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=180000&vin_serial=VCEL110HT0S631677",
            "https://www.equipmenttrader.com/listing/2018-Volvo-L110H-5036411823#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2018&make=Volvo&model=L110H&listing_title=Loaders&condition=Used&price=139500&vin_serial=",
            "https://www.equipmenttrader.com/listing/2018-Volvo-L110H-5036411843#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2018&make=Volvo&model=L110H&listing_title=Loaders&condition=Used&price=109500&vin_serial=",
            "https://www.equipmenttrader.com/listing/-VOLVO-Attachment-5036683954#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=&make=VOLVO&model=Attachment&listing_title=Grapples&condition=Used&price=1800&vin_serial=",
            "https://www.equipmenttrader.com/listing/2018-Volvo-L110H-5035166215#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2018&make=Volvo&model=L110H&listing_title=Loaders&condition=Used&price=129500&vin_serial=",
            "https://www.equipmenttrader.com/listing/2018-VOLVO-L110H-5034845428#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2018&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=134500&vin_serial=",
            "https://www.equipmenttrader.com/listing/2016-VOLVO-L110H-5036029659#sid=860987",
            "https://www.jrwcap.com/equipmenttrader?utm_source=equipmenttrader.com&utm_medium=referral&utm_campaign=srvd-desktop&utm_content=click-here-for-monthly-payment&year=2016&make=VOLVO&model=L110H&listing_title=Loaders&condition=Used&price=79950&vin_serial=",
            "https://www.traderinteractive.com/terms/",
            "https://www.equipmenttrader.com/privacy/",
            "https://www.equipmenttrader.com/2018-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2018%3A2018",
            "https://www.equipmenttrader.com/2017-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2017%3A2017",
            "https://www.equipmenttrader.com/2024-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2024%3A2024",
            "https://www.equipmenttrader.com/2025-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2025%3A2025",
            "https://www.equipmenttrader.com/2015-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2015%3A2015",
            "https://www.equipmenttrader.com/2016-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2016%3A2016",
            "https://www.equipmenttrader.com/2019-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2019%3A2019",
            "https://www.equipmenttrader.com/2004-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2004%3A2004",
            "https://www.equipmenttrader.com/2005-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2005%3A2005",
            "https://www.equipmenttrader.com/2023-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&year=2023%3A2023",
            "https://www.equipmenttrader.com/Holland-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=holland&state=Michigan%7CMI",
            "https://www.equipmenttrader.com/Butler-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=butler&state=Wisconsin%7CWI",
            "https://www.equipmenttrader.com/Corona-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=corona&state=California%7CCA",
            "https://www.equipmenttrader.com/Annapolis-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=annapolis&state=Maryland%7CMD",
            "https://www.equipmenttrader.com/Brighton-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=brighton&state=Colorado%7CCO",
            "https://www.equipmenttrader.com/Fairfield-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=fairfield&state=New%20Jersey%7CNJ",
            "https://www.equipmenttrader.com/Belleville-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=belleville&state=Michigan%7CMI",
            "https://www.equipmenttrader.com/Colbert-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=colbert&state=Georgia%7CGA",
            "https://www.equipmenttrader.com/Crofton-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=crofton&state=Maryland%7CMD",
            "https://www.equipmenttrader.com/Elysburg-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=elysburg&state=Pennsylvania%7CPA",
            "https://www.equipmenttrader.com/Fountain-Inn-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=fountain%20inn&state=South%20Carolina%7CSC",
            "https://www.equipmenttrader.com/Jerome-Volvo-L150h/equipment-for-sale?make=Volvo%7C2424923&model=L150H%7C0&city=jerome&state=Idaho%7CID",
            "https://www.equipmenttrader.com/Volvo-L150h/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&size=STANDARD",
            "https://www.equipmenttrader.com/Wheeled-Volvo-L150h/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&movementType=WHEELED",
            "https://www.equipmenttrader.com/Volvo-L150h-Loaders/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Loaders%7C2007484",
            "https://www.equipmenttrader.com/Volvo-L150h-Bucket/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Bucket%7C2010260",
            "https://www.equipmenttrader.com/Volvo-L150h-Salvage/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Salvage%20Equipment%7C2007680",
            "https://www.equipmenttrader.com/Volvo-L150h-Forklift-Attachments/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Forklift%20Attachments%7C2000286",
            "https://www.equipmenttrader.com/Volvo-L150h-Cab/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Cab%7C2012306",
            "https://www.equipmenttrader.com/Volvo-L150h-Coupler/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Coupler%7C2011536",
            "https://www.equipmenttrader.com/Volvo-L150h-Grapples/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Grapples%7C2005240",
            "https://www.equipmenttrader.com/Volvo-L150h-Wheels/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&category=Wheels%7C644250139",
            "https://www.equipmenttrader.com/Volvo-L150h-Construction/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&segment=Construction%20Equipment%7C1227317744",
            "https://www.equipmenttrader.com/Volvo-L150h-Salvaged/equipment-for-sale?make=VOLVO%7C2424923&model=L150H%7C0&segment=Salvaged%20Equipment%7C1227318466"
          ]
        }
      },
      {
        "json": {
          "title": "Used and New Volvo l150h Wheel Loaders For Sale - MachineryZone",
          "description": "Find Used and New Volvo l150h Wheel Loaders For Sale amongst an extensive inventory of 37 listings on MachineryZone. .",
          "url": "https://www.machineryzone.com/used/wheeled-loader/1/2618/volvo/l150h.html",
          "metadata": {
            "msapplication-navbutton-color": "#EE7D11",
            "viewport": [
              "width=device-width, initial-scale=1.0, shrink-to-fit=no, maximum-scale=1, user-scalable=no",
              "width=device-width, initial-scale=1, user-scalable=yes"
            ],
            "robots": [
              "index, follow",
              "noindex, nofollow"
            ],
            "title": "Used and New Volvo l150h Wheel Loaders For Sale - MachineryZone",
            "favicon": "https://ads5-static.mbcore.io/bundles/mblinepasitefront/img/favicon-tp.ico?7.5.24",
            "google-site-verification": [
              "P5nBDb251rRGlbvi3_77FEq2u9a_p7RTCoOsKBiUehk",
              "fHYEz3mrlofGXZataaL0_C_TAN4dWhVXG9XPetDnShA",
              "fHYEz3mrlofGXZataaL0_C_TAN4dWhVXG9XPetDnShA",
              "fHYEz3mrlofGXZataaL0_C_TAN4dWhVXG9XPetDnShA",
              "fHYEz3mrlofGXZataaL0_C_TAN4dWhVXG9XPetDnShA",
              "T6bFSmsnquJ-zUSMV3Kku9K413VJ80KjprWnV_Bv5lw"
            ],
            "theme-color": "#EE7D11",
            "apple-mobile-web-app-status-bar-style": "#EE7D11",
            "description": "Find Used and New Volvo l150h Wheel Loaders For Sale amongst an extensive inventory of 39 listings on MachineryZone. ., Web survey powered by SurveyMonkey.com. Create your own online survey now with SurveyMonkey's expert certified FREE templates.",
            "language": "en-us",
            "keywords": [
              "",
              "questionnaire, questionnaires, questionaire, questionaires, free online survey, free online surveys"
            ],
            "scrapeId": "f4883476-3f6d-4659-ba0a-ea92facd8407",
            "sourceURL": "https://www.machineryzone.com/used/wheeled-loader/1/2618/volvo/l150h.html",
            "url": "https://www.machineryzone.com/used/wheeled-loader/1/2618/volvo/l150h.html",
            "statusCode": 200,
            "proxyUsed": "basic"
          },
          "links": [
            "https://www.machineryzone.com/",
            "https://www.machineryzone.com/used/1/construction-equipments.html",
            "https://www.machineryzone.com/used/1/loaders.html",
            "https://www.machineryzone.com/classified/find_url_reset/1.html",
            "https://www.machineryzone.com/remove-filter/facet_make/8600",
            "https://www.machineryzone.com/remove-filter/modele/l150h",
            "https://www.machineryzone.com/myaccount/alert/disconnected",
            "https://www.machineryzone.com/auction/wheeled-loader/46058173/volvo-l150h.html",
            "https://www.machineryzone.com/used/wheeled-loader/45509355/volvo-l150h.html",
            "https://www.machineryzone.com/used/wheeled-loader/42214890/volvo-l150h.html",
            "https://www.machineryzone.com/used/wheeled-loader/46082751/volvo-l150h-german-machine-3rd-function.html",
            "https://www.machineryzone.com/used/wheeled-loader/46082733/volvo-l-150-h.html",
            "https://www.machineryzone.com/used/wheeled-loader/45865132/volvo-l-150-h.html",
            "https://www.machineryzone.com/used/wheeled-loader/44497545/volvo-l150h.html",
            "https://www.machineryzone.com/used/wheeled-loader/45462006/volvo-l-150-h.html",
            "https://www.machineryzone.com/used/wheeled-loader/45461987/volvo-l-150-h.html",
            "https://www.machineryzone.com/used/wheeled-loader/46067709/volvo-l150h-german-machine-cdc-weight-system.html",
            "https://www.machineryzone.com/used/wheeled-loader/46067706/volvo-l150h-german-machine-automatic-greasing.html",
            "https://www.machineryzone.com/used/wheeled-loader/46066124/volvo-l150h.html",
            "https://www.machineryzone.com/auction/wheeled-loader/46064623/volvo-l150h.html",
            "https://www.machineryzone.com/used/wheeled-loader/43733682/volvo-l150h.html",
            "https://www.machineryzone.com/used/wheeled-loader/46053517/volvo-l150-h.html",
            "https://www.machineryzone.com/used/wheeled-loader/45930414/volvo-l150-h.html",
            "https://www.machineryzone.com/new/wheeled-loader/45912638/volvo-l150h-2023-new-unused-bss-cdc-3rd-valve-qc-ac-ce.html",
            "https://www.machineryzone.com/new/wheeled-loader/45912644/volvo-l150h-2023-new-unused-bss-cdc-3rd-valve-qc-ac.html",
            "https://www.machineryzone.com/new/wheeled-loader/45912655/volvo-l150h-2022-new-unused-01-optishift-ac-gp-bucket.html",
            "https://www.machineryzone.com/new/wheeled-loader/45914821/volvo-l150h-2022-new-unused-02-optishift-ac-gp-bucket.html",
            "https://www.machineryzone.com/used/wheeled-loader/46042008/volvo-l150h.html",
            "https://www.machineryzone.com/used/wheeled-loader/45687316/volvo-l150h.html",
            "https://www.machineryzone.com/used/wheeled-loader/45909367/volvo-l150h.html",
            "https://www.machineryzone.com/used/wheeled-loader/45844547/volvo-l150h-german.html",
            "https://www.machineryzone.com/used/wheeled-loader/45985374/volvo-l150h-german-machine-auto-greasing-camera.html",
            "https://www.machineryzone.com/used/wheeled-loader/45963509/volvo-l-150-h.html",
            "https://www.machineryzone.com/used/wheeled-loader/45326613/volvo-l150h.html",
            "https://www.machineryzone.com/used/wheeled-loader/45942484/volvo-l150h-german-machine-auto-greasing-camera.html",
            "https://www.machineryzone.com/used/wheeled-loader/45912793/volvo-l150h-german-machine-auto-greasing-camera.html",
            "https://www.machineryzone.com/used/wheeled-loader/45864380/volvo-l150h.html",
            "https://www.machineryzone.com/used/wheeled-loader/45864103/volvo-l-150-h.html",
            "https://www.machineryzone.com/used/wheeled-loader/45831541/volvo-l-150-h-new-2025.html",
            "https://www.machineryzone.com/used/wheeled-loader/45684512/volvo-l150h.html",
            "https://www.machineryzone.com/new/wheeled-loader/45399913/volvo-l150h-2023-new-unused-ce-bss-cdc-optishift-hydr-qc.html",
            "https://www.machineryzone.com/new/wheeled-loader/45399870/volvo-l150h-2022-new-unused-02-non-ce-gp-bucket-aircon.html",
            "https://www.machineryzone.com/used/wheeled-loader/44419847/volvo-l-150-h-new-unused-2023.html",
            "https://www.machineryzone.com/used/wheeled-loader/44400669/volvo-l-150h.html",
            "https://www.machineryzone.com/used/wheeled-loader/44387095/volvo-l-150-h.html",
            "https://www.machineryzone.com/used/wheeled-loader/44387076/volvo-l-150-h.html"
          ]
        }
      },
      {
        "json": {
          "title": "Used Volvo Wheel Loader for sale - IronPlanet",
          "description": "2017 Volvo L150H Wheel Loader. Meter: 29,422 hrs. Dominican Republic. (2,175 mi away). Buy Now. US $100,000.",
          "url": "https://www.ironplanet.com/Volvo-Wheel+Loader",
          "metadata": {
            "description": "Buy used Wheel Loaders from Volvo, Cat, Komatsu, John Deere, AGT, Case and more. Buy with confidence with our IronClad Assurance&reg;.",
            "language": "en",
            "title": "Volvo  Wheel Loader For Sale | IronPlanet",
            "name": "Volvo  Wheel Loader For Sale | IronPlanet",
            "viewport": "width=device-width,initial-scale=1.0",
            "keywords": "used Wheel Loaders, Wheel Loaders for sale, Volvo, Cat, Komatsu, John Deere, AGT, Case for sale, inspection, guarantee, Construction, Forestry, heavy equipment, Wheel Loaders auctions, buy Wheel Loaders",
            "scrapeId": "55f757eb-f45c-4010-9380-f8d609b73e70",
            "sourceURL": "https://www.ironplanet.com/Volvo-Wheel+Loader",
            "url": "https://www.ironplanet.com/Volvo-Wheel+Loader",
            "statusCode": 200,
            "contentType": "text/html; charset=UTF-8",
            "proxyUsed": "basic",
            "cacheState": "miss"
          },
          "links": [
            "https://www.ironplanet.com/Volvo-Wheel+Loader#content",
            "http://www.ironplanet.com/jsp/equip/auction.jsp?groupId=105839&kwtag=motd",
            "https://www.ironplanet.com/Volvo-Wheel+Loader",
            "https://www.ironplanet.com/?h=",
            "https://www.ironplanet.com/Wheel+Loaders",
            "https://www.ironplanet.com/Volvo-Wheel+Loader#",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&anyType=1",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&fp=D",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&fp=A",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&fp=L",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&fp=S",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&fp=B",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&fp=M",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&ica=N",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&ica=Y",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L105",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L110H",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L120",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L120D",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L120E",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L120F",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L120H",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L150E",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L150H",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L180D",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L180F",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L180H",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L20F",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L220+F",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L220E",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L220F",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L220G",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L220H",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L25F",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L25F-Z",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L260H",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L30+G2",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L30B-Z%2FX",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L30B-ZX",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L30G",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L350F",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L35B",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L35B-Z",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L35G",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L35GS",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L45F-TP",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L50D",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L50F-TP",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L50G",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L60E",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L60H",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L70D",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L70F",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L70H",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L90E",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L90F",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L90G",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&md=L90H",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-AR",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-AZ",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-CA",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-CO",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-FL",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-GA",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-IL",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-KS",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-MA",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-MD",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-MI",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-MN",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-NC",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-NM",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-OH",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-PA",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-TX",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-UT",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=USA-WI",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=CAN",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=CAN-AB",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=CAN-BC",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=CAN-ON",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=CAN-QC",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=AUS",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=AUS-NSW",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=AUS-WA",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=DOM",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=EUR",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=EUR-ESP",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=EUR-FRA",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=EUR-GBR",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=EUR-NLD",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=EUR-SWE",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&l2=PAN",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&yr=2020",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&yr=2015",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&yr=2010",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&yr=2000",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&yr=1900",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_us=-1",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_us=5000",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_us=10000",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_us=50000",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_us=100000",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_eu=-1",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_eu=100000",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_can=-1",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&p_can=100000",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&ms=I",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&ms=M",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&ms=R",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&ms=S",
            "https://www.ironplanet.com/jsp/acct/saved_search.jsp",
            "javascript:void(0);",
            "https://www.ironplanet.com/jsp/s/search.ips?m=Volvo&t=12918&sm=0",
            "https://www.ironplanet.com/jsp/s/search.ips?mode=2&sm=0&m=Volvo&t=12918",
            "https://www.ironplanet.com/jsp/s/search.ips?mode=1&sm=0&m=Volvo&t=12918",
            "https://www.ironplanet.com/jsp/s/search.ips?mode=3&sm=0&m=Volvo&t=12918",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918",
            "https://www.ironplanet.com/jsp/s/search.ips?sm=0&m=Volvo&t=12918&fp=",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2000-Volvo-L70D-Wheel-Loader-Colorado/13179581?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=1&hitprm=&pnLink=yes",
            "javascript:watchItem('13179581', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2001-Volvo-L70D-Wheel-Loader-Pennsylvania/13497086?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.5&hitprm=&pnLink=yes",
            "javascript:watchItem('13497086', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2012-Volvo-L90G-Wheel-Loader-Texas/11912883?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.33333&hitprm=&pnLink=yes",
            "javascript:watchItem('11912883', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2004-Volvo-L220E-Wheel-Loader-Illinois/13385996?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.25&hitprm=&pnLink=yes",
            "javascript:watchItem('13385996', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2005-Volvo-L220E-Wheel-Loader-Wisconsin/13425992?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.2&hitprm=&pnLink=yes",
            "javascript:watchItem('13425992', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L70H-Wheel-Loader-Illinois/13366633?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.16667&hitprm=&pnLink=yes",
            "javascript:watchItem('13366633', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2015-Volvo-L35GS-Wheel-Loader-Wisconsin/13408920?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.14286&hitprm=&pnLink=yes",
            "javascript:watchItem('13408920', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2007-Volvo-L90F-Wheel-Loader-Minnesota/11912834?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.125&hitprm=&pnLink=yes",
            "javascript:watchItem('11912834', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2019-Volvo-L120H-Wheel-Loader-Texas/12657406?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.11111&hitprm=&pnLink=yes",
            "javascript:watchItem('12657406', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2012-Volvo-L90G-Wheel-Loader-Utah/13033661?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.1&hitprm=&pnLink=yes",
            "javascript:watchItem('13033661', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2015-Volvo-L90H-Wheel-Loader-Arizona/13033659?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.09091&hitprm=&pnLink=yes",
            "javascript:watchItem('13033659', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2014-Volvo-L50G-Wheel-Loader-Florida/13039087?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.08333&hitprm=&pnLink=yes",
            "javascript:watchItem('13039087', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2020-Volvo-L150H-Wheel-Loader-Florida/13160230?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.07692&hitprm=&pnLink=yes",
            "javascript:watchItem('13160230', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2014-Volvo-L90G-Wheel-Loader-California/13033654?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.07143&hitprm=&pnLink=yes",
            "javascript:watchItem('13033654', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2012-Volvo-L50F-TP-Wheel-Loader-California/13537668?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.06667&hitprm=&pnLink=yes",
            "javascript:watchItem('13537668', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2012-Volvo-L90G-Wheel-Loader-California/13033660?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.0625&hitprm=&pnLink=yes",
            "javascript:watchItem('13033660', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2014-Volvo-L90G-Wheel-Loader-California/13033651?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.05882&hitprm=&pnLink=yes",
            "javascript:watchItem('13033651', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2015-Volvo-L90H-Wheel-Loader-California/13033652?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.05556&hitprm=&pnLink=yes",
            "javascript:watchItem('13033652', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L220H-Wheel-Loader-Colorado/13285344?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.05263&hitprm=&pnLink=yes",
            "javascript:watchItem('13285344', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2014-Volvo-L350F-Wheel-Loader-Ontario/13216900?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.05&hitprm=&pnLink=yes",
            "javascript:watchItem('13216900', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2014-Volvo-L350F-Wheel-Loader-British-Columbia/12546907?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.04762&hitprm=&pnLink=yes",
            "javascript:watchItem('12546907', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2004-Volvo-L90E-Wheel-Loader-Massachusetts/13594800?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.04545&hitprm=&pnLink=yes",
            "javascript:watchItem('13594800', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-Volvo-L120D-Wheel-Loader-Florida/13611730?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.04348&hitprm=&pnLink=yes",
            "javascript:watchItem('13611730', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-Volvo-L90G-Wheel-Loader-New-Mexico/13033650?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.04167&hitprm=&pnLink=yes",
            "javascript:watchItem('13033650', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-Volvo-L90G-Wheel-Loader-Minnesota/13033657?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.04&hitprm=&pnLink=yes",
            "javascript:watchItem('13033657', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2004-Volvo-L90E-Wheel-Loader-Florida/13611731?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.03846&hitprm=&pnLink=yes",
            "javascript:watchItem('13611731', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2005-Volvo-L90E-Wheel-Loader-Florida/13611736?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.03704&hitprm=&pnLink=yes",
            "javascript:watchItem('13611736', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-Volvo-L90G-Wheel-Loader-North-Carolina/12970685?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.03571&hitprm=&pnLink=yes",
            "javascript:watchItem('12970685', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-Volvo-L90G-Wheel-Loader-California/13033656?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.03448&hitprm=&pnLink=yes",
            "javascript:watchItem('13033656', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2012-Volvo-L90G-Wheel-Loader-Kansas/13033662?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.03333&hitprm=&pnLink=yes",
            "javascript:watchItem('13033662', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-Volvo-L60E-Wheel-Loader-Arkansas/13504182?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.03226&hitprm=&pnLink=yes",
            "javascript:watchItem('13504182', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2012-Volvo-L90G-Wheel-Loader-%28Inoperable%29-California/13033655?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.03125&hitprm=&pnLink=yes",
            "javascript:watchItem('13033655', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2014-Volvo-L105-Wheel-Loader-New-South-Wales/13083326?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.0303&hitprm=&pnLink=yes",
            "javascript:watchItem('13083326', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L150H-Wheel-Loader-DOM/13150000?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02941&hitprm=&pnLink=yes",
            "javascript:watchItem('13150000', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L220H-Wheel-Loader-DOM/13150001?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02857&hitprm=&pnLink=yes",
            "javascript:watchItem('13150001', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L150H-Wheel-Loader-PAN/9314911?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02778&hitprm=&pnLink=yes",
            "javascript:watchItem('9314911', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L150H-Wheel-Loader-PAN/9314912?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02703&hitprm=&pnLink=yes",
            "javascript:watchItem('9314912', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L150H-Wheel-Loader-ESP/12982006?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02632&hitprm=&pnLink=yes",
            "javascript:watchItem('12982006', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2020-Volvo-L90F-Wheel-Loader-Western-Australia/13459026?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02564&hitprm=&pnLink=yes",
            "javascript:watchItem('13459026', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2021-Volvo-L180H-Wheel-Loader-Western-Australia/12176274?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.025&hitprm=&pnLink=yes",
            "javascript:watchItem('12176274', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2021-Volvo-L260H-Wheel-Loader-Western-Australia/12176275?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02439&hitprm=&pnLink=yes",
            "javascript:watchItem('12176275', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L220H-Wheel-Loader-PAN/12789586?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02381&hitprm=&pnLink=yes",
            "javascript:watchItem('12789586', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2017-Volvo-L150H-Wheel-Loader-PAN/12789585?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02326&hitprm=&pnLink=yes",
            "javascript:watchItem('12789585', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2004-Volvo-L150E-Wheel-Loader-SWE/13623336?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02273&hitprm=&pnLink=yes",
            "javascript:watchItem('13623336', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2000-Volvo-L180D-Wheel-Loader-SWE/13623335?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02222&hitprm=&pnLink=yes",
            "javascript:watchItem('13623335', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2007-Volvo-L220-F-Wheel-Loader-SWE/13623334?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02174&hitprm=&pnLink=yes",
            "javascript:watchItem('13623334', false);",
            "https://www.ironplanet.com/for-sale/Wheel-Loaders-2008-Volvo-L180F-Wheel-Loader-SWE/13617536?h=5000%2Cm%7CVolvo%2Ct%7C12918&rr=0.02128&hitprm=&pnLink=yes",
            "javascript:watchItem('13617536', false);",
            "https://www.rbauction.com/2020-volvo-l70f-wheel-loader?invId=15506404&id=ci&auction=australia-aus-2025305&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
            "https://www.rbauction.com/2015-volvo-l20f-wheel-loader?invId=15633816&id=ci&auction=fort-worth-tx-2025168&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
            "https://www.rbauction.com/2018-volvo-l70h-wheel-loader?invId=15633509&id=ci&auction=denver-co-2025154&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
            "https://www.rbauction.com/2003-volvo-l150e-inoperable-wheel-loader?invId=15581268&id=ci&auction=denver-co-2025154&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
            "https://www.rbauction.com/2008-volvo-l220f-wheel-loader?invId=15588823&id=ci&auction=minneapolis-mn-2025380&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
            "https://www.rbauction.com/2005-volvo-l120e-wheel-loader?invId=15548368&id=ci&auction=minneapolis-mn-2025177&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
            "https://www.rbauction.com/2018-volvo-l70h-wheel-loader?invId=15637066&id=ci&auction=columbus-oh-2025145&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
            "https://www.rbauction.com/2019-volvo-l70h-wheel-loader?invId=15636698&id=ci&auction=columbus-oh-2025145&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
            "https://www.rbauction.com/2018-volvo-l70h-wheel-loader?invId=15637315&id=ci&auction=columbus-oh-2025145&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
            "https://www.rbauction.com/2019-volvo-l70h-wheel-loader?invId=15636841&id=ci&auction=atlanta-ga-2025325&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
            "https://www.rbauction.com/2015-volvo-l150h-wheel-loader?invId=15584158&id=ci&auction=denver-co-2025154&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
            "https://www.rbauction.com/2003-volvo-l90e-inoperable-wheel-loader?invId=15541117&id=ci&auction=phoenix-az-2025185&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
            "https://www.rbauction.com/2017-volvo-l90h-wheel-loader?invId=15572941&id=ci&auction=orlando-fl-2025359&utm_source=www.ironplanet.com&utm_medium=referral&utm_campaign=syndication",
            "https://www.ironplanet.com/jsp/s/search.ips?pstart=60&sm=0&m=Volvo&t=12918",
            "https://www.ironplanet.com/how-to-sell?kwtag=sell-section",
            "https://www.ironplanet.com/pop/terms_page.jsp?id=4&noh1=yes&kwtag=footer#section9-ps",
            "https://www.ironplanet.com/jsp/acct/watch_list.jsp"
          ]
        }
      }
    ],
    "Parse Executive Summary Output": [
      {
        "json": {
          "executive_summary": {
            "overview": "Analysis of equipment portfolio showing diverse asset classes including construction equipment, with significant variation in equipment hours and corresponding market values ranging from $25,000 to $500,000.",
            "key_findings": [
              "High-value equipment ($500,000) with minimal usage (800 hours) presents exceptional value retention opportunity",
              "Mid-tier equipment ($230,000-$290,000) shows typical utilization patterns with 2,500-3,000 hours",
              "High-utilization assets (8,000-10,500 hours) demonstrate accelerated depreciation to $65,000-$70,000 range",
              "Portfolio exhibits strong inverse correlation between equipment hours and current market value",
              "Asset mix suggests diverse operational requirements across multiple equipment categories"
            ],
            "market_conditions": "Current construction equipment market shows resilience despite economic uncertainties. Heavy machinery maintains strong residual values when properly maintained and utilized within industry standards. Low-hour equipment commands premium pricing due to remaining useful life, while high-hour assets face steeper depreciation curves as they approach major overhaul intervals.",
            "risk_assessment": {
              "risks": [
                "Technology obsolescence risk for older equipment models affecting future marketability",
                "Market volatility in construction sector impacting equipment demand and pricing",
                "High-hour equipment approaching major maintenance intervals requiring significant capital investment",
                "Geographic concentration risk if assets are located in economically sensitive regions",
                "Regulatory changes affecting emissions standards potentially impacting older equipment values"
              ],
              "mitigation_strategies": [
                "Implement proactive maintenance programs to extend asset life and preserve value",
                "Diversify asset disposal timing to avoid concentrated market exposure",
                "Consider equipment upgrades or retrofits to meet evolving regulatory requirements",
                "Establish strategic partnerships with dealers for optimized remarketing channels",
                "Monitor utilization patterns to optimize lease terms and residual value projections"
              ],
              "risk_count": 5,
              "mitigation_count": 5
            },
            "recommendations": [
              "Prioritize retention of low-hour, high-value equipment through favorable lease structuring",
              "Implement accelerated disposal strategy for assets exceeding 8,000 hours to capture remaining value",
              "Establish tiered pricing strategy based on equipment hours and remaining useful life",
              "Consider portfolio rebalancing to optimize risk-adjusted returns across asset categories"
            ],
            "next_steps": [
              "Conduct detailed equipment inspections to validate current condition assessments",
              "Obtain updated market comparables for each equipment category and hour range",
              "Develop asset-specific disposal timelines aligned with maintenance schedules",
              "Engage with specialized equipment appraisers for high-value, low-hour assets",
              "Prepare comprehensive portfolio marketing strategy for potential buyers"
            ],
            "recommendation_count": 4,
            "next_steps_count": 5
          },
          "valuation_details": {
            "initial_value": "Portfolio initial values ranging from $30,000 to $600,000 per asset",
            "48_month_values": {
              "retail": "$35,000 - $425,000 depending on equipment type and utilization",
              "market": "$30,000 - $375,000 reflecting current market conditions",
              "wholesale": "$25,000 - $325,000 for bulk or distressed sales"
            },
            "60_month_values": {
              "retail": "$28,000 - $350,000 with extended depreciation curves",
              "market": "$24,000 - $300,000 accounting for increased market exposure",
              "wholesale": "$20,000 - $250,000 reflecting longer holding periods"
            },
            "72_month_values": {
              "retail": "$22,000 - $275,000 considering extended asset life cycles",
              "market": "$18,000 - $225,000 with accumulated market risk factors",
              "wholesale": "$15,000 - $175,000 for end-of-term bulk disposals"
            },
            "parsed_valuation": {
              "time_periods": [
                "48_month",
                "60_month",
                "72_month"
              ],
              "value_types": [
                "retail",
                "market",
                "wholesale"
              ],
              "structured_values": {
                "48_month": {
                  "retail": {
                    "min": 35000,
                    "max": 425000
                  },
                  "market": {
                    "min": 30000,
                    "max": 375000
                  },
                  "wholesale": {
                    "min": 25000,
                    "max": 325000
                  }
                },
                "60_month": {
                  "retail": {
                    "min": 28000,
                    "max": 350000
                  },
                  "market": {
                    "min": 24000,
                    "max": 300000
                  },
                  "wholesale": {
                    "min": 20000,
                    "max": 250000
                  }
                },
                "72_month": {
                  "retail": {
                    "min": 22000,
                    "max": 275000
                  },
                  "market": {
                    "min": 18000,
                    "max": 225000
                  },
                  "wholesale": {
                    "min": 15000,
                    "max": 175000
                  }
                }
              },
              "initial_value_range": {
                "min": 30000,
                "max": 600000
              }
            }
          },
          "key_metrics": {
            "total_assets_analyzed": 500,
            "value_range_min": 25000,
            "value_range_max": 500000,
            "high_value_threshold": 500000,
            "high_utilization_threshold": 8000,
            "portfolio_risk_level": "High"
          },
          "summary_statistics": {
            "total_key_findings": 5,
            "total_risks": 5,
            "total_mitigations": 5,
            "total_recommendations": 4,
            "total_next_steps": 5,
            "portfolio_risk_level": "High",
            "value_range": {
              "min": 25000,
              "max": 500000
            }
          },
          "processing_metadata": {
            "parsed_at": "2025-06-20T12:55:36.712Z",
            "data_source": "claude_ai_executive_summary",
            "parsing_method": "automated_json_extraction"
          }
        }
      }
    ]
  },
  "connections": {
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Market Value Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        []
      ]
    },
    "Market Value Agent": {
      "main": [
        [
          {
            "node": "reformat into a list",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Firecrawl for URL LINKS": {
      "main": [
        [
          {
            "node": "split out data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "split out data": {
      "main": [
        [
          {
            "node": "Only return print URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out URLs of interest": {
      "main": [
        [
          {
            "node": "Loop Over URLS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "reformat into a list": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add results from search": {
      "main": [
        [
          {
            "node": "Loop Over URLS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over URLS": {
      "main": [
        [
          {
            "node": "Add Banfield inflation ratios",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Firecrawl for Markdown",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Inflation Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Inflation Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Executive Summary Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Inflation Agent": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "split incoming data": {
      "main": [
        []
      ]
    },
    "Search Firecrawl for URL LINKS1": {
      "main": [
        [
          {
            "node": "split out data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "split out data1": {
      "main": [
        [
          {
            "node": "Loop Over Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items1": {
      "main": [
        [],
        [
          {
            "node": "Firecrawl Adv Scrape Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Firecrawl for Markdown": {
      "main": [
        [
          {
            "node": "Market Value Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Residual Data": {
      "main": [
        [
          {
            "node": "Aggregated Data",
            "type": "main",
            "index": 0
          },
          {
            "node": "Prepare Residual Table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gather Assets for Evaluation": {
      "main": [
        [
          {
            "node": "Loop Over Assets",
            "type": "main",
            "index": 0
          },
          {
            "node": "Create Market Comps Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Assets": {
      "main": [
        [],
        [
          {
            "node": "Create Market Comps Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregated Data": {
      "main": [
        [
          {
            "node": "prep for scatter plot",
            "type": "main",
            "index": 0
          },
          {
            "node": "prep histogram plots",
            "type": "main",
            "index": 0
          },
          {
            "node": "Inflation Data Prep",
            "type": "main",
            "index": 0
          },
          {
            "node": "Depreciation Data Prep mod",
            "type": "main",
            "index": 0
          },
          {
            "node": "Prepare Comps Comparison Plot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "prep for scatter plot": {
      "main": [
        [
          {
            "node": "Make Hrs Vs Price Scatter Plot",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Make Hrs Vs Price Scatter Plot": {
      "main": [
        []
      ]
    },
    "prep histogram plots": {
      "main": [
        [
          {
            "node": "Histo - Model Distribution",
            "type": "main",
            "index": 0
          },
          {
            "node": "Histo - Location Distribution",
            "type": "main",
            "index": 0
          },
          {
            "node": "Histo - Year Distribution",
            "type": "main",
            "index": 0
          },
          {
            "node": "Histo - Age Distribution",
            "type": "main",
            "index": 0
          },
          {
            "node": "Histo - Utilization Distribution",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          },
          {
            "node": "Histo - Price Distribution",
            "type": "main",
            "index": 0
          },
          {
            "node": "Histo - Annual Utilization Distribution",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inflation Data Prep": {
      "main": [
        [
          {
            "node": "Inflation Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Determine Residual and OEC": {
      "main": [
        [
          {
            "node": "Save Residual Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Modified Depreciation Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Depreciation Data Prep mod": {
      "main": [
        [
          {
            "node": "Modified Depreciation Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Modified Depreciation Agent": {
      "main": [
        [
          {
            "node": "Prep Modified Depreciation output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prep Modified Depreciation output": {
      "main": [
        [
          {
            "node": "Depreciation Plots",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Executive Summary Agent": {
      "main": [
        [
          {
            "node": "Format Executive Summary Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make Histograms": {
      "main": [
        []
      ]
    },
    "Parse Executive Summary Output": {
      "main": [
        []
      ]
    },
    "Send Residual": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Exec summary Plots": {
      "main": [
        []
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "combine all data sources",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "combine all data sources": {
      "main": [
        [
          {
            "node": "Wait for other data sources",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Depreciation Plots": {
      "main": [
        []
      ]
    },
    "Prepare Residual Table": {
      "main": [
        [
          {
            "node": "Residual Table",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "Prepare Comps Table": {
      "main": [
        [
          {
            "node": "Comps Table",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 5
          }
        ]
      ]
    },
    "Format Executive Summary Output": {
      "main": [
        [
          {
            "node": "Contact Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prepare Inflation Vals": {
      "main": [
        [
          {
            "node": "Inflation Plot",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 6
          }
        ]
      ]
    },
    "Create Market Comps Sheet": {
      "main": [
        [
          {
            "node": "Create Residuals Calcs Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Residuals Calcs Sheet": {
      "main": [
        [
          {
            "node": "Make Comps Public",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make Comps Public": {
      "main": [
        [
          {
            "node": "Make Residuals Public",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make Residuals Public": {
      "main": [
        [
          {
            "node": "Search Firecrawl for URL LINKS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Add results from search",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop Over URLS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Only return print URLs": {
      "main": [
        [
          {
            "node": "Split Out URLs of interest",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Contact Info": {
      "main": [
        [
          {
            "node": "generate HTML table for Residual Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "generate HTML table for Residual Data": {
      "main": [
        [
          {
            "node": "Generate HTML table for Market Comps",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate HTML table for Market Comps": {
      "main": [
        [
          {
            "node": "Send Residual",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Inflation Plot": {
      "main": [
        []
      ]
    },
    "Prepare Comps Comparison Plot": {
      "main": [
        [
          {
            "node": "Comps Comparison Plot",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 7
          }
        ]
      ]
    },
    "Add Banfield inflation ratios": {
      "main": [
        [
          {
            "node": "Prepare Comps Table",
            "type": "main",
            "index": 0
          },
          {
            "node": "Prepare Inflation Vals",
            "type": "main",
            "index": 0
          },
          {
            "node": "Determine Residual and OEC",
            "type": "main",
            "index": 0
          },
          {
            "node": "market_comps_list",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt - Market Value Agent": {
      "main": [
        [
          {
            "node": "Prompt - Executive Summary Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt - Executive Summary Agent": {
      "main": [
        [
          {
            "node": "Prompt - Inflation Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt - Inflation Agent": {
      "main": [
        [
          {
            "node": "Prompt - Modified Depreciation Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Prompt - Modified Depreciation Agent": {
      "main": [
        [
          {
            "node": "Gather Assets for Evaluation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Enabling CORS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enabling CORS": {
      "main": [
        [
          {
            "node": "Prompt - Market Value Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait for other data sources": {
      "main": [
        [
          {
            "node": "Executive Summary Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "market_comps_list": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 8
          }
        ]
      ]
    },
    "Respond to Webhook": {
      "main": [
        [],
        [
          {
            "node": "Make Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Make Response": {
      "main": [
        [
          {
            "node": "Send data to Frontend",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "acbcc567-5987-4e00-9ed7-1f70937e6df3",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "2c0b8356e27ed81e198f8dcf735f488bd27c5cb7c939450d561d3f398ae48512"
  },
  "id": "GY8FWmxO91VQWC7X",
  "tags": []
}